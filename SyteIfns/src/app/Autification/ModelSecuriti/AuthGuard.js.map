{"version":3,"file":"AuthGuard.js","sourceRoot":"","sources":["AuthGuard.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EACU,MAAM,EAKtB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AAIjE;IACI,mBAAoB,WAA6B,EAAU,MAAc;QAArD,gBAAW,GAAX,WAAW,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE9E,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,oCAAgB,GAAhB,UAAiB,KAA6B,EAAE,KAA0B;QACtE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,2BAAO,GAAP,UAAQ,KAAY;QAChB,IAAI,GAAG,GAAG,MAAI,KAAK,CAAC,IAAM,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,8BAAU,GAAV,UAAW,GAAW;QAClB,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QACjD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACjB,CAAC;IAtBQ,SAAS;QAHrB,UAAU,CAAC;YACR,UAAU,EAAC,MAAM;SACpB,CAAC;yCAEmC,gBAAgB,EAAkB,MAAM;OADhE,SAAS,CAuBrB;IAAD,gBAAC;CAAA,AAvBD,IAuBC;SAvBY,SAAS","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n    CanActivate, Router,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    CanActivateChild,\r\n    CanLoad, Route\r\n} from '@angular/router';\r\nimport { AuthServiceDomen } from '../../PostZaprosFull/PostFull';\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n    constructor(private authService: AuthServiceDomen, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        let url: string = state.url;\r\n        return this.checkLogin(url);\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n\r\n    canLoad(route: Route): boolean {\r\n        let url = `/${route.path}`;\r\n        return this.checkLogin(url);\r\n    }\r\n\r\n    checkLogin(url: string): boolean {\r\n        if (this.authService.isLoggedIn) { return true; }\r\n        this.authService.redirectUrl = url;\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}"]}