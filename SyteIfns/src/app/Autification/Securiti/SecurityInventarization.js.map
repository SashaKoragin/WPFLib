{"version":3,"file":"SecurityInventarization.js","sourceRoot":"","sources":["SecurityInventarization.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAoB,MAAM,iBAAiB,CAAC;AAC3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,0CAA0C,CAAC;AAC9E,OAAO,EAAE,YAAY,EAAE,MAAM,uDAAuD,CAAC;AACrF,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAMhD;IAEI,8BAAmB,WAA+B,EAAS,MAAc;QAAtD,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE9E,oCAAK,GAAL;QAAA,iBAyBC;QAxBG,IAAI;YACJ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,IAAI,CAAC;gBACpC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;oBACrC,IAAI,KAAK,EAAE;wBACP,KAAI,CAAC,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC1E,IAAI,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,kBAAkB,CAAC;wBAChG,KAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;wBACnC,IAAI,gBAAgB,GAAqB;4BACrC,mBAAmB,EAAE,UAAU;4BAC/B,gBAAgB,EAAE,IAAI;yBACzB,CAAC;wBACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,gBAAgB,CAAC,CAAC;wBACnD,OAAO;qBACV;oBACD,KAAI,CAAC,WAAW,CAAC,KAAK,GAAG,4BAA4B,CAAC;oBACtD,OAAO;gBACX,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,wBAAwB,CAAC;aACjD;SACJ;QAAC,OAAO,CAAC,EAAE;YACR,KAAK,CAAC,CAAC,CAAC,CAAC;SACZ;QAAA,CAAC;IACN,CAAC;IAED,qCAAM,GAAN;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAjCQ,oBAAoB;QALhC,SAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,8BAA8B;YAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;SAC7C,CAAC;yCAGkC,kBAAkB,EAAiB,MAAM;OAFhE,oBAAoB,CAkChC;IAAD,2BAAC;CAAA,AAlCD,IAkCC;SAlCY,oBAAoB","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { AuthIdentification } from '../../PostZaprosFull/PostInventarization';\r\nimport { FullSelected } from '../../Inventarka/ModelInventarization/Inventarization';\r\nimport { deserialize } from 'class-transformer';\r\n@Component({\r\n    selector: 'inventarlogin',\r\n    templateUrl: '../Html/Inventarization.html',\r\n    styleUrls: ['../Html/Inventarization.css']\r\n})\r\nexport class LoginInventarization {\r\n\r\n    constructor(public authService: AuthIdentification, public router: Router) { }\r\n\r\n    login() {\r\n        try {\r\n        if ((this.authService.password !== null) &&\r\n            (this.authService.logins !== null)) {\r\n            this.authService.login().subscribe((model) => {\r\n                if (model) {\r\n                    this.authService.fullSelect = deserialize(FullSelected, model.toString());\r\n                    let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/inventarization';\r\n                    this.authService.isLoggedIn = true;\r\n                    let navigationExtras: NavigationExtras = {\r\n                        queryParamsHandling: 'preserve',\r\n                        preserveFragment: true\r\n                    };\r\n                    this.router.navigate([redirect], navigationExtras);\r\n                    return;\r\n                }\r\n                this.authService.error = 'Не правильный Логин/Пароль';\r\n                return;\r\n            });\r\n        } else {\r\n            this.authService.error = 'Не введен Логин/Пароль';\r\n            }\r\n        } catch (e) {\r\n            alert(e);\r\n        };\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logout();\r\n    }\r\n}"]}