{"version":3,"file":"Security.js","sourceRoot":"","sources":["Security.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAoB,MAAM,iBAAiB,CAAC;AAG3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AACxE,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAC1D,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAOjD;IAEI,wBAAmB,WAA6B,EAAS,MAAc,EAAU,OAA2B;QAAzF,gBAAW,GAAX,WAAW,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAoB;IAAI,CAAC;IAEjH,8BAAK,GAAL;QAAA,iBAgBC;QAfG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACtD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,KAAe,CAAC,CAAC;YACvE,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE;gBAC7B,KAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;gBAC/B,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACrB,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;gBAC5B,IAAI,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACtF,IAAI,gBAAgB,GAAqB;oBACrC,mBAAmB,EAAE,UAAU;oBAC/B,gBAAgB,EAAE,IAAI;iBACzB,CAAC;gBACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,gBAAgB,CAAC,CAAC;aACtD;QACL,CAAC,CAAC,CAAC;IACf,CAAC;IAED,+BAAM,GAAN;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAAA,CAAC;IACzB,CAAC;IAzBQ,cAAc;QAL1B,SAAS,CAAC;YACP,QAAQ,EAAE,OAAO;YACjB,WAAW,EAAE,yBAAyB;YACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;SACxC,CAAC;yCAGkC,gBAAgB,EAAiB,MAAM,EAAmB,kBAAkB;OAFnG,cAAc,CA0B1B;IAAD,qBAAC;CAAA,AA1BD,IA0BC;SA1BY,cAAc","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n\r\nimport { ISignalRConnection } from 'ng2-signalr';\r\nimport { ConnectionResolver } from '../../SignalRSignal/ConnectSignalR';\r\nimport { AuthServiceDomen } from '../../PostZaprosFull/PostFull';\r\nimport { ModelUser } from '../../FullSetting/FullSetting';\r\nimport { plainToClass } from 'class-transformer';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: '../Html/MySecurity.html',\r\n    styleUrls: ['../Html/MySecurity.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n    constructor(public authService: AuthServiceDomen, public router: Router, private signalR: ConnectionResolver) { }\r\n    public connection: ISignalRConnection;\r\n    login() {\r\n        this.authService.login(this.signalR.user).subscribe((model) => {\r\n            this.signalR.user.ModelUser = plainToClass(ModelUser, model as Object);\r\n            this.authService.result(this.signalR.user);\r\n                    if (this.authService.isLoggedIn) {\r\n                        this.signalR.createconection();\r\n                        this.signalR.start();\r\n                        this.signalR.welcomestart();\r\n                        let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/admin';\r\n                        let navigationExtras: NavigationExtras = {\r\n                            queryParamsHandling: 'preserve',\r\n                            preserveFragment: true\r\n                        };\r\n                        this.router.navigate([redirect], navigationExtras);\r\n                    }\r\n                });\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logout();\r\n        this.signalR.stop();;\r\n    }\r\n}"]}