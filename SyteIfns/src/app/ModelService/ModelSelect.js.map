{"version":3,"file":"ModelSelect.js","sourceRoot":"","sources":["ModelSelect.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceWcf, AngularModel } from './ModelService';\r\nimport { FormControl } from '@angular/forms';\r\nimport { forbiddenNameValidator } from '../FullSetting/FunctionValidation';\r\nimport { moment } from '../FullSetting/FormatDate';\r\n\r\n//Класс выборки\r\nclass SelectCompanent {\r\n    //Значение\r\n    value: string;\r\n    //View графика\r\n    viewValue: string;\r\n    //Номер для подстановки знака\r\n    num: number;\r\n}\r\n\r\n//Клас полей значений для проверки Validation\r\nexport class FormSelect {\r\n   public  numberPole = new FormControl('', [forbiddenNameValidator(/^((\\d{1,10}\\/{1})+(\\d{1,10})|(\\d{0,10})|(^$))$/)]);\r\n   public  stringPole = new FormControl();\r\n   public  datePole = new FormControl('', [forbiddenNameValidator(/^((((3[01]|[12][0-9]|0[1-9])\\.(1[012]|0[1 9])\\.((?:19|20)\\d{2}))\\/{1})+((3[01]|[12][0-9]|0[1-9])\\.(1[012]|0[1 9])\\.((?:19|20)\\d{2}))|((3[01]|[12][0-9]|0[1-9])\\.(1[012]|0[1 9])\\.((?:19|20)\\d{2}))|(^$))$/)]);\r\n}\r\n\r\n//Параметры создания на вместе с подстановкой\r\nexport class SelectParam {\r\n    //Наименование параметра\r\n    name: string;\r\n    //Сам параметр в выборке\r\n    nameparametr: string;\r\n    //Сам текст параметра\r\n    paramvalue: string;\r\n    //Выборка для генерации\r\n    select: SelectCompanent;\r\n    //Ун шаблона для создания типов в ковычках или без true с кавычками false без кавычек\r\n    numеrtemplate: boolean;\r\n    //Шаблон 1-Дата, 2-Текст, 3-Числа :Числа и дата это 1 шаблон только даты генерятся по другому и с кавычками методу\r\n    template: number;\r\n    //Форма шаблона\r\n    formTemplate: FormControl;\r\n\r\n}\r\n\r\nexport class LogicaParamGenerateParam {\r\n\r\n    //Модель команды отправляемой на сервер работает после Генерации для повторного использования\r\n    public modelCommandServer: AngularModel;\r\n\r\n    //Проверка Валидации всего блока при нажатии Обновить\r\n    public errorModel(select: SelectParam[]):boolean {\r\n        for (var sel of select) {\r\n            if (sel.select !== null && sel.select.num !== 0) {\r\n                if (sel.formTemplate.invalid) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n       return true;\r\n   }\r\n\r\n    //Параметр не подставляется тогда и только тогда когда все\r\n    // параметры SelectCompanent.num равны 0!!! Вожно!!!\r\n    where: string = 'Where ';\r\n\r\n    //Выборка по числам и датам\r\n    selectparamNumber: SelectCompanent[] = [\r\n        { value: '', viewValue: 'Без условия', num: 0 },\r\n        { value: ' = ', viewValue: 'Равно', num: 1 },\r\n        { value: ' <> ', viewValue: 'Не равно', num: 2 },\r\n        { value: ' > ', viewValue: 'Больше', num: 3 },\r\n        { value: ' < ', viewValue: 'Меньше', num: 4 },\r\n        { value: ' <= ', viewValue: 'Не больше', num: 5 },\r\n        { value: ' >= ', viewValue: 'Не меньше', num: 6 },\r\n        { value: ' IN ', viewValue: 'Из перечня', num: 7 } //in (1,2,3,4)\r\n    ];\r\n\r\n    //По строкам\r\n    selectparamString: SelectCompanent[] = [\r\n        { value: '', viewValue: 'Без условия', num: 0 },\r\n        { value: ' IS NULL ', viewValue: 'Пусто', num: 1 },\r\n        { value: ' IS NOT NULL ', viewValue: 'Не пусто', num: 2 },\r\n        { value: ' = ', viewValue: 'Совпадает текст', num: 3 }, //'текст'\r\n        { value: ' <> ', viewValue: 'Не совпадает', num: 4 }, //'текст'\r\n        { value: ' Like ', viewValue: 'Начинается', num: 5 }, //'текст%'\r\n        { value: ' NOT LIKE ', viewValue: 'Не начинается', num: 6 }, //'текст%'\r\n        { value: ' LIKE ', viewValue: 'Содержит', num: 7 }, // '%текст%'\r\n        { value: ' NOT LIKE ', viewValue: 'Не содержит', num: 8 }, // '%текст%'\r\n        { value: ' LIKE ', viewValue: 'Оканчивается', num: 9 }, // '%текст'\r\n        { value: ' NOT LIKE ', viewValue: 'Не оканчивается', num: 10 }, // '%текст'\r\n        { value: ' IN ', viewValue: 'Из перечня', num: 11 } // in ('1','2','3','4')\r\n    ];\r\n\r\n    ///Генерит команду и БД на которой выполнить команду\r\n    generatecommand(service: ServiceWcf, select: SelectParam[], numDb: number = 2): AngularModel {\r\n        var generate = new GenerateFullCommand();\r\n        this.modelCommandServer = generate.generateCommand(service, select, this.where, generate.generateDb(numDb));\r\n        return this.modelCommandServer;\r\n    }\r\n}\r\n\r\nclass GenerateFullCommand {\r\n\r\n    generateDb(num: number): AngularModel {\r\n        var angular = new AngularModel();\r\n        switch (num) {\r\n            case 1:\r\n                angular.Db = 'Test';\r\n                break;\r\n            case 2:\r\n                angular.Db = 'Work';\r\n                break;\r\n        }\r\n        return angular;\r\n    }\r\n\r\n\r\n\r\n    generateCommand(service: ServiceWcf, select: SelectParam[], where: string, angular: AngularModel): AngularModel {\r\n        var command: string;\r\n        var arraycommand: string = '';\r\n        for (var sel of select) {\r\n            if(sel.select != null && sel.select.num !== 0 && sel.paramvalue.trim() !== '') {\r\n                switch (sel.template) {\r\n                    case 1:\r\n                        arraycommand += this.generateDate(sel, arraycommand);\r\n                        break;\r\n                    case 2:\r\n                        arraycommand += this.generateString(sel, arraycommand);\r\n                        break;\r\n                    case 3:\r\n                        arraycommand += this.generateNumber(sel, arraycommand);\r\n                        break;\r\n                }\r\n            }\r\n          //  alert(arraycommand);\r\n        }\r\n        if (arraycommand !== '') {\r\n            command = service.ServiceWcfCommand.Command.replace('/*{@}*/', where.concat(arraycommand));\r\n        } else {\r\n            command = service.ServiceWcfCommand.Command;\r\n        }\r\n        //alert(command);\r\n        angular.Command = command;\r\n        angular.Id = service.ServiceWcfCommand.Id;\r\n        angular.Discription = service.ServiceWcfCommand.DescriptionFull;\r\n        return angular;\r\n    }\r\n\r\n    //Генерация Даты c кавычками по другой логике нужно писать логику на дату т ам по другому\r\n    generateDate(select: SelectParam, isparam: string): string {\r\n        if (new Array(2, 3, 4, 5, 6).some(x => x === select.select.num)) {\r\n            return this.generateStringAndNumber(select, isparam, `'${select.paramvalue.trim()}'`);\r\n        } else {\r\n            if (select.select.num === 1) {\r\n                return this.generateDateEqually(select, isparam, `'${select.paramvalue.trim()}' and ${select.nameparametr} < '${moment(select.paramvalue.trim(), 'DD.MM.YYYY').add(1, 'days').format('DD.MM.YYYY')}'`);\r\n            }\r\n            return this.generateStringAndNumber(select, isparam, `('${select.paramvalue.trim().replace(new RegExp(/[\\/]/g), '\\',\\'')}')`);\r\n        }\r\n    }\r\n    //Генерация строк с кавычками\r\n    generateString(select: SelectParam, isparam: string): string {\r\n        switch (select.select.num) {\r\n            case 2:\r\n                return this.generateStringAndNumber(select, isparam, '');\r\n            case 3:\r\n                return this.generateStringAndNumber(select, isparam, '');\r\n            case 4:\r\n                return this.generateStringAndNumber(select, isparam, `'${select.paramvalue.trim()}'`);\r\n            case 5:\r\n                return this.generateStringAndNumber(select, isparam, `'${select.paramvalue.trim()}'`);\r\n            case 6:\r\n                return this.generateStringAndNumber(select, isparam, `'${select.paramvalue.trim()}%'`);\r\n            case 7:\r\n                return this.generateStringAndNumber(select, isparam, `'%${select.paramvalue.trim()}%'`);\r\n            case 8:\r\n                return this.generateStringAndNumber(select, isparam, `'%${select.paramvalue.trim()}%'`);\r\n            case 9:\r\n                return this.generateStringAndNumber(select, isparam, `'%${select.paramvalue.trim()}'`);\r\n            case 10:\r\n                return this.generateStringAndNumber(select, isparam, `'%${select.paramvalue.trim()}'`);\r\n            case 11:\r\n                return this.generateStringAndNumber(select, isparam, `('${select.paramvalue.trim().replace(new RegExp(/[\\/]/g), '\\',\\'')}')`);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    //Генерация чисел без ковычек\r\n    generateNumber(select: SelectParam, isparam: string): string {\r\n        if (new Array(1,2,3,4,5,6).some(x => x === select.select.num)) {\r\n            return this.generateStringAndNumber(select, isparam, `${select.paramvalue.trim()}`);\r\n        } else {\r\n            return this.generateStringAndNumber(select, isparam, `(${select.paramvalue.trim().replace(new RegExp(/[\\/]/g), ',')})`);\r\n        }\r\n    }\r\n    ///Все таки Case на каждое число или из перечня параметра\r\n    generateStringAndNumber(select: SelectParam, isparam: string, strparam: string): string {\r\n        var str: string = '';\r\n        if (isparam !== '') {\r\n            return str.concat(' and ', select.nameparametr, select.select.value, strparam);\r\n        } else {\r\n            return str.concat(select.nameparametr, select.select.value, strparam);\r\n        }\r\n    }\r\n    ///Генерация параметра дата равно\r\n    generateDateEqually(select: SelectParam, isparam: string, strparam: string): string {\r\n        var str: string = '';\r\n        if (isparam !== '') {\r\n            return str.concat(' and ', select.nameparametr, `>${select.select.value}`, strparam);\r\n        } else {\r\n            return str.concat(select.nameparametr, `>${select.select.value}`,strparam);\r\n        }\r\n    }\r\n}"]}