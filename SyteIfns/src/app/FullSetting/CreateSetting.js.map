{"version":3,"file":"CreateSetting.js","sourceRoot":"","sources":["CreateSetting.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,2BAA2B;AAC3B;IAAA;QAEW,cAAS,GAAe;YAC3B,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE;YACtB,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE;SAC5B,CAAC;QAEK,OAAE,GAAc,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAAD,eAAC;AAAD,CAAC,AARD,IAQC;;AACD;IAAA;IAGA,CAAC;IAAD,gBAAC;AAAD,CAAC,AAHD,IAGC;AAGD,2CAA2C;AAC3C;IAAA;IAqDA,CAAC;IAnDG,yCAAW,GAAX,UAAY,UAAkB,EAAE,EAAiB;QAAjB,mBAAA,EAAA,WAAiB;QAC7C,IAAI,OAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC7C,OAAO,CAAC,EAAE,GAAG,UAAU,CAAC;QACxB,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;QAChB,OAAO,OAAO,CAAC;IACnB,CAAC;IAGD,UAAU;IACV,yCAAW,GAAX,UAAY,GAAW,EAAE,OAAoB;QACzC,QAAQ,GAAG,EAAE;YACT,KAAK,CAAC;gBACF,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACrC,KAAK,CAAC;gBACF,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC;SACxB;IACL,CAAC;IACD,aAAa;IACb,yCAAW,GAAX,UAAY,OAAoB;QAC5B,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC;QACpB,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,YAAY;IACZ,yCAAW,GAAX,UAAY,OAAoB;QAC5B,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC;QACpB,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,2CAA2C;IAC3C,2CAAa,GAAb,UAAc,IAAY,EAAE,OAAoB;QAC5C,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QACnC,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,6BAA6B;IAC7B,6CAAe,GAAf,UAAgB,IAAY,EAAE,OAAoB;QAC9C,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;QACf,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,0CAA0C;IAC1C,+CAAiB,GAAjB,UAAkB,IAAY,EAAE,OAAoB;QAChD,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;QACf,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,0CAAY,GAAZ,UAAa,YAAoB,EAAE,MAAc,EAAE,OAAe,EAAE,OAAoB;QACpF,OAAO,CAAC,EAAE,GAAG,YAAY,CAAC;QAC1B,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;QAClC,OAAO,CAAC,WAAW,CAAC,GAAG,GAAG,OAAO,CAAC;QAClC,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,0BAAC;AAAD,CAAC,AArDD,IAqDC;;AACD,iCAAiC;AACjC;IAGI,8BAAY,EAAU;QADhB,YAAO,GAAG,IAAI,WAAW,EAAE,CAAC;QAE9B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;IAC7C,CAAC;IACL,2BAAC;AAAD,CAAC,AAND,IAMC","sourcesContent":["import { FullSetting } from './FullSetting';\r\n//Переключатель для решений\r\nexport class DataBase {\r\n\r\n    public databases: DataBases[] =[\r\n        { num: 1, db: 'Тест' },\r\n        { num: 2, db: 'Рабочая' }\r\n    ];\r\n\r\n    public db: DataBases = this.databases[0];\r\n}\r\nclass DataBases {\r\n    num: number;\r\n    db: string;\r\n}\r\n\r\n\r\n//Класс для генерации настроек для процедур\r\nexport class CreateSettingSelect {\r\n\r\n    generateSql(sqlcommand: number, db: string='Work'): FullSetting {\r\n        var setting: FullSetting = new FullSetting();\r\n        setting.Id = sqlcommand;\r\n        setting.Db = db;\r\n        return setting;\r\n    }\r\n\r\n\r\n    //Выбор БД\r\n    workandtest(num: number, setting: FullSetting): FullSetting {\r\n        switch (num) {\r\n            case 1:\r\n                return this.testsetting(setting);\r\n            case 2:\r\n                return this.worksetting(setting);\r\n            default: return null;\r\n        }\r\n    }\r\n    //Тестовая БД\r\n    testsetting(setting: FullSetting): FullSetting {\r\n        setting.Db = 'Test';\r\n        return setting;\r\n    }\r\n    //Рабочая БД\r\n    worksetting(setting: FullSetting): FullSetting {\r\n        setting.Db = 'Work';\r\n        return setting;\r\n    }\r\n\r\n    //Добавления системного номеры на обработку\r\n    createaddresh(resh: number, setting: FullSetting): FullSetting {\r\n        setting.Id = 1;\r\n        setting.ParametrReshen.D270 = resh;\r\n        return setting;\r\n    }\r\n    //Запуск Автомата по решениям\r\n    createstartresh(resh: number, setting: FullSetting): FullSetting {\r\n        setting.Id = 2;\r\n        return setting;\r\n    }\r\n    //Запуск автомата по инкассовым поручениям\r\n    createstartincass(resh: number, setting: FullSetting): FullSetting {\r\n        setting.Id = 3;\r\n        return setting;\r\n    }\r\n    procedurebdk(numprocedure: number, iduser: number, message: string, setting: FullSetting):FullSetting {\r\n        setting.Id = numprocedure;\r\n        setting.ParametrBdk.N269 = iduser;\r\n        setting.ParametrBdk.D05 = message;\r\n        return setting;\r\n    }\r\n}\r\n//Генерация параметра для сервиса\r\nexport class GenerateParamService {\r\n\r\n   public setting = new FullSetting();\r\n    constructor(id: number) {\r\n        this.setting.ParamService.IdCommand = id;\r\n    }\r\n}"]}