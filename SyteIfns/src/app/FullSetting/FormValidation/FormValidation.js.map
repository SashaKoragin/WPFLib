{"version":3,"file":"FormValidation.js","sourceRoot":"","sources":["FormValidation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAkD,MAAM,gBAAgB,CAAC;AACpH,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAE,MAAM,gDAAgD,CAAC;AAC7H,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE1D,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,mCAAmC,CAAC;AAIlF,mDAAmD;AACnD,MAAM,CAAC,IAAM,yBAAyB,GAAgB,UAAC,OAAkB;IACrE,IAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvC,IAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3C,IAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvC,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACjC,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,OAAO,OAAO,CAAC,KAAK,KAAK,IAAI;WACtB,SAAS,CAAC,KAAK,KAAK,IAAI;WACxB,OAAO,CAAC,KAAK,KAAK,IAAI;WACtB,IAAI,CAAC,KAAK,KAAK,IAAI;WACnB,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACtE,CAAC,CAAC;AAEF,iBAAiB;AACjB;IAEI,yBAAmB,OAAoB,EAAS,MAAiB,EAAS,OAAoB;QAA3E,YAAO,GAAP,OAAO,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,YAAO,GAAP,OAAO,CAAa;QAC9F,sBAAsB;QACtB,aAAQ,GAAoB,IAAI,eAAe,CAAC,IAAI,QAAQ,EAAE,IAAI,YAAY,CAAC,CAAC;QAChF,sBAAsB;QACtB,SAAI,GAAoB,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,OAAO,CAAC,CAAC;QACrE,iBAAiB;QACjB,UAAK,GAAoB,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC;QACzE,sBAAsB;QACtB,WAAM,GAAoB,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC;QACjF,eAAe;QACf,kBAAa,GAAG,IAAI,cAAc,CAAO,KAAK,EAAE,EAAE,CAAC,CAAC;QACpD,iBAAiB;QACjB,qBAAgB,GAAG,IAAI,cAAc,CAAU,KAAK,EAAE,EAAE,CAAC,CAAC;QAC1D,gBAAgB;QAChB,mBAAc,GAAG,IAAI,cAAc,CAAQ,KAAK,EAAE,EAAE,CAAC,CAAC;QACtD,8BAA8B;QAC9B,iBAAY,GAAG,IAAI,SAAS,CAAC;YACzB,SAAS,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACnD,WAAW,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACrD,SAAS,EAAE,IAAI,WAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAC,EAAE,CAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,MAAM,EAAE,IAAI,WAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAC,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC1D,OAAO,EAAE,IAAI,WAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACjE,EACG,EAAE,UAAU,EAAE,yBAAyB,EAAE,CAAC,CAAC;IAvBkD,CAAC;IAyBlG,sBAAI,oCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA,CAAC,CAAC;;;OAAA;IACzD,sBAAI,sCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAE,CAAA,CAAC,CAAC;;;OAAA;IAC9D,sBAAI,oCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA,CAAA,CAAC;;;OAAA;IACxD,sBAAI,iCAAI;aAAR,cAAa,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAE,CAAA,CAAC,CAAC;;;OAAA;IACpD,sBAAI,kCAAK;aAAT,cAAc,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA,CAAC,CAAC;;;OAAA;IACrD,yBAAyB;IACzB,uCAAa,GAAb;QAAA,iBAQC;QAPG,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI;gBACnC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACtD,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;SAC3C;IACL,CAAC;IACD,uBAAuB;IACvB,oCAAU,GAAV;QAAA,iBAQC;QAPG,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI;gBAChC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAChD,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;SACxC;IACL,CAAC;IACD,wBAAwB;IACxB,qCAAW,GAAX;QAAA,iBAQC;QAPG,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,KAAK;gBAClC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YACnD,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;SACzC;IACL,CAAC;IACD,gDAAgD;IAC1C,wCAAc,GAArB;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAC;YACxB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SAEhF,CAAC,CAAC;IACN,CAAC;IACD,8CAA8C;IACvC,wCAAc,GAArB;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;YACtB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SACjF,CAAC,CAAC;IACP,CAAC;IACD,+CAA+C;IACxC,yCAAe,GAAtB;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;YACvB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SAClF,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CAAC,AApFD,IAoFC","sourcesContent":["import { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors, AbstractControl } from '@angular/forms';\r\nimport { AngularTemplate, Headers, Stone, Body,Template,NameDocument } from '../../Otdel/It/AddTemplate/Model/ModelTemplate';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatDialog, MatDialogConfig} from '@angular/material';\r\nimport { HeadersAdd, BodyAdd, StoneAdd } from './Dialog/ItTemplate/Class/Dialogs';\r\nimport { TemplateAdd } from '../../PostZaprosFull/PostFull';\r\nimport { AddTemplate } from '../../Otdel/It/AddTemplate/StartModel/AddTemplate';\r\n\r\n//Проверка Validation для добавления документа в БД\r\nexport const identityRevealedValidator: ValidatorFn = (control: FormGroup): ValidationErrors  => {\r\n    const nameDoc = control.get('nameDoc');\r\n    const manualDoc = control.get('manualDoc');\r\n    const headers = control.get('headers');\r\n    const body = control.get('body');\r\n    const stone = control.get('stone');\r\n    return nameDoc.value === null\r\n        && manualDoc.value === null\r\n        && headers.value === null\r\n        && body.value === null\r\n        && stone.value === null ? { 'identityRevealed': true } : null;\r\n};\r\n\r\n//Класс контролов\r\nexport class ControlTemplate {\r\n\r\n    constructor(public addTemp: AddTemplate, public dialog: MatDialog, public addtemp: TemplateAdd) {}\r\n    //Модель для документа\r\n    document: AngularTemplate = new AngularTemplate(new Template, new NameDocument);\r\n    //Модель для заголовка\r\n    head: AngularTemplate = new AngularTemplate(null, null, new Headers);\r\n    //Модель для тела\r\n    bodys: AngularTemplate = new AngularTemplate(null, null, null, new Body);\r\n    //Модель для основания\r\n    stones: AngularTemplate = new AngularTemplate(null, null, null, null, new Stone);\r\n    //selector Body\r\n    selectionBody = new SelectionModel<Body>(false, []);\r\n    //selector Header\r\n    selectionHeaders = new SelectionModel<Headers>(false, []);\r\n    //selector Stone\r\n    selectionStone = new SelectionModel<Stone>(false, []);\r\n    //Реактивная форма на документ\r\n    formTemplate = new FormGroup({\r\n        'nameDoc': new FormControl('', Validators.required),\r\n        'manualDoc': new FormControl('', Validators.required),\r\n        'headers': new FormControl({ value: ''}, [ Validators.required]),\r\n        'body': new FormControl({ value: ''}, Validators.required),\r\n        'stone': new FormControl({ value: '' }, [Validators.required])\r\n    },\r\n        { validators: identityRevealedValidator });\r\n\r\n    get nameDoc() { return this.formTemplate.get('nameDoc') }\r\n    get manualDoc() { return this.formTemplate.get('manualDoc' ) }\r\n    get headers() { return this.formTemplate.get('headers')}\r\n    get body() { return this.formTemplate.get('body' ) }\r\n    get stone() { return this.formTemplate.get('stone') }\r\n    //Выбор из таблицы Header\r\n    selectHeaders() {\r\n        if (this.selectionHeaders.selected.length > 0) {\r\n            this.selectionHeaders.selected.map(head => {\r\n                this.document.Template.IdHeaders = head.IdHeaders;\r\n            });\r\n        } else {\r\n            this.document.Template.IdHeaders = null;\r\n        }\r\n    }\r\n    //Выбор из таблицы Body\r\n    selectBody() {\r\n        if (this.selectionBody.selected.length > 0) {\r\n            this.selectionBody.selected.map(body => {\r\n                this.document.Template.IdBody = body.IdBody;\r\n            });\r\n        } else {\r\n            this.document.Template.IdBody = null;\r\n        }\r\n    }\r\n    //Выбор из таблицы Stone\r\n    selectStone() {\r\n        if (this.selectionStone.selected.length > 0) {\r\n            this.selectionStone.selected.map(stone => {\r\n                this.document.Template.IdStone = stone.IdStone;\r\n            });\r\n        } else {\r\n            this.document.Template.IdStone = null;\r\n        }\r\n    }\r\n    //Открытие диалогового окна на добавления Header\r\n   public openDialogHead(): void {\r\n       this.dialog.open(HeadersAdd,{\r\n           width: '600px',\r\n           data: { angulardate: this.head, adress: this.addtemp, addTemp: this.addTemp }\r\n\r\n       });\r\n    }\r\n    //Открытие диалогового окна на добавления Body\r\n    public openDialogBody(): void {\r\n        this.dialog.open(BodyAdd, {\r\n            width: '600px',\r\n            data: { angulardate: this.bodys, adress: this.addtemp, addTemp: this.addTemp }\r\n        });\r\n    }\r\n    //Открытие диалогового окна на добавления Stone\r\n    public openDialogStone(): void {\r\n        this.dialog.open(StoneAdd, {\r\n            width: '600px',\r\n            data: { angulardate: this.stones, adress: this.addtemp, addTemp: this.addTemp }\r\n        });\r\n    }\r\n}"]}