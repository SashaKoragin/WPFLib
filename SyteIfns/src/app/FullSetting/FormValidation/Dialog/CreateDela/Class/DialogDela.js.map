{"version":3,"file":"DialogDela.js","sourceRoot":"","sources":["DialogDela.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAClE,OAAO,EAAE,SAAS,EAAU,iBAAiB,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAC7E,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAkD,MAAM,gBAAgB,CAAC;AAEpH,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AACnE,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAgB,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AAOxE,2BAA2B;AAC3B,MAAM,CAAC,IAAM,aAAa,GAAgB,UAAC,OAAkB;IACzD,IAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3C,OAAO,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACvE,CAAC,CAAC;AASF;IACI,oBAAoB,YAAsC,EACtB,IAAiB,EAC1C,KAAgB;QAFP,iBAAY,GAAZ,YAAY,CAA0B;QACtB,SAAI,GAAJ,IAAI,CAAa;QAC1C,UAAK,GAAL,KAAK,CAAW;QAG3B,SAAI,GAAc,IAAI,CAAC;QACvB,aAAQ,GAAW,IAAI,CAAC;QACxB,eAAU,GAAG,IAAI,SAAS,CAAC;YACnB,WAAW,EAAE,IAAI,WAAW,CAAC,EAAE,EAC3B,CAAC,UAAU,CAAC,QAAQ,EAAE,sBAAsB,CAAC,wCAAwC,CAAC,CAAC,CAAC;SAC/F,EACD,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC;IARnC,CAAC;IAUD,sBAAI,iCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA,CAAC,CAAC;;;OAAA;IAE3D,0BAA0B;IAC1B,iCAAY,GAAZ;QAAA,iBAWC;QAVG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;YACxD,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtD,IAAI,KAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gBACnB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7C,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;aAC7B;iBAAM;gBACH,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IA5BQ,UAAU;QAPtB,SAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,CAAC,uCAAuC,CAAC;YACpD,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC,SAAS,CAAC;SACzB,CAAC;QAGO,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;yCADM,YAAY,UAE5B,SAAS;OAHlB,UAAU,CA6BtB;IAAD,iBAAC;CAAA,AA7BD,IA6BC;SA7BY,UAAU","sourcesContent":["import {FullSetting} from '../../../../FullSetting';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors, AbstractControl } from '@angular/forms';\r\nimport { PostBdk } from '../../../../../PostZaprosFull/PostFull';\r\nimport { DeloPriem } from '../../../../SelectTable/TableGenerator';\r\nimport { CreateDela } from './ModelDelaPriem';\r\nimport { plainToClass, deserialize } from 'class-transformer';\r\nimport { forbiddenNameValidator } from '../../../../FunctionValidation';\r\n//Интерфейс передачи в диалоговое окно\r\nexport interface IDialodDela {\r\n    sett: FullSetting;\r\n    dataser: PostBdk;\r\n}\r\n\r\n//Проверка  Validation Dela\r\nexport const validatorDela: ValidatorFn = (control: FormGroup): ValidationErrors => {\r\n    const delaPriem = control.get('delaPriem');\r\n    return delaPriem.value === null ? { 'validatorDela': true } : null;\r\n};\r\n\r\n@Component({\r\n    selector: 'dialog-dela',\r\n    templateUrl: '../HTML/Dela.html',\r\n    styleUrls: ['../../StyleDialog/FullDialogStyle.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [DeloPriem]\r\n})\r\nexport class DialogDela {\r\n    constructor(private MatDialogRef: MatDialogRef<DialogDela>,\r\n        @Inject(MAT_DIALOG_DATA) public data: IDialodDela,\r\n        public delop: DeloPriem) {\r\n    }\r\n\r\n    delo: CreateDela =null;\r\n    delatext: string = null;\r\n    delaCreate = new FormGroup({\r\n            'delaPriem': new FormControl('',\r\n                [Validators.required, forbiddenNameValidator(/^((\\d{4,6}\\/{1})+(\\d{4,6})|(\\d{4,6}))$/)])\r\n        },\r\n        { validators: validatorDela });\r\n\r\n    get delaPriem() { return this.delaCreate.get('delaPriem') }\r\n\r\n    //Создание дел приема КРСБ\r\n    addDeloCrete() {\r\n        this.data.sett.DeloPriem.addarraystring(this.delatext.split(/\\//));\r\n        this.data.dataser.createkrsb(this.data.sett).subscribe(model => {\r\n            this.delo = deserialize(CreateDela, model.toString());\r\n            if (this.delo != null) {\r\n                this.delop.addTable(this.delo.TableInfoDelo);\r\n                this.delop.yesdate = true;\r\n            } else {\r\n                this.delop.yesdate = false;\r\n            }\r\n        });\r\n    }\r\n}"]}