{"version":3,"file":"DialogOkato.js","sourceRoot":"","sources":["DialogOkato.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACrE,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAClE,OAAO,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AACtF,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AAcxE;IACI,qBAAoB,YAAuC,EACvB,IAAkB;QADlC,iBAAY,GAAZ,YAAY,CAA2B;QACvB,SAAI,GAAJ,IAAI,CAAc;QAGtD,cAAS,GAAG,IAAI,SAAS,CAAC;YACtB,OAAO,EAAE,IAAI,WAAW,CAAC,EAAE,EACvB,CAAC,UAAU,CAAC,QAAQ,EAAE,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC;SACnE,CAAC,CAAC;QAIH,YAAO,GAAU,IAAI,CAAC;IATtB,CAAC;IAOD,sBAAI,8BAAK;aAAT,cAAc,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA,CAAC,CAAC;;;OAAA;IAIlD,8BAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,QAAQ,GAAG,IAAI,mBAAmB,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtE,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3C,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YAClD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAvBQ,WAAW;QANvB,SAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,oBAAoB;YACjC,SAAS,EAAE,CAAC,uCAAuC,CAAC;YACpD,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACxC,CAAC;QAGO,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;yCADM,YAAY;OADrC,WAAW,CAwBvB;IAAD,kBAAC;CAAA,AAxBD,IAwBC;SAxBY,WAAW","sourcesContent":["import { PostBdk } from  '../../../../../PostZaprosFull/PostFull';\r\nimport { Component, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { GenerateParamService, CreateSettingSelect } from '../../../../CreateSetting';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { forbiddenNameValidator } from '../../../../FunctionValidation';\r\n\r\nexport interface IDialodOkato {\r\n    logica: PostBdk;\r\n    delo: number;\r\n    numberproc: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-okato',\r\n    templateUrl: '../HTML/Okato.html',\r\n    styleUrls: ['../../StyleDialog/FullDialogStyle.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DialogOkato {\r\n    constructor(private MatDialogRef: MatDialogRef<DialogOkato>,\r\n        @Inject(MAT_DIALOG_DATA) public data: IDialodOkato) {\r\n    }\r\n\r\n    delaOkato = new FormGroup({\r\n        'okato': new FormControl('',\r\n            [Validators.required, forbiddenNameValidator(/^(\\d{11})$/)])\r\n    });\r\n\r\n    get okato() { return this.delaOkato.get('okato') }\r\n\r\n    message:string = null;\r\n\r\n    addokato() {\r\n        this.message = null;\r\n        var setting = new GenerateParamService(this.data.numberproc);\r\n        var createdb = new CreateSettingSelect().worksetting(setting.setting);\r\n        createdb.DeloCreate.D3979 = this.data.delo;\r\n        createdb.DeloCreate.Okato = this.okato.value;\r\n        this.data.logica.analizkrsb(createdb).subscribe((model) => {\r\n            this.message = JSON.stringify(model);\r\n        });\r\n    }\r\n}"]}