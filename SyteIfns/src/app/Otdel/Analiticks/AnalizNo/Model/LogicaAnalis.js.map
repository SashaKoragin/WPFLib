{"version":3,"file":"LogicaAnalis.js","sourceRoot":"","sources":["LogicaAnalis.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors, AbstractControl } from '@angular/forms';\r\nimport { PostBdk, ServiceModel} from '../../../../PostZaprosFull/PostFull'\r\nimport { GenerateParamService, CreateSettingSelect } from '../../../../FullSetting/CreateSetting';\r\nimport { DateModel } from '../../../../FullSetting/DateModelFull';\r\nimport { ServiceWcf } from '../../../../ModelService/ModelService';\r\nimport { NoAnalizTable } from '../../../../FullSetting/SelectTable/TableGenerator';\r\nimport { No } from './ModelAnaliz';\r\nimport { ParametrSelectMail } from '../../../../ModelService/SelectCommand';\r\nimport { plainToClass, deserialize } from 'class-transformer';\r\nimport { ParamLogica } from '../../../../FullSetting/SelectTable/LogicaSelect';\r\nimport { LogicaSelecting } from './AnalizZapros';\r\nimport { validatorDate, forbiddenNameValidator } from '../../../../FullSetting/FunctionValidation';\r\nimport { LogicaParamGenerateParam } from '../../../../ModelService/ModelSelect';\r\nimport { DialogOpenAddOkato } from '../../../../FullSetting/FormValidation/OpenDialog/OpenDialog';\r\nimport { MatDialog } from '@angular/material';\r\nexport class LogicaAnaliz {\r\n    no: No = null;\r\n    wcf: ServiceWcf = null;\r\n    table: NoAnalizTable = new NoAnalizTable();\r\n    paramlogica: ParamLogica = new ParamLogica();\r\n    constructor(public datekrsb: PostBdk, private service: ServiceModel, private select: LogicaParamGenerateParam, public dialog: MatDialog ) { }\r\n    messageserver: string = null;\r\n    logicaSelecting: LogicaSelecting = new LogicaSelecting();\r\n    opendialog: DialogOpenAddOkato = new DialogOpenAddOkato(this.dialog, this.datekrsb);\r\n    dateCreate = new FormGroup({\r\n        'dateCreate': new FormControl('',\r\n            [Validators.required, validatorDate()])\r\n    });\r\n\r\n    idCreate = new FormGroup({\r\n        'id': new FormControl('',\r\n            [Validators.required, forbiddenNameValidator(/^((\\d{4,6}\\/{1})+(\\d{4,6})|(\\d{4,6}))$/)])\r\n    });\r\n\r\n    get createDate() { return this.dateCreate.get('dateCreate'); }\r\n\r\n    get id() { return this.idCreate.get('id'); }\r\n\r\n    servermodel() {\r\n        try {\r\n            var generate = new GenerateParamService(21);\r\n            this.service.modelservice(generate.setting).subscribe((model) => {\r\n                this.wcf = deserialize(ServiceWcf, model.toString());\r\n            });\r\n        } catch (e) {\r\n            alert(e.toString());\r\n        }\r\n    }\r\n\r\n    addtable(no: No) {\r\n        this.table.addTableDelo(no.Delo);\r\n    }\r\n    ///Главная функция анализа по значениям и по дате\r\n    analiz(num: number) {\r\n        try {\r\n        this.messageserver = null;\r\n        var setting = new GenerateParamService(num); //Номер это какая процедура выполняется\r\n        var createdb = new CreateSettingSelect().worksetting(setting.setting); //Установка рабочей БД\r\n       // alert(this.createDate.value + 'Дата приема');\r\n       // alert(this.id.value + 'Дела приема');\r\n        if (this.createDate.value === '') {\r\n            createdb.DeloPriem.addarraystring(this.id.value.split(/\\//));\r\n        } else {\r\n            createdb.DeloCreate.datezaprosa(this.createDate.value);\r\n        }\r\n       // alert(JSON.stringify(createdb));\r\n        this.datekrsb.analizkrsb(createdb).subscribe((model) => {\r\n            this.messageserver = JSON.stringify(model);\r\n            });\r\n        } catch (e) {\r\n            alert(e.toString());\r\n        }\r\n    }\r\n\r\n    updatemodel() {\r\n        this.service.datacommandserver(this.select.modelCommandServer).subscribe((model) => {\r\n                    this.no = deserialize(No, model.toString());\r\n                    if (this.no != null) {\r\n                        this.addtable(this.no);\r\n                        this.table.addTableAnaliz(null);\r\n                        this.paramlogica.errornull = true;\r\n                    } else {\r\n                        this.table.addTableAnaliz(null);\r\n                        this.paramlogica.errornull = false;\r\n                    }\r\n        });\r\n    }\r\n\r\n    startprocedure(numDelo: number, num: number) {\r\n        this.messageserver = null;\r\n        var setting = new GenerateParamService(num);\r\n        var createdb = new CreateSettingSelect().worksetting(setting.setting);\r\n        createdb.DeloCreate.D3979 = numDelo;\r\n        this.datekrsb.analizkrsb(createdb).subscribe((model) => {\r\n            this.messageserver = JSON.stringify(model);\r\n            this.updatemodel();\r\n        });\r\n    }\r\n}"]}