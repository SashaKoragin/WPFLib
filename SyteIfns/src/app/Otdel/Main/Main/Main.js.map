{"version":3,"file":"Main.js","sourceRoot":"","sources":["Main.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAE,KAAK,EAAa,MAAM,0BAA0B,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AACtD,OAAO,EAAE,uBAAuB,EAAE,MAAM,wBAAwB,CAAC;AACjE,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAC;AACrD,OAAO,2BAA2B,CAAC;AACnC,IAAM,GAAG,GAAG,MAAM,CAAC,CAAE,aAAa;AASlC;IAKI,cAAY,QAAe;QAA3B,iBAIC;QARD,aAAQ,GAAW,IAAI,CAAC;QACxB,UAAK,GAAW,IAAI,CAAC;QAQrB,mBAAc,GAAG,UAAC,CAAS,EAAE,QAAoB,IAAK,OAAA,CAAC,QAAQ,CAAC,KAAK,EAAf,CAAe,CAAC;QAC9D,iBAAY,GAAG,UAAC,IAAgB,IAAK,OAAA,IAAI,CAAC,QAAQ,EAAb,CAAa,CAAC;QALvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,CAAa,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,GAAG,IAAI,uBAAuB,EAAE,CAAC;QACtD,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,IAAI,EAAjC,CAAiC,CAAC,CAAC;IAC7E,CAAC;IAID,0BAAW,GAAX,UAAY,IAAgB;QACxB,IAAI,CAAC,QAAQ,GAAG,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC;IACjD,CAAC;IAhBQ,IAAI;QAPhB,SAAS,CAAC,CAAC;YACR,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,SAAS,EAAE,CAAC,KAAK,CAAC;SACrB,CAAQ,CAAC;yCAOgB,KAAK;OALlB,IAAI,CAiBhB;IAAD,WAAC;CAAA,AAjBD,IAiBC;SAjBY,IAAI","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Otdel, ModelOtdel} from '../ModelOtdel/ModelOtdel';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport * as images from '../../../Images/ImageConst';\r\nimport 'signalr/jquery.signalR.js';\r\nconst img = images;  //Для WebPack\r\n\r\n@Component(({\r\n    selector: 'app-root',\r\n    templateUrl: '../Html/Main.html',\r\n    styleUrls: ['../Html/MainStyle.css'],\r\n    providers: [Otdel]\r\n}) as any)\r\n\r\nexport class Main {\r\n    fullpath: string = null;\r\n    model: string = null;\r\n    nestedTreeControl: NestedTreeControl<ModelOtdel>;\r\n    nestedDataSource: MatTreeNestedDataSource<ModelOtdel>;\r\n    constructor(database: Otdel) {\r\n        this.nestedTreeControl = new NestedTreeControl<ModelOtdel>(this._getChildren);\r\n        this.nestedDataSource = new MatTreeNestedDataSource();\r\n        database.dataChange.subscribe(data => this.nestedDataSource.data = data);\r\n    }\r\n    hasNestedChild = (_: number, nodeData: ModelOtdel) => !nodeData.types;\r\n    private _getChildren = (node: ModelOtdel) => node.children;\r\n\r\n    selectmodel(node: ModelOtdel) {\r\n        this.fullpath = 'Ветка: '+node.fullpath;\r\n        this.model = 'Предназначение: ' + node.model;\r\n    }\r\n}"]}