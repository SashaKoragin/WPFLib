{"version":3,"file":"Predproverka.js","sourceRoot":"","sources":["Predproverka.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ServiceModel, PostSoprovod, DonloadFileReport } from '../../../../PostZaprosFull/PostFull';\r\nimport { GenerateParamService } from '../../../../FullSetting/CreateSetting';\r\nimport { AdressMerge } from '../../../../AdressFullRest/AdresSservice';\r\nimport { DonloadFile } from '../../../../FullSetting/DonloadFileServer/DonloadFile';\r\nimport { ServiceWcf }  from '../../../../ModelService/ModelService';\r\nimport { deserialize } from 'class-transformer';\r\nimport { FullSetting } from '../../../../FullSetting/FullSetting';\r\nimport { CreateSettingSelect } from '../../../../FullSetting/CreateSetting';\r\nimport { Soprovod,DocumentDetalization,DocumentReglament } from '../Model/Model'\r\nimport { BlocsInfoButton } from '../../../../FullSetting/ProcessFull';\r\nimport { ParametrSelectMail } from '../../../../ModelService/SelectCommand';\r\nimport { ParamLogica } from '../../../../FullSetting/SelectTable/LogicaSelect';\r\nimport { PredproverkaTable } from '../../../../FullSetting/SelectTable/TableGenerator';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\n\r\n@Component(({\r\n    selector: 'soprovod',\r\n    templateUrl: '../Template/Predproverka.html',\r\n    styleUrls: ['../Template/Style.css'],\r\n    providers: [PostSoprovod, ServiceModel, DonloadFileReport]\r\n}) as any)\r\n\r\nexport class Predproverka implements OnInit {\r\n    constructor(private dataservice: PostSoprovod, private service: ServiceModel, public donloadreport: DonloadFileReport) { }\r\n    status: BlocsInfoButton = new BlocsInfoButton();\r\n    select = new CreateSettingSelect();\r\n    predproverkatable: PredproverkaTable = new PredproverkaTable();\r\n    wcf: ServiceWcf = null;\r\n    adress: AdressMerge = new AdressMerge();\r\n    soprovod: Soprovod = null;\r\n    @ViewChild(MatPaginator) paginatordataSource: MatPaginator;\r\n    setting: FullSetting = new FullSetting();\r\n    paramlogica: ParamLogica = new ParamLogica();\r\n    selecting: ParametrSelectMail = new ParametrSelectMail();\r\n    donloadfile: DonloadFile = new DonloadFile(this.donloadreport);\r\n    ngOnInit(): void {\r\n        try {\r\n            var generate = new GenerateParamService(14);\r\n            this.service.modelservice(generate.setting).subscribe((model) => {\r\n                this.wcf = deserialize(ServiceWcf, model.toString());\r\n            });\r\n        } catch (e) {\r\n            alert(e.toString());\r\n        }\r\n    }\r\n\r\n    startprocedurepred(index: number) {\r\n        var setting1 = this.select.workandtest(2, this.setting);\r\n        setting1.ParamPredproverka.N441 = this.setting.ParamPredproverka.N441;\r\n        setting1.Id = index;\r\n        switch (index) {\r\n            case 1:\r\n                 this.dataservice.procedurestart(setting1).subscribe((model) => {\r\n                 this.status.messagestatus = JSON.stringify(model);\r\n                }\r\n            );\r\n                break;\r\n            case 2:\r\n                setting1.ParamPredproverka.N441 = 0;\r\n                this.status.blockprocedure('выстановлению статусов');\r\n                this.dataservice.procedurestart(setting1).subscribe((model) => {\r\n                this.status.blockprocedure(JSON.stringify(model));\r\n                }\r\n            );\r\n                break;\r\n            case 3:\r\n                setting1.ParamPredproverka.N441 = 0;\r\n                this.status.blockprocedure('созданию документа');\r\n                this.dataservice.procedurestart(setting1).subscribe((model) => {\r\n                this.status.blockprocedure(JSON.stringify(model));\r\n                }\r\n            );\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    update() {\r\n        try {\r\n                this.paramlogica.logicaselect(); //Закрываем логику выбора\r\n                this.paramlogica.logicaprogress(); //Открываем логику загрузки\r\n                this.service.datacommandserver(\r\n                    this.selecting.generatecommand(\r\n                        this.wcf,\r\n                        this.selecting.paramepredproverka)).subscribe((model) => {\r\n                    this.soprovod = deserialize(Soprovod, model.toString());\r\n                    this.paramlogica.logicaprogress(); //Закрываем логику загрузки\r\n                    this.paramlogica.logicadatabase(); //Открываем логику Данных\r\n                   if (this.soprovod != null) {\r\n                       this.predproverkatable.dataSourceDocumentReglament =\r\n                           new MatTableDataSource<DocumentReglament>(this.soprovod.DocumentReglament);\r\n                       this.predproverkatable.dataSourceDocumentReglament.paginator = this.paginatordataSource;\r\n                        this.paramlogica.errornull = true;\r\n                    } else {\r\n                        this.paramlogica.errornull = false;\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                alert(e.toString());\r\n            }\r\n        }\r\n\r\n    detaliz(detalization: DocumentDetalization) {\r\n        var detal: DocumentDetalization[];\r\n          detal = [detalization];\r\n            this.paramlogica.logicadatabase(); //Закрываем логику Данных\r\n            this.paramlogica.detalization();   //Открываем детализацию\r\n        this.predproverkatable.dataSourceDocumentDetalization = new MatTableDataSource<DocumentDetalization>(detal);\r\n        }\r\n\r\n        back(num: number) {\r\n            switch (num) {\r\n                case 1:\r\n                    this.paramlogica.logicadatabase(); //Закрываем логику Данных\r\n                    this.paramlogica.logicaselect(); //Открываем логику загрузки\r\n                    break;\r\n                case 2:\r\n                    this.paramlogica.logicadatabase(); //Открываем логику Данных\r\n                    this.paramlogica.detalization(); //Закрываем детализацию\r\n                    break;\r\n            }\r\n        }\r\n}"]}