{"version":3,"file":"Servers.js","sourceRoot":"","sources":["Servers.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,qCAAqC,CAAC;AACpE,OAAO,EAAE,YAAY,EAAE,MAAM,oDAAoD,CAAC;AAClF,OAAO,EAAE,mBAAmB,EAAE,MAAM,uCAAuC,CAAC;AAC5E,OAAO,EAAE,iBAAiB,EAAc,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACnF,OAAO,KAAK,QAAQ,MAAM,qCAAqC,CAAC;AAEhE,IAAM,GAAG,GAAG,QAAQ,CAAC,CAAE,aAAa;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAQhD;IAKI,gBAAoB,UAAyB;QAAzB,eAAU,GAAV,UAAU,CAAe;QAH7C,gBAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QAChC,WAAM,GAAiB,IAAI,YAAY,EAAE,CAAC;QAC1C,YAAO,GAAwB,IAAI,mBAAmB,EAAE,CAAC;IAGzD,CAAC;IAED,yBAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;YAC/C,IAAI,MAAM,GAAG,WAAW,CAAC,iBAAiB,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC9D,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC1C,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2BAAU,GAAV,UAAW,OAAmB;QAC1B,QAAQ,OAAO,CAAC,MAAM,EAAE;YACpB,KAAK,SAAS;gBACV,OAAO,OAAO,CAAC;YACnB,KAAK,UAAU;gBACX,OAAO,KAAK,CAAC;YACjB,KAAK,4BAA4B;gBAC7B,OAAO,SAAS,CAAC;SACxB;IACL,CAAC;IA5BQ,MAAM;QAPlB,SAAS,CAAC,CAAC;YACR,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;YAClC,SAAS,EAAC,CAAC,aAAa,CAAC;SAC5B,CAAQ,CAAC;yCAO0B,aAAa;OALpC,MAAM,CA6BlB;IAAD,aAAC;CAAA,AA7BD,IA6BC;SA7BY,MAAM","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ServersSqlAll } from '../../../../PostZaprosFull/PostFull';\r\nimport { ServersTable } from '../../../../FullSetting/SelectTable/TableGenerator';\r\nimport { CreateSettingSelect } from '../../../../FullSetting/CreateSetting';\r\nimport { ServerAndComputer, ServerIfns, ServerModel } from '../Model/ServersModel';\r\nimport * as svgsheme from '../../../../Images/Svg/SvgFileConst';\r\n\r\nconst svg = svgsheme;  //Для WebPack\r\nimport { deserialize } from 'class-transformer';\r\n@Component(({\r\n    selector: 'my-letter',\r\n    templateUrl: '../Html/Servers.html',\r\n    styleUrls: ['../Html/Servers.css'],\r\n    providers:[ServersSqlAll]\r\n}) as any)\r\n\r\nexport class Server implements OnInit {\r\n\r\n    servermodel = new ServerModel();\r\n    server: ServersTable = new ServersTable();\r\n    setting: CreateSettingSelect = new CreateSettingSelect();\r\n    constructor(private serverFull: ServersSqlAll) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        var settings = this.setting.generateSql(29);\r\n        console.log(JSON.stringify(settings));\r\n        this.serverFull.sqlServer(settings).subscribe(model => {\r\n            var server = deserialize(ServerAndComputer, model.toString());\r\n            this.server.addServers(server.ServerIfns);\r\n            this.servermodel.select(server.ServerIfns);\r\n        });\r\n    }\r\n\r\n    stylecolor(element: ServerIfns) {\r\n        switch (element.Status) {\r\n            case 'Success':\r\n                return 'green';\r\n            case 'TimedOut':\r\n                return 'red';\r\n            case 'DestinationHostUnreachable':\r\n                return '#6d3106';\r\n        }\r\n    }\r\n}"]}