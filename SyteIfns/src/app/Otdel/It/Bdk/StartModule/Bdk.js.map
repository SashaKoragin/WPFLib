{"version":3,"file":"Bdk.js","sourceRoot":"","sources":["Bdk.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ModelBdk } from '../Model/BdkModel';\r\nimport { FullSetting } from '../../../../FullSetting/FullSetting';\r\nimport { PostBdk, DonloadFileReport  } from '../../../../PostZaprosFull/PostFull';\r\nimport { CreateSettingSelect} from '../../../../FullSetting/CreateSetting';\r\nimport { BlocsInfoButton } from '../../../../FullSetting/ProcessFull';\r\nimport { deserialize } from 'class-transformer';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DialogOpenCreateDela } from '../../../../FullSetting/FormValidation/OpenDialog/OpenDialog'\r\nimport { AdressMerge } from '../../../../AdressFullRest/AdresSservice';\r\nimport { DonloadFile } from '../../../../FullSetting/DonloadFileServer/DonloadFile';\r\n\r\n@Component(({\r\n    selector: 'my-bdk',\r\n    templateUrl: '../Template/Bdk.html',\r\n    styleUrls: ['../Template/BdkStyle.css'],\r\n    providers: [PostBdk, MatDialog, DonloadFileReport ]\r\n}) as any)\r\n\r\nexport class BdkIt implements OnInit {\r\n\r\n    constructor(private dataservice: PostBdk, public dialog: MatDialog, public donloadreport: DonloadFileReport) { }\r\n\r\n    bloks: BlocsInfoButton = new BlocsInfoButton();\r\n    bdk: ModelBdk = null;\r\n    setting: FullSetting = new FullSetting();\r\n    select = new CreateSettingSelect();\r\n    dialogs: DialogOpenCreateDela = new DialogOpenCreateDela(this.dialog, this.setting, this.dataservice);\r\n    adress: AdressMerge = new AdressMerge();\r\n    donloadfile: DonloadFile = new DonloadFile(this.donloadreport);\r\n\r\n    //Старт блока\r\n    ngOnInit(): void {\r\n        this.loadbdkstatistic();\r\n    }\r\n    //Подгрузка данных для БДК\r\n    loadbdkstatistic() {\r\n        try {\r\n            this.dataservice.modelbdk(this.select.worksetting(this.setting)).subscribe((model) => {\r\n                this.bdk = deserialize(ModelBdk, model.toString());\r\n            });\r\n        } catch (e) {\r\n            console.log(e.toString());\r\n        }\r\n    }\r\n    //Выполнение процедур для БДК\r\n    storeprocedure(numprocedure: number, iduser: number, message: string) {\r\n        if (this.setting.ParametrBdk.valid()) {\r\n        switch (numprocedure) {\r\n            case 1:\r\n                this.bloks.blockprocedure('анализу данных BDK');\r\n                break;\r\n            case 2:\r\n                this.bloks.blockprocedure('созданию данных BDK');\r\n                break;\r\n        }\r\n        this.dataservice.startprocedurebdk(\r\n            this.select.procedurebdk(\r\n                numprocedure,\r\n                iduser,\r\n                message,\r\n                this.select.worksetting(this.setting))).subscribe(\r\n            (model) => {\r\n                this.bloks.blockprocedure(JSON.stringify(model));\r\n                this.loadbdkstatistic();\r\n            }\r\n            );\r\n        }\r\n    }\r\n}"]}