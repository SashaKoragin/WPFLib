{"version":3,"file":"Report.js","sourceRoot":"","sources":["Report.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors} from '@angular/forms'\r\nimport { BroadcastEventListener } from 'ng2-signalr';\r\nimport { Kam5Report } from '../../../../PostZaprosFull/PostFull';\r\nimport { Parametr } from '../Model/ModelParametr';\r\nimport { ConvertDate } from '../../../../FullSetting/FormatDate';\r\nimport { ConnectionResolver } from '../../../../SignalRSignal/ConnectSignalR';\r\n\r\nconst validreport: ValidatorFn = (control: FormGroup):\r\n    ValidationErrors => {\r\n    const qvartal = control.get('qvartal');\r\n    const god = control.get('god');\r\n    const reportvid = control.get('reportvid');\r\n    const p1 = control.get('p1');\r\n    const date = control.get('date');\r\n    const errdetal = control.get('errdetal');\r\n    return qvartal.value === null\r\n        && god.value === null\r\n        && reportvid.value === null\r\n        && p1.value === null\r\n        && date.value === null\r\n        && errdetal.value === null ? { 'validator': true } : null;\r\n    };\r\n\r\n\r\n@Component(({\r\n    selector: 'reportkam5',\r\n    templateUrl: '../Template/ReportKam5.html',\r\n    styleUrls: ['../Template/ReportKam5.css'],\r\n    providers: [Kam5Report]\r\n}))\r\nexport class ReportKam5 implements OnInit, OnDestroy {\r\n\r\n    constructor(public httpclient: Kam5Report, public signalR: ConnectionResolver ) { }\r\n\r\n    convertDate: ConvertDate = new ConvertDate();\r\n    public onMessageSent = null;\r\n    parametr: Parametr = new Parametr();\r\n    public serverMessages: string[] = [];\r\n\r\n    formtemplateReport = new FormGroup({\r\n            'qvartal': new FormControl('', Validators.required),\r\n            'god': new FormControl('', Validators.required),\r\n            'reportvid': new FormControl('', Validators.required),\r\n            'p1': new FormControl('', Validators.required),\r\n            'date': new FormControl(new Date(), Validators.required),\r\n            'errdetal': new FormControl('', Validators.required)\r\n        },\r\n        { validators: validreport });\r\n\r\n    get qvartal() { return this.formtemplateReport.get('qvartal') }\r\n\r\n    get god() { return this.formtemplateReport.get('god') }\r\n\r\n    get reportvid() { return this.formtemplateReport.get('reportvid') }\r\n\r\n    get p1() { return this.formtemplateReport.get('p1') }\r\n\r\n    get date() { return this.formtemplateReport.get('date') }\r\n\r\n    get errdetal() { return this.formtemplateReport.get('errdetal') }\r\n\r\n    ngOnInit(): void {\r\n        console.log('Запустили подпись на событие процедуры сервера!');\r\n        this.onMessageSent = new BroadcastEventListener<string>('SqlServer');\r\n        this.signalR.conect.listen(this.onMessageSent);\r\n        this.onMessageSent.subscribe((sendChatMessage: string) => {\r\n           this.serverMessages.push(sendChatMessage);\r\n        });\r\n    }\r\n\r\n   reportstart(date: any) {\r\n        this.serverMessages = [];\r\n        this.signalR.user.Db = 'Work';\r\n        this.signalR.user.ParamService.IdCommand = 28;\r\n        this.parametr.createModelPost(this.signalR.user, this.convertDate.convertDateToServer(date));\r\n       this.httpclient.reportFile(this.signalR.user);\r\n       this.qvartal.reset();\r\n       this.formtemplateReport.reset();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n        this.onMessageSent = null;\r\n    }\r\n}"]}