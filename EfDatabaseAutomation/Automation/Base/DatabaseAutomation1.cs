

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "EfDatabaseAutomation\App.config"
//     Connection String Name: "DatabaseAutomation"
//     Connection String:      "Data Source=77068-app065;Initial Catalog=Automation;Integrated Security=True;MultipleActiveResultSets=True"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Standard Edition (64-bit)
// Database Engine Edition : Standard
// Database Version        : 12.0.5223.6

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace EfDatabaseAutomation.Automation.Base
{
    using Newtonsoft.Json;

    #region Unit of work

    public interface IAutomation : System.IDisposable
    {
        System.Data.Entity.DbSet<AddDocumentToContainer> AddDocumentToContainers { get; set; } // AddDocumentToContainer
        System.Data.Entity.DbSet<AddUlFace> AddUlFaces { get; set; } // AddUlFace
        System.Data.Entity.DbSet<AddUlFaceWeb> AddUlFaceWebs { get; set; } // AddUlFaceWeb
        System.Data.Entity.DbSet<AisDocument> AisDocuments { get; set; } // AisDocument
        System.Data.Entity.DbSet<AisGrnDocument> AisGrnDocuments { get; set; } // AisGrnDocument
        System.Data.Entity.DbSet<AllFaceRegistryReference> AllFaceRegistryReferences { get; set; } // AllFaceRegistryReference
        System.Data.Entity.DbSet<AllJournal129> AllJournal129 { get; set; } // AllJournal129
        System.Data.Entity.DbSet<AllJournalRegistrationFl> AllJournalRegistrationFls { get; set; } // AllJournalRegistrationFl
        System.Data.Entity.DbSet<AllPatent> AllPatents { get; set; } // AllPatent
        System.Data.Entity.DbSet<Book> Books { get; set; } // Book
        System.Data.Entity.DbSet<BookPurchase> BookPurchases { get; set; } // BookPurchase
        System.Data.Entity.DbSet<BookSale> BookSales { get; set; } // BookSales
        System.Data.Entity.DbSet<BranchUlFace> BranchUlFaces { get; set; } // BranchUlFace
        System.Data.Entity.DbSet<CashBankAllUlFace> CashBankAllUlFaces { get; set; } // CashBankAllUlFace
        System.Data.Entity.DbSet<CashUlFace> CashUlFaces { get; set; } // CashUlFace
        System.Data.Entity.DbSet<CounterpartyCashBank> CounterpartyCashBanks { get; set; } // CounterpartyCashBank
        System.Data.Entity.DbSet<DataAreaParameter> DataAreaParameters { get; set; } // DataAreaParameters
        System.Data.Entity.DbSet<Declaration3Ndfl> Declaration3Ndfl { get; set; } // Declaration3Ndfl
        System.Data.Entity.DbSet<Declaration3NdflFl> Declaration3NdflFl { get; set; } // Declaration3NdflFl
        System.Data.Entity.DbSet<DeclarationAll> DeclarationAlls { get; set; } // DeclarationAll
        System.Data.Entity.DbSet<DeclarationData> DeclarationDatas { get; set; } // DeclarationData
        System.Data.Entity.DbSet<DeclarationData3NdflFl> DeclarationData3NdflFl { get; set; } // DeclarationData3NdflFl
        System.Data.Entity.DbSet<DeclarationDataAll> DeclarationDataAlls { get; set; } // DeclarationDataAll
        System.Data.Entity.DbSet<DeclarationDataFl> DeclarationDataFls { get; set; } // DeclarationDataFl
        System.Data.Entity.DbSet<DeclarationFl> DeclarationFls { get; set; } // DeclarationFl
        System.Data.Entity.DbSet<DeclarationUl> DeclarationUls { get; set; } // DeclarationUl
        System.Data.Entity.DbSet<DeliveryDocument> DeliveryDocuments { get; set; } // DeliveryDocument
        System.Data.Entity.DbSet<DepartamentOtdel> DepartamentOtdels { get; set; } // DepartamentOtdel
        System.Data.Entity.DbSet<DepartmentOtdelResponse> DepartmentOtdelResponses { get; set; } // DepartmentOtdelResponse
        System.Data.Entity.DbSet<Derector> Derectors { get; set; } // Derector
        System.Data.Entity.DbSet<DirectoryDocument> DirectoryDocuments { get; set; } // DirectoryDocument
        System.Data.Entity.DbSet<DocPatent> DocPatents { get; set; } // DocPatent
        System.Data.Entity.DbSet<Documen2Ndfl> Documen2Ndfl { get; set; } // Documen2NDFL
        System.Data.Entity.DbSet<Documen2NdflIdentification> Documen2NdflIdentification { get; set; } // Documen2NDFLIdentification
        System.Data.Entity.DbSet<DocumentContainer> DocumentContainers { get; set; } // DocumentContainer
        System.Data.Entity.DbSet<DocumentInventory> DocumentInventories { get; set; } // DocumentInventory
        System.Data.Entity.DbSet<DocumentOwnershipImZmTrFl> DocumentOwnershipImZmTrFls { get; set; } // DocumentOwnershipImZmTrFl
        System.Data.Entity.DbSet<EasJournal> EasJournals { get; set; } // EasJournal
        System.Data.Entity.DbSet<ErrorFlRegistration> ErrorFlRegistrations { get; set; } // ErrorFlRegistration
        System.Data.Entity.DbSet<EventProcessError> EventProcessErrors { get; set; } // EventProcessError
        System.Data.Entity.DbSet<FaceModelTemplateGetPost> FaceModelTemplateGetPosts { get; set; } // FaceModelTemplateGetPost
        System.Data.Entity.DbSet<FaceRegistryReference> FaceRegistryReferences { get; set; } // FaceRegistryReference
        System.Data.Entity.DbSet<FactOfOwnershipImZmTrFl> FactOfOwnershipImZmTrFls { get; set; } // FactOfOwnershipImZmTrFl
        System.Data.Entity.DbSet<Field> Fields { get; set; } // Fields
        System.Data.Entity.DbSet<FlFace> FlFaces { get; set; } // FlFace
        System.Data.Entity.DbSet<FlFaceMain> FlFaceMains { get; set; } // FlFaceMain
        System.Data.Entity.DbSet<FlFaceMainRegistration> FlFaceMainRegistrations { get; set; } // FlFaceMainRegistration
        System.Data.Entity.DbSet<FormulNdfl> FormulNdfls { get; set; } // FormulNdfl
        System.Data.Entity.DbSet<GrnInventory> GrnInventories { get; set; } // GrnInventory
        System.Data.Entity.DbSet<GrnInventoryAndEventProcessError> GrnInventoryAndEventProcessErrors { get; set; } // GrnInventoryAndEventProcessError
        System.Data.Entity.DbSet<GroupKbk> GroupKbks { get; set; } // GroupKbk
        System.Data.Entity.DbSet<GroupQuestion> GroupQuestions { get; set; } // GroupQuestions
        System.Data.Entity.DbSet<HeadingStatement> HeadingStatements { get; set; } // HeadingStatement
        System.Data.Entity.DbSet<HelpKbkAuto> HelpKbkAutoes { get; set; } // HelpKbkAuto
        System.Data.Entity.DbSet<HistoriUlFace> HistoriUlFaces { get; set; } // HistoriUlFace
        System.Data.Entity.DbSet<HName> HNames { get; set; } // H_NAMES
        System.Data.Entity.DbSet<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl
        System.Data.Entity.DbSet<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl
        System.Data.Entity.DbSet<IndividualCardsUlFace> IndividualCardsUlFaces { get; set; } // IndividualCardsUlFace
        System.Data.Entity.DbSet<InfoDocument> InfoDocuments { get; set; } // InfoDocument
        System.Data.Entity.DbSet<InfoViewAutomation> InfoViewAutomations { get; set; } // InfoViewAutomation
        System.Data.Entity.DbSet<IsPatentPars> IsPatentPars { get; set; } // IsPatentParses
        System.Data.Entity.DbSet<IsPatentParse> IsPatentParses { get; set; } // IsPatentParse
        System.Data.Entity.DbSet<KbkPayment> KbkPayments { get; set; } // KbkPayment
        System.Data.Entity.DbSet<KbkPlat> KbkPlats { get; set; } // KbkPlat
        System.Data.Entity.DbSet<KontrAgent> KontrAgents { get; set; } // KontrAgent
        System.Data.Entity.DbSet<Krsb> Krsbs { get; set; } // Krsb
        System.Data.Entity.DbSet<KrsbNp> KrsbNps { get; set; } // KrsbNp
        System.Data.Entity.DbSet<LogicsSelectAutomation> LogicsSelectAutomations { get; set; } // LogicsSelectAutomation
        System.Data.Entity.DbSet<LogPreCheck> LogPreChecks { get; set; } // LogPreCheck
        System.Data.Entity.DbSet<MainOrg> MainOrgs { get; set; } // MainOrg
        System.Data.Entity.DbSet<MainOrgAndKontrAgent> MainOrgAndKontrAgents { get; set; } // MainOrgAndKontrAgent
        System.Data.Entity.DbSet<MainOrgAndQuestion> MainOrgAndQuestions { get; set; } // MainOrgAndQuestions
        System.Data.Entity.DbSet<MainUserAndQuestion> MainUserAndQuestions { get; set; } // MainUserAndQuestions
        System.Data.Entity.DbSet<MainUserRegistrationFl> MainUserRegistrationFls { get; set; } // MainUserRegistrationFl
        System.Data.Entity.DbSet<ModelKbkOnKbk> ModelKbkOnKbks { get; set; } // ModelKbkOnKbk
        System.Data.Entity.DbSet<ModelTree> ModelTrees { get; set; } // ModelTree
        System.Data.Entity.DbSet<NdflFl> NdflFls { get; set; } // NdflFl
        System.Data.Entity.DbSet<OrganizationOgrnInventory> OrganizationOgrnInventories { get; set; } // OrganizationOgrnInventory
        System.Data.Entity.DbSet<ParameterProcedureWeb> ParameterProcedureWebs { get; set; } // ParameterProcedureWeb
        System.Data.Entity.DbSet<ParametrNalog> ParametrNalogs { get; set; } // ParametrNalog
        System.Data.Entity.DbSet<Patent> Patents { get; set; } // Patent
        System.Data.Entity.DbSet<PlaceOfBusiness> PlaceOfBusinesses { get; set; } // PlaceOfBusiness
        System.Data.Entity.DbSet<QuestionsAndUser> QuestionsAndUsers { get; set; } // QuestionsAndUsers
        System.Data.Entity.DbSet<QuestionsAndUserRegistrationFl> QuestionsAndUserRegistrationFls { get; set; } // QuestionsAndUserRegistrationFl
        System.Data.Entity.DbSet<RbHoliday> RbHolidays { get; set; } // Rb_Holidays
        System.Data.Entity.DbSet<RealEstateZmIm> RealEstateZmIms { get; set; } // RealEstateZmIm
        System.Data.Entity.DbSet<RegisterDocumentsPrinting> RegisterDocumentsPrintings { get; set; } // RegisterDocumentsPrinting
        System.Data.Entity.DbSet<ReportXlsx> ReportXlsxes { get; set; } // ReportXlsx
        System.Data.Entity.DbSet<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh
        System.Data.Entity.DbSet<SenderResponse> SenderResponses { get; set; } // SenderResponse
        System.Data.Entity.DbSet<SenderTaxJournalOkp2> SenderTaxJournalOkp2 { get; set; } // SenderTaxJournalOkp2
        System.Data.Entity.DbSet<SignatureBoss> SignatureBosses { get; set; } // SignatureBoss
        System.Data.Entity.DbSet<Statement> Statements { get; set; } // Statement
        System.Data.Entity.DbSet<StatementFull> StatementFulls { get; set; } // StatementFull
        System.Data.Entity.DbSet<StatementNp> StatementNps { get; set; } // StatementNp
        System.Data.Entity.DbSet<StatusDocument> StatusDocuments { get; set; } // StatusDocument
        System.Data.Entity.DbSet<StatusEvent> StatusEvents { get; set; } // StatusEvent
        System.Data.Entity.DbSet<StatusFlRegistration> StatusFlRegistrations { get; set; } // StatusFlRegistration
        System.Data.Entity.DbSet<StatusOgrn> StatusOgrns { get; set; } // StatusOgrn
        System.Data.Entity.DbSet<StrngthUlFace> StrngthUlFaces { get; set; } // StrngthUlFace
        System.Data.Entity.DbSet<SvedAccoutingUlFace> SvedAccoutingUlFaces { get; set; } // SvedAccoutingUlFace
        System.Data.Entity.DbSet<SvedFactPatent> SvedFactPatents { get; set; } // SvedFactPatent
        System.Data.Entity.DbSet<SvedObject> SvedObjects { get; set; } // SvedObject
        System.Data.Entity.DbSet<SvedTr> SvedTrs { get; set; } // SvedTr
        System.Data.Entity.DbSet<SynchronizationUserAndAi> SynchronizationUserAndAis { get; set; } // SynchronizationUserAndAis
        System.Data.Entity.DbSet<TaxDeclarationFl> TaxDeclarationFls { get; set; } // TaxDeclarationFl
        System.Data.Entity.DbSet<TaxEasJournal> TaxEasJournals { get; set; } // TaxEasJournal
        System.Data.Entity.DbSet<TaxJournal> TaxJournals { get; set; } // TaxJournal
        System.Data.Entity.DbSet<TaxJournal121> TaxJournal121 { get; set; } // TaxJournal121
        System.Data.Entity.DbSet<TaxJournal121AutoWebPage> TaxJournal121AutoWebPage { get; set; } // TaxJournal121AutoWebPage
        System.Data.Entity.DbSet<TaxJournal121Error> TaxJournal121Error { get; set; } // TaxJournal121Error
        System.Data.Entity.DbSet<TaxJournal129> TaxJournal129 { get; set; } // TaxJournal129
        System.Data.Entity.DbSet<TaxJournalAutoReport> TaxJournalAutoReports { get; set; } // TaxJournalAutoReport
        System.Data.Entity.DbSet<TaxJournalAutoWebPage> TaxJournalAutoWebPages { get; set; } // TaxJournalAutoWebPage
        System.Data.Entity.DbSet<TaxJournalDelivery> TaxJournalDeliveries { get; set; } // TaxJournalDelivery
        System.Data.Entity.DbSet<Template> Templates { get; set; } // Template
        System.Data.Entity.DbSet<TemplateAndTree> TemplateAndTrees { get; set; } // TemplateAndTree
        System.Data.Entity.DbSet<TemplateModelResponse> TemplateModelResponses { get; set; } // TemplateModelResponse
        System.Data.Entity.DbSet<TemplateQuestion> TemplateQuestions { get; set; } // TemplateQuestions
        System.Data.Entity.DbSet<Tree> Trees { get; set; } // Tree
        System.Data.Entity.DbSet<TreeDataArea> TreeDataAreas { get; set; } // TreeDataArea
        System.Data.Entity.DbSet<TreeExport> TreeExports { get; set; } // TreeExport
        System.Data.Entity.DbSet<TreeFilter> TreeFilters { get; set; } // TreeFilter
        System.Data.Entity.DbSet<TreeGrid> TreeGrids { get; set; } // TreeGrid
        System.Data.Entity.DbSet<TreeUpdate> TreeUpdates { get; set; } // TreeUpdate
        System.Data.Entity.DbSet<TypeObject> TypeObjects { get; set; } // TypeObject
        System.Data.Entity.DbSet<TypeOrgAndQuestion> TypeOrgAndQuestions { get; set; } // TypeOrgAndQuestions
        System.Data.Entity.DbSet<TypeTree> TypeTrees { get; set; } // TypeTree
        System.Data.Entity.DbSet<UlFace> UlFaces { get; set; } // UlFace
        System.Data.Entity.DbSet<UlFaceAll> UlFaceAlls { get; set; } // UlFaceAll
        System.Data.Entity.DbSet<UlFaceAllSale> UlFaceAllSales { get; set; } // UlFaceAllSales
        System.Data.Entity.DbSet<UlFaceSalesBookBank> UlFaceSalesBookBanks { get; set; } // UlFaceSalesBookBank
        System.Data.Entity.DbSet<UserOrg> UserOrgs { get; set; } // UserOrg
        System.Data.Entity.DbSet<ViewRegisterDocumentsPrinting> ViewRegisterDocumentsPrintings { get; set; } // ViewRegisterDocumentsPrinting

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Automation : System.Data.Entity.DbContext, IAutomation
    {
        public System.Data.Entity.DbSet<AddDocumentToContainer> AddDocumentToContainers { get; set; } // AddDocumentToContainer
        public System.Data.Entity.DbSet<AddUlFace> AddUlFaces { get; set; } // AddUlFace
        public System.Data.Entity.DbSet<AddUlFaceWeb> AddUlFaceWebs { get; set; } // AddUlFaceWeb
        public System.Data.Entity.DbSet<AisDocument> AisDocuments { get; set; } // AisDocument
        public System.Data.Entity.DbSet<AisGrnDocument> AisGrnDocuments { get; set; } // AisGrnDocument
        public System.Data.Entity.DbSet<AllFaceRegistryReference> AllFaceRegistryReferences { get; set; } // AllFaceRegistryReference
        public System.Data.Entity.DbSet<AllJournal129> AllJournal129 { get; set; } // AllJournal129
        public System.Data.Entity.DbSet<AllJournalRegistrationFl> AllJournalRegistrationFls { get; set; } // AllJournalRegistrationFl
        public System.Data.Entity.DbSet<AllPatent> AllPatents { get; set; } // AllPatent
        public System.Data.Entity.DbSet<Book> Books { get; set; } // Book
        public System.Data.Entity.DbSet<BookPurchase> BookPurchases { get; set; } // BookPurchase
        public System.Data.Entity.DbSet<BookSale> BookSales { get; set; } // BookSales
        public System.Data.Entity.DbSet<BranchUlFace> BranchUlFaces { get; set; } // BranchUlFace
        public System.Data.Entity.DbSet<CashBankAllUlFace> CashBankAllUlFaces { get; set; } // CashBankAllUlFace
        public System.Data.Entity.DbSet<CashUlFace> CashUlFaces { get; set; } // CashUlFace
        public System.Data.Entity.DbSet<CounterpartyCashBank> CounterpartyCashBanks { get; set; } // CounterpartyCashBank
        public System.Data.Entity.DbSet<DataAreaParameter> DataAreaParameters { get; set; } // DataAreaParameters
        public System.Data.Entity.DbSet<Declaration3Ndfl> Declaration3Ndfl { get; set; } // Declaration3Ndfl
        public System.Data.Entity.DbSet<Declaration3NdflFl> Declaration3NdflFl { get; set; } // Declaration3NdflFl
        public System.Data.Entity.DbSet<DeclarationAll> DeclarationAlls { get; set; } // DeclarationAll
        public System.Data.Entity.DbSet<DeclarationData> DeclarationDatas { get; set; } // DeclarationData
        public System.Data.Entity.DbSet<DeclarationData3NdflFl> DeclarationData3NdflFl { get; set; } // DeclarationData3NdflFl
        public System.Data.Entity.DbSet<DeclarationDataAll> DeclarationDataAlls { get; set; } // DeclarationDataAll
        public System.Data.Entity.DbSet<DeclarationDataFl> DeclarationDataFls { get; set; } // DeclarationDataFl
        public System.Data.Entity.DbSet<DeclarationFl> DeclarationFls { get; set; } // DeclarationFl
        public System.Data.Entity.DbSet<DeclarationUl> DeclarationUls { get; set; } // DeclarationUl
        public System.Data.Entity.DbSet<DeliveryDocument> DeliveryDocuments { get; set; } // DeliveryDocument
        public System.Data.Entity.DbSet<DepartamentOtdel> DepartamentOtdels { get; set; } // DepartamentOtdel
        public System.Data.Entity.DbSet<DepartmentOtdelResponse> DepartmentOtdelResponses { get; set; } // DepartmentOtdelResponse
        public System.Data.Entity.DbSet<Derector> Derectors { get; set; } // Derector
        public System.Data.Entity.DbSet<DirectoryDocument> DirectoryDocuments { get; set; } // DirectoryDocument
        public System.Data.Entity.DbSet<DocPatent> DocPatents { get; set; } // DocPatent
        public System.Data.Entity.DbSet<Documen2Ndfl> Documen2Ndfl { get; set; } // Documen2NDFL
        public System.Data.Entity.DbSet<Documen2NdflIdentification> Documen2NdflIdentification { get; set; } // Documen2NDFLIdentification
        public System.Data.Entity.DbSet<DocumentContainer> DocumentContainers { get; set; } // DocumentContainer
        public System.Data.Entity.DbSet<DocumentInventory> DocumentInventories { get; set; } // DocumentInventory
        public System.Data.Entity.DbSet<DocumentOwnershipImZmTrFl> DocumentOwnershipImZmTrFls { get; set; } // DocumentOwnershipImZmTrFl
        public System.Data.Entity.DbSet<EasJournal> EasJournals { get; set; } // EasJournal
        public System.Data.Entity.DbSet<ErrorFlRegistration> ErrorFlRegistrations { get; set; } // ErrorFlRegistration
        public System.Data.Entity.DbSet<EventProcessError> EventProcessErrors { get; set; } // EventProcessError
        public System.Data.Entity.DbSet<FaceModelTemplateGetPost> FaceModelTemplateGetPosts { get; set; } // FaceModelTemplateGetPost
        public System.Data.Entity.DbSet<FaceRegistryReference> FaceRegistryReferences { get; set; } // FaceRegistryReference
        public System.Data.Entity.DbSet<FactOfOwnershipImZmTrFl> FactOfOwnershipImZmTrFls { get; set; } // FactOfOwnershipImZmTrFl
        public System.Data.Entity.DbSet<Field> Fields { get; set; } // Fields
        public System.Data.Entity.DbSet<FlFace> FlFaces { get; set; } // FlFace
        public System.Data.Entity.DbSet<FlFaceMain> FlFaceMains { get; set; } // FlFaceMain
        public System.Data.Entity.DbSet<FlFaceMainRegistration> FlFaceMainRegistrations { get; set; } // FlFaceMainRegistration
        public System.Data.Entity.DbSet<FormulNdfl> FormulNdfls { get; set; } // FormulNdfl
        public System.Data.Entity.DbSet<GrnInventory> GrnInventories { get; set; } // GrnInventory
        public System.Data.Entity.DbSet<GrnInventoryAndEventProcessError> GrnInventoryAndEventProcessErrors { get; set; } // GrnInventoryAndEventProcessError
        public System.Data.Entity.DbSet<GroupKbk> GroupKbks { get; set; } // GroupKbk
        public System.Data.Entity.DbSet<GroupQuestion> GroupQuestions { get; set; } // GroupQuestions
        public System.Data.Entity.DbSet<HeadingStatement> HeadingStatements { get; set; } // HeadingStatement
        public System.Data.Entity.DbSet<HelpKbkAuto> HelpKbkAutoes { get; set; } // HelpKbkAuto
        public System.Data.Entity.DbSet<HistoriUlFace> HistoriUlFaces { get; set; } // HistoriUlFace
        public System.Data.Entity.DbSet<HName> HNames { get; set; } // H_NAMES
        public System.Data.Entity.DbSet<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl
        public System.Data.Entity.DbSet<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl
        public System.Data.Entity.DbSet<IndividualCardsUlFace> IndividualCardsUlFaces { get; set; } // IndividualCardsUlFace
        public System.Data.Entity.DbSet<InfoDocument> InfoDocuments { get; set; } // InfoDocument
        public System.Data.Entity.DbSet<InfoViewAutomation> InfoViewAutomations { get; set; } // InfoViewAutomation
        public System.Data.Entity.DbSet<IsPatentPars> IsPatentPars { get; set; } // IsPatentParses
        public System.Data.Entity.DbSet<IsPatentParse> IsPatentParses { get; set; } // IsPatentParse
        public System.Data.Entity.DbSet<KbkPayment> KbkPayments { get; set; } // KbkPayment
        public System.Data.Entity.DbSet<KbkPlat> KbkPlats { get; set; } // KbkPlat
        public System.Data.Entity.DbSet<KontrAgent> KontrAgents { get; set; } // KontrAgent
        public System.Data.Entity.DbSet<Krsb> Krsbs { get; set; } // Krsb
        public System.Data.Entity.DbSet<KrsbNp> KrsbNps { get; set; } // KrsbNp
        public System.Data.Entity.DbSet<LogicsSelectAutomation> LogicsSelectAutomations { get; set; } // LogicsSelectAutomation
        public System.Data.Entity.DbSet<LogPreCheck> LogPreChecks { get; set; } // LogPreCheck
        public System.Data.Entity.DbSet<MainOrg> MainOrgs { get; set; } // MainOrg
        public System.Data.Entity.DbSet<MainOrgAndKontrAgent> MainOrgAndKontrAgents { get; set; } // MainOrgAndKontrAgent
        public System.Data.Entity.DbSet<MainOrgAndQuestion> MainOrgAndQuestions { get; set; } // MainOrgAndQuestions
        public System.Data.Entity.DbSet<MainUserAndQuestion> MainUserAndQuestions { get; set; } // MainUserAndQuestions
        public System.Data.Entity.DbSet<MainUserRegistrationFl> MainUserRegistrationFls { get; set; } // MainUserRegistrationFl
        public System.Data.Entity.DbSet<ModelKbkOnKbk> ModelKbkOnKbks { get; set; } // ModelKbkOnKbk
        public System.Data.Entity.DbSet<ModelTree> ModelTrees { get; set; } // ModelTree
        public System.Data.Entity.DbSet<NdflFl> NdflFls { get; set; } // NdflFl
        public System.Data.Entity.DbSet<OrganizationOgrnInventory> OrganizationOgrnInventories { get; set; } // OrganizationOgrnInventory
        public System.Data.Entity.DbSet<ParameterProcedureWeb> ParameterProcedureWebs { get; set; } // ParameterProcedureWeb
        public System.Data.Entity.DbSet<ParametrNalog> ParametrNalogs { get; set; } // ParametrNalog
        public System.Data.Entity.DbSet<Patent> Patents { get; set; } // Patent
        public System.Data.Entity.DbSet<PlaceOfBusiness> PlaceOfBusinesses { get; set; } // PlaceOfBusiness
        public System.Data.Entity.DbSet<QuestionsAndUser> QuestionsAndUsers { get; set; } // QuestionsAndUsers
        public System.Data.Entity.DbSet<QuestionsAndUserRegistrationFl> QuestionsAndUserRegistrationFls { get; set; } // QuestionsAndUserRegistrationFl
        public System.Data.Entity.DbSet<RbHoliday> RbHolidays { get; set; } // Rb_Holidays
        public System.Data.Entity.DbSet<RealEstateZmIm> RealEstateZmIms { get; set; } // RealEstateZmIm
        public System.Data.Entity.DbSet<RegisterDocumentsPrinting> RegisterDocumentsPrintings { get; set; } // RegisterDocumentsPrinting
        public System.Data.Entity.DbSet<ReportXlsx> ReportXlsxes { get; set; } // ReportXlsx
        public System.Data.Entity.DbSet<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh
        public System.Data.Entity.DbSet<SenderResponse> SenderResponses { get; set; } // SenderResponse
        public System.Data.Entity.DbSet<SenderTaxJournalOkp2> SenderTaxJournalOkp2 { get; set; } // SenderTaxJournalOkp2
        public System.Data.Entity.DbSet<SignatureBoss> SignatureBosses { get; set; } // SignatureBoss
        public System.Data.Entity.DbSet<Statement> Statements { get; set; } // Statement
        public System.Data.Entity.DbSet<StatementFull> StatementFulls { get; set; } // StatementFull
        public System.Data.Entity.DbSet<StatementNp> StatementNps { get; set; } // StatementNp
        public System.Data.Entity.DbSet<StatusDocument> StatusDocuments { get; set; } // StatusDocument
        public System.Data.Entity.DbSet<StatusEvent> StatusEvents { get; set; } // StatusEvent
        public System.Data.Entity.DbSet<StatusFlRegistration> StatusFlRegistrations { get; set; } // StatusFlRegistration
        public System.Data.Entity.DbSet<StatusOgrn> StatusOgrns { get; set; } // StatusOgrn
        public System.Data.Entity.DbSet<StrngthUlFace> StrngthUlFaces { get; set; } // StrngthUlFace
        public System.Data.Entity.DbSet<SvedAccoutingUlFace> SvedAccoutingUlFaces { get; set; } // SvedAccoutingUlFace
        public System.Data.Entity.DbSet<SvedFactPatent> SvedFactPatents { get; set; } // SvedFactPatent
        public System.Data.Entity.DbSet<SvedObject> SvedObjects { get; set; } // SvedObject
        public System.Data.Entity.DbSet<SvedTr> SvedTrs { get; set; } // SvedTr
        public System.Data.Entity.DbSet<SynchronizationUserAndAi> SynchronizationUserAndAis { get; set; } // SynchronizationUserAndAis
        public System.Data.Entity.DbSet<TaxDeclarationFl> TaxDeclarationFls { get; set; } // TaxDeclarationFl
        public System.Data.Entity.DbSet<TaxEasJournal> TaxEasJournals { get; set; } // TaxEasJournal
        public System.Data.Entity.DbSet<TaxJournal> TaxJournals { get; set; } // TaxJournal
        public System.Data.Entity.DbSet<TaxJournal121> TaxJournal121 { get; set; } // TaxJournal121
        public System.Data.Entity.DbSet<TaxJournal121AutoWebPage> TaxJournal121AutoWebPage { get; set; } // TaxJournal121AutoWebPage
        public System.Data.Entity.DbSet<TaxJournal121Error> TaxJournal121Error { get; set; } // TaxJournal121Error
        public System.Data.Entity.DbSet<TaxJournal129> TaxJournal129 { get; set; } // TaxJournal129
        public System.Data.Entity.DbSet<TaxJournalAutoReport> TaxJournalAutoReports { get; set; } // TaxJournalAutoReport
        public System.Data.Entity.DbSet<TaxJournalAutoWebPage> TaxJournalAutoWebPages { get; set; } // TaxJournalAutoWebPage
        public System.Data.Entity.DbSet<TaxJournalDelivery> TaxJournalDeliveries { get; set; } // TaxJournalDelivery
        public System.Data.Entity.DbSet<Template> Templates { get; set; } // Template
        public System.Data.Entity.DbSet<TemplateAndTree> TemplateAndTrees { get; set; } // TemplateAndTree
        public System.Data.Entity.DbSet<TemplateModelResponse> TemplateModelResponses { get; set; } // TemplateModelResponse
        public System.Data.Entity.DbSet<TemplateQuestion> TemplateQuestions { get; set; } // TemplateQuestions
        public System.Data.Entity.DbSet<Tree> Trees { get; set; } // Tree
        public System.Data.Entity.DbSet<TreeDataArea> TreeDataAreas { get; set; } // TreeDataArea
        public System.Data.Entity.DbSet<TreeExport> TreeExports { get; set; } // TreeExport
        public System.Data.Entity.DbSet<TreeFilter> TreeFilters { get; set; } // TreeFilter
        public System.Data.Entity.DbSet<TreeGrid> TreeGrids { get; set; } // TreeGrid
        public System.Data.Entity.DbSet<TreeUpdate> TreeUpdates { get; set; } // TreeUpdate
        public System.Data.Entity.DbSet<TypeObject> TypeObjects { get; set; } // TypeObject
        public System.Data.Entity.DbSet<TypeOrgAndQuestion> TypeOrgAndQuestions { get; set; } // TypeOrgAndQuestions
        public System.Data.Entity.DbSet<TypeTree> TypeTrees { get; set; } // TypeTree
        public System.Data.Entity.DbSet<UlFace> UlFaces { get; set; } // UlFace
        public System.Data.Entity.DbSet<UlFaceAll> UlFaceAlls { get; set; } // UlFaceAll
        public System.Data.Entity.DbSet<UlFaceAllSale> UlFaceAllSales { get; set; } // UlFaceAllSales
        public System.Data.Entity.DbSet<UlFaceSalesBookBank> UlFaceSalesBookBanks { get; set; } // UlFaceSalesBookBank
        public System.Data.Entity.DbSet<UserOrg> UserOrgs { get; set; } // UserOrg
        public System.Data.Entity.DbSet<ViewRegisterDocumentsPrinting> ViewRegisterDocumentsPrintings { get; set; } // ViewRegisterDocumentsPrinting

        static Automation()
        {
            System.Data.Entity.Database.SetInitializer<Automation>(null);
        }

        public Automation()
            : base("Name=DatabaseAutomation")
        {
        }

        public Automation(string connectionString)
            : base(connectionString)
        {
        }

        public Automation(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public Automation(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public Automation(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AddDocumentToContainerConfiguration());
            modelBuilder.Configurations.Add(new AddUlFaceConfiguration());
            modelBuilder.Configurations.Add(new AddUlFaceWebConfiguration());
            modelBuilder.Configurations.Add(new AisDocumentConfiguration());
            modelBuilder.Configurations.Add(new AisGrnDocumentConfiguration());
            modelBuilder.Configurations.Add(new AllFaceRegistryReferenceConfiguration());
            modelBuilder.Configurations.Add(new AllJournal129Configuration());
            modelBuilder.Configurations.Add(new AllJournalRegistrationFlConfiguration());
            modelBuilder.Configurations.Add(new AllPatentConfiguration());
            modelBuilder.Configurations.Add(new BookConfiguration());
            modelBuilder.Configurations.Add(new BookPurchaseConfiguration());
            modelBuilder.Configurations.Add(new BookSaleConfiguration());
            modelBuilder.Configurations.Add(new BranchUlFaceConfiguration());
            modelBuilder.Configurations.Add(new CashBankAllUlFaceConfiguration());
            modelBuilder.Configurations.Add(new CashUlFaceConfiguration());
            modelBuilder.Configurations.Add(new CounterpartyCashBankConfiguration());
            modelBuilder.Configurations.Add(new DataAreaParameterConfiguration());
            modelBuilder.Configurations.Add(new Declaration3NdflConfiguration());
            modelBuilder.Configurations.Add(new Declaration3NdflFlConfiguration());
            modelBuilder.Configurations.Add(new DeclarationAllConfiguration());
            modelBuilder.Configurations.Add(new DeclarationDataConfiguration());
            modelBuilder.Configurations.Add(new DeclarationData3NdflFlConfiguration());
            modelBuilder.Configurations.Add(new DeclarationDataAllConfiguration());
            modelBuilder.Configurations.Add(new DeclarationDataFlConfiguration());
            modelBuilder.Configurations.Add(new DeclarationFlConfiguration());
            modelBuilder.Configurations.Add(new DeclarationUlConfiguration());
            modelBuilder.Configurations.Add(new DeliveryDocumentConfiguration());
            modelBuilder.Configurations.Add(new DepartamentOtdelConfiguration());
            modelBuilder.Configurations.Add(new DepartmentOtdelResponseConfiguration());
            modelBuilder.Configurations.Add(new DerectorConfiguration());
            modelBuilder.Configurations.Add(new DirectoryDocumentConfiguration());
            modelBuilder.Configurations.Add(new DocPatentConfiguration());
            modelBuilder.Configurations.Add(new Documen2NdflConfiguration());
            modelBuilder.Configurations.Add(new Documen2NdflIdentificationConfiguration());
            modelBuilder.Configurations.Add(new DocumentContainerConfiguration());
            modelBuilder.Configurations.Add(new DocumentInventoryConfiguration());
            modelBuilder.Configurations.Add(new DocumentOwnershipImZmTrFlConfiguration());
            modelBuilder.Configurations.Add(new EasJournalConfiguration());
            modelBuilder.Configurations.Add(new ErrorFlRegistrationConfiguration());
            modelBuilder.Configurations.Add(new EventProcessErrorConfiguration());
            modelBuilder.Configurations.Add(new FaceModelTemplateGetPostConfiguration());
            modelBuilder.Configurations.Add(new FaceRegistryReferenceConfiguration());
            modelBuilder.Configurations.Add(new FactOfOwnershipImZmTrFlConfiguration());
            modelBuilder.Configurations.Add(new FieldConfiguration());
            modelBuilder.Configurations.Add(new FlFaceConfiguration());
            modelBuilder.Configurations.Add(new FlFaceMainConfiguration());
            modelBuilder.Configurations.Add(new FlFaceMainRegistrationConfiguration());
            modelBuilder.Configurations.Add(new FormulNdflConfiguration());
            modelBuilder.Configurations.Add(new GrnInventoryConfiguration());
            modelBuilder.Configurations.Add(new GrnInventoryAndEventProcessErrorConfiguration());
            modelBuilder.Configurations.Add(new GroupKbkConfiguration());
            modelBuilder.Configurations.Add(new GroupQuestionConfiguration());
            modelBuilder.Configurations.Add(new HeadingStatementConfiguration());
            modelBuilder.Configurations.Add(new HelpKbkAutoConfiguration());
            modelBuilder.Configurations.Add(new HistoriUlFaceConfiguration());
            modelBuilder.Configurations.Add(new HNameConfiguration());
            modelBuilder.Configurations.Add(new ImZmTrFlConfiguration());
            modelBuilder.Configurations.Add(new ImZmTrUlConfiguration());
            modelBuilder.Configurations.Add(new IndividualCardsUlFaceConfiguration());
            modelBuilder.Configurations.Add(new InfoDocumentConfiguration());
            modelBuilder.Configurations.Add(new InfoViewAutomationConfiguration());
            modelBuilder.Configurations.Add(new IsPatentParsConfiguration());
            modelBuilder.Configurations.Add(new IsPatentParseConfiguration());
            modelBuilder.Configurations.Add(new KbkPaymentConfiguration());
            modelBuilder.Configurations.Add(new KbkPlatConfiguration());
            modelBuilder.Configurations.Add(new KontrAgentConfiguration());
            modelBuilder.Configurations.Add(new KrsbConfiguration());
            modelBuilder.Configurations.Add(new KrsbNpConfiguration());
            modelBuilder.Configurations.Add(new LogicsSelectAutomationConfiguration());
            modelBuilder.Configurations.Add(new LogPreCheckConfiguration());
            modelBuilder.Configurations.Add(new MainOrgConfiguration());
            modelBuilder.Configurations.Add(new MainOrgAndKontrAgentConfiguration());
            modelBuilder.Configurations.Add(new MainOrgAndQuestionConfiguration());
            modelBuilder.Configurations.Add(new MainUserAndQuestionConfiguration());
            modelBuilder.Configurations.Add(new MainUserRegistrationFlConfiguration());
            modelBuilder.Configurations.Add(new ModelKbkOnKbkConfiguration());
            modelBuilder.Configurations.Add(new ModelTreeConfiguration());
            modelBuilder.Configurations.Add(new NdflFlConfiguration());
            modelBuilder.Configurations.Add(new OrganizationOgrnInventoryConfiguration());
            modelBuilder.Configurations.Add(new ParameterProcedureWebConfiguration());
            modelBuilder.Configurations.Add(new ParametrNalogConfiguration());
            modelBuilder.Configurations.Add(new PatentConfiguration());
            modelBuilder.Configurations.Add(new PlaceOfBusinessConfiguration());
            modelBuilder.Configurations.Add(new QuestionsAndUserConfiguration());
            modelBuilder.Configurations.Add(new QuestionsAndUserRegistrationFlConfiguration());
            modelBuilder.Configurations.Add(new RbHolidayConfiguration());
            modelBuilder.Configurations.Add(new RealEstateZmImConfiguration());
            modelBuilder.Configurations.Add(new RegisterDocumentsPrintingConfiguration());
            modelBuilder.Configurations.Add(new ReportXlsxConfiguration());
            modelBuilder.Configurations.Add(new RukAndUcrhConfiguration());
            modelBuilder.Configurations.Add(new SenderResponseConfiguration());
            modelBuilder.Configurations.Add(new SenderTaxJournalOkp2Configuration());
            modelBuilder.Configurations.Add(new SignatureBossConfiguration());
            modelBuilder.Configurations.Add(new StatementConfiguration());
            modelBuilder.Configurations.Add(new StatementFullConfiguration());
            modelBuilder.Configurations.Add(new StatementNpConfiguration());
            modelBuilder.Configurations.Add(new StatusDocumentConfiguration());
            modelBuilder.Configurations.Add(new StatusEventConfiguration());
            modelBuilder.Configurations.Add(new StatusFlRegistrationConfiguration());
            modelBuilder.Configurations.Add(new StatusOgrnConfiguration());
            modelBuilder.Configurations.Add(new StrngthUlFaceConfiguration());
            modelBuilder.Configurations.Add(new SvedAccoutingUlFaceConfiguration());
            modelBuilder.Configurations.Add(new SvedFactPatentConfiguration());
            modelBuilder.Configurations.Add(new SvedObjectConfiguration());
            modelBuilder.Configurations.Add(new SvedTrConfiguration());
            modelBuilder.Configurations.Add(new SynchronizationUserAndAiConfiguration());
            modelBuilder.Configurations.Add(new TaxDeclarationFlConfiguration());
            modelBuilder.Configurations.Add(new TaxEasJournalConfiguration());
            modelBuilder.Configurations.Add(new TaxJournalConfiguration());
            modelBuilder.Configurations.Add(new TaxJournal121Configuration());
            modelBuilder.Configurations.Add(new TaxJournal121AutoWebPageConfiguration());
            modelBuilder.Configurations.Add(new TaxJournal121ErrorConfiguration());
            modelBuilder.Configurations.Add(new TaxJournal129Configuration());
            modelBuilder.Configurations.Add(new TaxJournalAutoReportConfiguration());
            modelBuilder.Configurations.Add(new TaxJournalAutoWebPageConfiguration());
            modelBuilder.Configurations.Add(new TaxJournalDeliveryConfiguration());
            modelBuilder.Configurations.Add(new TemplateConfiguration());
            modelBuilder.Configurations.Add(new TemplateAndTreeConfiguration());
            modelBuilder.Configurations.Add(new TemplateModelResponseConfiguration());
            modelBuilder.Configurations.Add(new TemplateQuestionConfiguration());
            modelBuilder.Configurations.Add(new TreeConfiguration());
            modelBuilder.Configurations.Add(new TreeDataAreaConfiguration());
            modelBuilder.Configurations.Add(new TreeExportConfiguration());
            modelBuilder.Configurations.Add(new TreeFilterConfiguration());
            modelBuilder.Configurations.Add(new TreeGridConfiguration());
            modelBuilder.Configurations.Add(new TreeUpdateConfiguration());
            modelBuilder.Configurations.Add(new TypeObjectConfiguration());
            modelBuilder.Configurations.Add(new TypeOrgAndQuestionConfiguration());
            modelBuilder.Configurations.Add(new TypeTreeConfiguration());
            modelBuilder.Configurations.Add(new UlFaceConfiguration());
            modelBuilder.Configurations.Add(new UlFaceAllConfiguration());
            modelBuilder.Configurations.Add(new UlFaceAllSaleConfiguration());
            modelBuilder.Configurations.Add(new UlFaceSalesBookBankConfiguration());
            modelBuilder.Configurations.Add(new UserOrgConfiguration());
            modelBuilder.Configurations.Add(new ViewRegisterDocumentsPrintingConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AddDocumentToContainerConfiguration(schema));
            modelBuilder.Configurations.Add(new AddUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new AddUlFaceWebConfiguration(schema));
            modelBuilder.Configurations.Add(new AisDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new AisGrnDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new AllFaceRegistryReferenceConfiguration(schema));
            modelBuilder.Configurations.Add(new AllJournal129Configuration(schema));
            modelBuilder.Configurations.Add(new AllJournalRegistrationFlConfiguration(schema));
            modelBuilder.Configurations.Add(new AllPatentConfiguration(schema));
            modelBuilder.Configurations.Add(new BookConfiguration(schema));
            modelBuilder.Configurations.Add(new BookPurchaseConfiguration(schema));
            modelBuilder.Configurations.Add(new BookSaleConfiguration(schema));
            modelBuilder.Configurations.Add(new BranchUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new CashBankAllUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new CashUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new CounterpartyCashBankConfiguration(schema));
            modelBuilder.Configurations.Add(new DataAreaParameterConfiguration(schema));
            modelBuilder.Configurations.Add(new Declaration3NdflConfiguration(schema));
            modelBuilder.Configurations.Add(new Declaration3NdflFlConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationAllConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationDataConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationData3NdflFlConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationDataAllConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationDataFlConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationFlConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationUlConfiguration(schema));
            modelBuilder.Configurations.Add(new DeliveryDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new DepartamentOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new DepartmentOtdelResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new DerectorConfiguration(schema));
            modelBuilder.Configurations.Add(new DirectoryDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new DocPatentConfiguration(schema));
            modelBuilder.Configurations.Add(new Documen2NdflConfiguration(schema));
            modelBuilder.Configurations.Add(new Documen2NdflIdentificationConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentContainerConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentOwnershipImZmTrFlConfiguration(schema));
            modelBuilder.Configurations.Add(new EasJournalConfiguration(schema));
            modelBuilder.Configurations.Add(new ErrorFlRegistrationConfiguration(schema));
            modelBuilder.Configurations.Add(new EventProcessErrorConfiguration(schema));
            modelBuilder.Configurations.Add(new FaceModelTemplateGetPostConfiguration(schema));
            modelBuilder.Configurations.Add(new FaceRegistryReferenceConfiguration(schema));
            modelBuilder.Configurations.Add(new FactOfOwnershipImZmTrFlConfiguration(schema));
            modelBuilder.Configurations.Add(new FieldConfiguration(schema));
            modelBuilder.Configurations.Add(new FlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new FlFaceMainConfiguration(schema));
            modelBuilder.Configurations.Add(new FlFaceMainRegistrationConfiguration(schema));
            modelBuilder.Configurations.Add(new FormulNdflConfiguration(schema));
            modelBuilder.Configurations.Add(new GrnInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new GrnInventoryAndEventProcessErrorConfiguration(schema));
            modelBuilder.Configurations.Add(new GroupKbkConfiguration(schema));
            modelBuilder.Configurations.Add(new GroupQuestionConfiguration(schema));
            modelBuilder.Configurations.Add(new HeadingStatementConfiguration(schema));
            modelBuilder.Configurations.Add(new HelpKbkAutoConfiguration(schema));
            modelBuilder.Configurations.Add(new HistoriUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new HNameConfiguration(schema));
            modelBuilder.Configurations.Add(new ImZmTrFlConfiguration(schema));
            modelBuilder.Configurations.Add(new ImZmTrUlConfiguration(schema));
            modelBuilder.Configurations.Add(new IndividualCardsUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoViewAutomationConfiguration(schema));
            modelBuilder.Configurations.Add(new IsPatentParsConfiguration(schema));
            modelBuilder.Configurations.Add(new IsPatentParseConfiguration(schema));
            modelBuilder.Configurations.Add(new KbkPaymentConfiguration(schema));
            modelBuilder.Configurations.Add(new KbkPlatConfiguration(schema));
            modelBuilder.Configurations.Add(new KontrAgentConfiguration(schema));
            modelBuilder.Configurations.Add(new KrsbConfiguration(schema));
            modelBuilder.Configurations.Add(new KrsbNpConfiguration(schema));
            modelBuilder.Configurations.Add(new LogicsSelectAutomationConfiguration(schema));
            modelBuilder.Configurations.Add(new LogPreCheckConfiguration(schema));
            modelBuilder.Configurations.Add(new MainOrgConfiguration(schema));
            modelBuilder.Configurations.Add(new MainOrgAndKontrAgentConfiguration(schema));
            modelBuilder.Configurations.Add(new MainOrgAndQuestionConfiguration(schema));
            modelBuilder.Configurations.Add(new MainUserAndQuestionConfiguration(schema));
            modelBuilder.Configurations.Add(new MainUserRegistrationFlConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelKbkOnKbkConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelTreeConfiguration(schema));
            modelBuilder.Configurations.Add(new NdflFlConfiguration(schema));
            modelBuilder.Configurations.Add(new OrganizationOgrnInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new ParameterProcedureWebConfiguration(schema));
            modelBuilder.Configurations.Add(new ParametrNalogConfiguration(schema));
            modelBuilder.Configurations.Add(new PatentConfiguration(schema));
            modelBuilder.Configurations.Add(new PlaceOfBusinessConfiguration(schema));
            modelBuilder.Configurations.Add(new QuestionsAndUserConfiguration(schema));
            modelBuilder.Configurations.Add(new QuestionsAndUserRegistrationFlConfiguration(schema));
            modelBuilder.Configurations.Add(new RbHolidayConfiguration(schema));
            modelBuilder.Configurations.Add(new RealEstateZmImConfiguration(schema));
            modelBuilder.Configurations.Add(new RegisterDocumentsPrintingConfiguration(schema));
            modelBuilder.Configurations.Add(new ReportXlsxConfiguration(schema));
            modelBuilder.Configurations.Add(new RukAndUcrhConfiguration(schema));
            modelBuilder.Configurations.Add(new SenderResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new SenderTaxJournalOkp2Configuration(schema));
            modelBuilder.Configurations.Add(new SignatureBossConfiguration(schema));
            modelBuilder.Configurations.Add(new StatementConfiguration(schema));
            modelBuilder.Configurations.Add(new StatementFullConfiguration(schema));
            modelBuilder.Configurations.Add(new StatementNpConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusEventConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusFlRegistrationConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusOgrnConfiguration(schema));
            modelBuilder.Configurations.Add(new StrngthUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new SvedAccoutingUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new SvedFactPatentConfiguration(schema));
            modelBuilder.Configurations.Add(new SvedObjectConfiguration(schema));
            modelBuilder.Configurations.Add(new SvedTrConfiguration(schema));
            modelBuilder.Configurations.Add(new SynchronizationUserAndAiConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxDeclarationFlConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxEasJournalConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournalConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournal121Configuration(schema));
            modelBuilder.Configurations.Add(new TaxJournal121AutoWebPageConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournal121ErrorConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournal129Configuration(schema));
            modelBuilder.Configurations.Add(new TaxJournalAutoReportConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournalAutoWebPageConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournalDeliveryConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateAndTreeConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateModelResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateQuestionConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeDataAreaConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeExportConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeFilterConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeGridConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeUpdateConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeObjectConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeOrgAndQuestionConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeTreeConfiguration(schema));
            modelBuilder.Configurations.Add(new UlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new UlFaceAllConfiguration(schema));
            modelBuilder.Configurations.Add(new UlFaceAllSaleConfiguration(schema));
            modelBuilder.Configurations.Add(new UlFaceSalesBookBankConfiguration(schema));
            modelBuilder.Configurations.Add(new UserOrgConfiguration(schema));
            modelBuilder.Configurations.Add(new ViewRegisterDocumentsPrintingConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class AutomationFactory : System.Data.Entity.Infrastructure.IDbContextFactory<Automation>
    {
        public Automation Create()
        {
            return new Automation();
        }
    }

    #endregion

    #region POCO classes

    // AddDocumentToContainer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddDocumentToContainer
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdContainer { get; set; } // IdContainer
        public int IdDocument { get; set; } // IdDocument
        public int CounterModel { get; set; } // CounterModel
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent DocumentContainer pointed by [AddDocumentToContainer].([IdContainer]) (FK_AddDocumentToContainer_DocumentContainer)
        /// </summary>
        public DocumentContainer DocumentContainer { get; set; } // FK_AddDocumentToContainer_DocumentContainer

        /// <summary>
        /// Parent DocumentInventory pointed by [AddDocumentToContainer].([IdDocument]) (FK_AddDocumentToContainer_DocumentInventory)
        /// </summary>
        public DocumentInventory DocumentInventory { get; set; } // FK_AddDocumentToContainer_DocumentInventory

        public AddDocumentToContainer()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // AddUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddUlFace
    {
        public int IdUl { get; set; } // IdUl (Primary key)
        public string InnUl { get; set; } // InnUl (length: 12)
        public string FullStatus { get; set; } // FullStatus (length: 124)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FaceModelTemplateGetPosts where [FaceModelTemplateGetPost].[IdUl] point to this entity (FK_AddUlFace_FaceModelTemplateGetPost)
        /// </summary>
        public System.Collections.Generic.ICollection<FaceModelTemplateGetPost> FaceModelTemplateGetPosts { get; set; } // FaceModelTemplateGetPost.FK_AddUlFace_FaceModelTemplateGetPost

        public AddUlFace()
        {
            DateCreate = System.DateTime.Now;
            FaceModelTemplateGetPosts = new System.Collections.Generic.List<FaceModelTemplateGetPost>();
        }
    }

    // AddUlFaceWeb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddUlFaceWeb
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdUl { get; set; } // IdUl (Primary key)
        public string InnUl { get; set; } // InnUl (length: 12)
        public string FullStatus { get; set; } // FullStatus (length: 124)
    }

    // AisDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisDocument
    {
        public int IdAisDocument { get; set; } // IdAisDocument (Primary key)
        public int IdGrnAis3 { get; set; } // IdGrnAis3
        public int IdDocumentDirectory { get; set; } // IdDocumentDirectory
        public string SmallNameDocument { get; set; } // SmallNameDocument (length: 256)
        public string NumberDocument { get; set; } // NumberDocument (length: 256)
        public string DateDocument { get; set; } // DateDocument (length: 32)
        public int? CountPage { get; set; } // CountPage
        public string GuidDocument { get; set; } // GuidDocument (length: 128)
        public bool? IsFinndRegDelo { get; set; } // IsFinndRegDelo
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child SynchronizationUserAndAis where [SynchronizationUserAndAis].[IdAisDocument] point to this entity (FK_SynchronizationUserAndAis_AisDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<SynchronizationUserAndAi> SynchronizationUserAndAis { get; set; } // SynchronizationUserAndAis.FK_SynchronizationUserAndAis_AisDocument

        // Foreign keys

        /// <summary>
        /// Parent AisGrnDocument pointed by [AisDocument].([IdGrnAis3]) (FK_AisDocument_AisGrnDocument)
        /// </summary>
        public AisGrnDocument AisGrnDocument { get; set; } // FK_AisDocument_AisGrnDocument

        /// <summary>
        /// Parent DirectoryDocument pointed by [AisDocument].([IdDocumentDirectory]) (FK_AisDocument_DirectoryDocument)
        /// </summary>
        public DirectoryDocument DirectoryDocument { get; set; } // FK_AisDocument_DirectoryDocument

        public AisDocument()
        {
            IsFinndRegDelo = false;
            DateCreate = System.DateTime.Now;
            SynchronizationUserAndAis = new System.Collections.Generic.List<SynchronizationUserAndAi>();
        }
    }

    // AisGrnDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisGrnDocument
    {
        public int IdGrnAis3 { get; set; } // IdGrnAis3 (Primary key)
        public string FullNameGrnAis3 { get; set; } // FullNameGrnAis3 (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child AisDocuments where [AisDocument].[IdGrnAis3] point to this entity (FK_AisDocument_AisGrnDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<AisDocument> AisDocuments { get; set; } // AisDocument.FK_AisDocument_AisGrnDocument
        /// <summary>
        /// Child GrnInventories where [GrnInventory].[IdGrnAis3] point to this entity (FK_GrnInventory_AisGrnDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<GrnInventory> GrnInventories { get; set; } // GrnInventory.FK_GrnInventory_AisGrnDocument

        public AisGrnDocument()
        {
            DateCreate = System.DateTime.Now;
            AisDocuments = new System.Collections.Generic.List<AisDocument>();
            GrnInventories = new System.Collections.Generic.List<GrnInventory>();
        }
    }

    // AllFaceRegistryReference
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllFaceRegistryReference
    {
        public int IdFace { get; set; } // IdFace (Primary key)
        public bool TypeFaceBool { get; set; } // TypeFaceBool
        public string TypeFace { get; set; } // TypeFace (length: 8)
        public string NameFace { get; set; } // NameFace (length: 256)
        public string InnFace { get; set; } // InnFace (length: 12)
        public int? CodeNo { get; set; } // CodeNo
        public string TypeObjectModel { get; set; } // TypeObjectModel (length: 256)
        public bool IsState1 { get; set; } // IsState1
        public System.DateTime? DateState1 { get; set; } // DateState1
        public bool IsState2 { get; set; } // IsState2
        public System.DateTime? DateState2 { get; set; } // DateState2
        public string IsErrorMessage { get; set; } // IsErrorMessage (length: 1024)
        public System.DateTime? DateModification { get; set; } // DateModification

        public AllFaceRegistryReference()
        {
            TypeFaceBool = false;
            IsState1 = false;
            IsState2 = false;
            DateModification = System.DateTime.Now;
        }
    }

    // AllJournal129
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllJournal129
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public string StateColor { get; set; } // StateColor (length: 12)
        public string StateTaxPayerColor { get; set; } // State_TaxPayerColor (length: 12)
        public int? IdDelo { get; set; } // IdDelo
        public System.DateTime? DateError { get; set; } // DateError
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
    }

    // AllJournalRegistrationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllJournalRegistrationFl
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public string MessageStatus { get; set; } // MessageStatus (length: 1024)
        public string MessageError { get; set; } // MessageError (length: 1024)
        public long? IdNum { get; set; } // IdNum
        public long? Fid { get; set; } // Fid
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string F { get; set; } // F (length: 128)
        public string I { get; set; } // I (length: 128)
        public string O { get; set; } // O (length: 128)
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public string PlaceBirth { get; set; } // PlaceBirth (length: 1024)
        public string CodeSd { get; set; } // CodeSd (length: 32)
        public string Document { get; set; } // Document (length: 512)
        public string SeriaDoc { get; set; } // SeriaDoc (length: 32)
        public string NumberDoc { get; set; } // NumberDoc (length: 32)
        public System.DateTime? DateCreateDoc { get; set; } // DateCreateDoc
        public string WhoDoc { get; set; } // WhoDoc (length: 1024)
        public string CodePodr { get; set; } // CodePodr (length: 1024)
        public string Citizenship { get; set; } // Citizenship (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
        public System.DateTime DateCreate { get; set; } // DateCreate (Primary key)
    }

    // AllPatent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllPatent
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string OgrnIp { get; set; } // OgrnIp (length: 20)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string Address { get; set; } // Address (Primary key) (length: 1024)
        public string AddressObject { get; set; } // AddressObject (length: 1024)
        public string CodeWork { get; set; } // CodeWork (length: 31)
        public string NameVid { get; set; } // NameVid (Primary key) (length: 2048)
        public long? NumberPatent { get; set; } // NumberPatent
        public System.DateTime DateStartPatent { get; set; } // DateStartPatent (Primary key)
        public System.DateTime DateFinishPatent { get; set; } // DateFinishPatent (Primary key)
        public System.DateTime? DateCancel { get; set; } // DateCancel
        public System.DateTime DateResh { get; set; } // DateResh (Primary key)
        public decimal? NalogPsnPeriod { get; set; } // NalogPsnPeriod
        public decimal? NalogFact { get; set; } // NalogFact
        public string AvgPeople { get; set; } // AvgPeople (length: 32)
        public string CountMouth { get; set; } // CountMouth (length: 32)
        public string IdNumber { get; set; } // IdNumber (length: 1024)
        public string Model { get; set; } // Model (length: 256)
        public string RegNumber { get; set; } // RegNumber (length: 256)
        public decimal? Weight { get; set; } // Weight
        public int? NumberSeqts { get; set; } // NumberSeqts
        public int IdPatent { get; set; } // IdPatent (Primary key)
        public long? IndexId { get; set; } // IndexId
    }

    // Book
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Book
    {
        public int Id { get; set; } // Id
        public int IdUl { get; set; } // IdUl
        public long IdBook { get; set; } // IdBook (Primary key)
        public bool IsBookSalesParse { get; set; } // IsBookSalesParse
        public bool IsBookPurchase { get; set; } // IsBookPurchase
        public string Period { get; set; } // Period (length: 32)
        public System.DateTime DateStart { get; set; } // DateStart
        public double SummBookPurchase { get; set; } // SummBookPurchase
        public double SummBookSales { get; set; } // SummBookSales
        public double SummNds { get; set; } // SummNds
        public double SummTotal { get; set; } // SummTotal
        public int WeightProduct { get; set; } // WeightProduct
        public string NameOperator { get; set; } // NameOperator (length: 512)
        public string CodeTaxCom { get; set; } // CodeTaxCom (length: 512)
        public string IpAdres { get; set; } // IpAdres (length: 32)
        public string Telephone { get; set; } // Telephone (length: 32)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child BookPurchases where [BookPurchase].[IdBook] point to this entity (FK_BookPurchase_Book)
        /// </summary>
        public System.Collections.Generic.ICollection<BookPurchase> BookPurchases { get; set; } // BookPurchase.FK_BookPurchase_Book
        /// <summary>
        /// Child BookSales where [BookSales].[IdBook] point to this entity (FK_BookSales_Book)
        /// </summary>
        public System.Collections.Generic.ICollection<BookSale> BookSales { get; set; } // BookSales.FK_BookSales_Book

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [Book].([IdUl]) (FK_Book_UlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_Book_UlFace

        public Book()
        {
            IsBookSalesParse = false;
            IsBookPurchase = false;
            WeightProduct = 0;
            DateCreate = System.DateTime.Now;
            BookPurchases = new System.Collections.Generic.List<BookPurchase>();
            BookSales = new System.Collections.Generic.List<BookSale>();
        }
    }

    // BookPurchase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BookPurchase
    {
        public int Id { get; set; } // Id (Primary key)
        public long IdBook { get; set; } // IdBook
        public string F { get; set; } // F (length: 10)
        public string K { get; set; } // K (length: 10)
        public string C { get; set; } // C (length: 10)
        public int Str005 { get; set; } // Str005
        public string Str010 { get; set; } // Str010 (length: 128)
        public string Str020 { get; set; } // Str020 (length: 128)
        public System.DateTime? Str030 { get; set; } // Str030
        public string Str040 { get; set; } // Str040 (length: 128)
        public System.DateTime? Str050 { get; set; } // Str050
        public string Str060 { get; set; } // Str060 (length: 128)
        public System.DateTime? Str070 { get; set; } // Str070
        public string Str080 { get; set; } // Str080 (length: 128)
        public System.DateTime? Str090 { get; set; } // Str090
        public string Str120130 { get; set; } // Str120130
        public string Inn100 { get; set; } // Inn100 (length: 128)
        public string Kpp100 { get; set; } // Kpp100 (length: 128)
        public string NameCustomer100 { get; set; } // NameCustomer100 (length: 1024)
        public string Inn110 { get; set; } // Inn110 (length: 128)
        public string Kpp110 { get; set; } // Kpp110 (length: 128)
        public string NameMediator110 { get; set; } // NameMediator110 (length: 1024)
        public string RegNumber { get; set; } // RegNumber (length: 256)
        public int Str140 { get; set; } // Str140
        public double Str150 { get; set; } // Str150
        public double Str160 { get; set; } // Str160
        public double Str170 { get; set; } // Str170
        public double Str175 { get; set; } // Str175
        public double Str180 { get; set; } // Str180
        public double Str190 { get; set; } // Str190
        public double Str200 { get; set; } // Str200
        public double Str205 { get; set; } // Str205
        public double Str210 { get; set; } // Str210
        public double Str220 { get; set; } // Str220
        public int CountRnp { get; set; } // CountRnp
        public string Sf { get; set; } // Sf (length: 256)
        public string ListDop { get; set; } // ListDop (length: 256)
        public string CodeProduct { get; set; } // CodeProduct (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Book pointed by [BookPurchase].([IdBook]) (FK_BookPurchase_Book)
        /// </summary>
        public Book Book { get; set; } // FK_BookPurchase_Book

        public BookPurchase()
        {
            CountRnp = 0;
            DateCreate = System.DateTime.Now;
        }
    }

    // BookSales
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BookSale
    {
        public int Id { get; set; } // Id (Primary key)
        public long IdBook { get; set; } // IdBook
        public string F { get; set; } // F (length: 10)
        public string K { get; set; } // K (length: 10)
        public string C { get; set; } // C (length: 10)
        public int Str005 { get; set; } // Str005
        public string Str010 { get; set; } // Str010 (length: 128)
        public string Str020 { get; set; } // Str020 (length: 1024)
        public System.DateTime? Str030 { get; set; } // Str030
        public string Str040 { get; set; } // Str040 (length: 128)
        public System.DateTime? Str050 { get; set; } // Str050
        public string Str060 { get; set; } // Str060 (length: 128)
        public System.DateTime? Str070 { get; set; } // Str070
        public string Str080 { get; set; } // Str080 (length: 128)
        public System.DateTime? Str090 { get; set; } // Str090
        public string Str100110 { get; set; } // Str100110 (length: 1024)
        public System.DateTime? Str120 { get; set; } // Str120
        public string Inn130 { get; set; } // Inn130 (length: 128)
        public string Kpp130 { get; set; } // Kpp130 (length: 128)
        public string NameSale130 { get; set; } // NameSale130 (length: 1024)
        public string Inn140 { get; set; } // Inn140 (length: 128)
        public string Kpp140 { get; set; } // Kpp140 (length: 128)
        public string NameMediator140 { get; set; } // NameMediator140 (length: 1024)
        public string RegNumber { get; set; } // RegNumber (length: 256)
        public int Str160 { get; set; } // Str160
        public double Str170 { get; set; } // Str170
        public double Str180 { get; set; } // Str180
        public int CountRnp { get; set; } // CountRnp
        public string Sf { get; set; } // Sf (length: 256)
        public string ListDop { get; set; } // ListDop (length: 256)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Book pointed by [BookSales].([IdBook]) (FK_BookSales_Book)
        /// </summary>
        public Book Book { get; set; } // FK_BookSales_Book

        public BookSale()
        {
            Str160 = 0;
            CountRnp = 0;
            DateCreate = System.DateTime.Now;
        }
    }

    // BranchUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BranchUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public System.DateTime? DataCreateBranch { get; set; } // DataCreateBranch
        public System.DateTime? DataCloseBranch { get; set; } // DataCloseBranch
        public string IndexAddress { get; set; } // IndexAddress (length: 8)
        public string RegionAddress { get; set; } // RegionAddress (length: 1024)
        public string DistrictAddress { get; set; } // DistrictAddress (length: 1024)
        public string TownAddress { get; set; } // TownAddress (length: 1024)
        public string LocalityAddress { get; set; } // LocalityAddress (length: 1024)
        public string StreetAddress { get; set; } // StreetAddress (length: 1024)
        public string HouseAddress { get; set; } // HouseAddress (length: 1024)
        public string BodyAddress { get; set; } // BodyAddress (length: 1024)
        public string ApartmentAddress { get; set; } // ApartmentAddress (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [BranchUlFace].([IdUl]) (FK_UlFace_BranchUlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_BranchUlFace

        public BranchUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // CashBankAllUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashBankAllUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public string IdNum { get; set; } // IdNum (length: 1024)
        public System.DateTime? DateWay { get; set; } // DateWay
        public int? CodeNo { get; set; } // CodeNo
        public System.DateTime? DatePriem { get; set; } // DatePriem
        public string NameBank { get; set; } // NameBank (length: 1024)
        public string Bik { get; set; } // Bik (length: 1024)
        public string InnBank { get; set; } // InnBank (length: 12)
        public string KppBank { get; set; } // KppBank (length: 12)
        public string NumberCash { get; set; } // NumberCash (length: 32)
        public string Cash { get; set; } // Cash (length: 32)
        public System.DateTime? DateStartPeriod { get; set; } // DateStartPeriod
        public System.DateTime? DateFinishPeriod { get; set; } // DateFinishPeriod
        public double? CashScoreStartPeriod { get; set; } // CashScoreStartPeriod
        public double? CashScoreFinishPeriod { get; set; } // CashScoreFinishPeriod
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [CashBankAllUlFace].([IdUl]) (FK_UlFace_CashBankAllUlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_CashBankAllUlFace

        public CashBankAllUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // CashUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string CashNumber { get; set; } // CashNumber (Primary key) (length: 1024)
        public System.DateTime? DataOpenCash { get; set; } // DataOpenCash
        public System.DateTime? DataClosedCash { get; set; } // DataClosedCash
        public string TypeCash { get; set; } // TypeCash (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [CashUlFace].([IdUl]) (FK_UlFace_CashUlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_CashUlFace

        public CashUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // CounterpartyCashBank
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CounterpartyCashBank
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public string TypeCash { get; set; } // TypeCash (length: 256)
        public string PriznakCash { get; set; } // PriznakCash (length: 256)
        public string NumberCash { get; set; } // NumberCash (length: 20)
        public string Currency { get; set; } // Currency (length: 32)
        public string CorrespondentAccountNumberCounterparty { get; set; } // CorrespondentAccountNumberCounterparty (length: 64)
        public string NameBankCounterparty { get; set; } // NameBankCounterparty (length: 512)
        public string BikBankCounterparty { get; set; } // BikBankCounterparty (length: 32)
        public string InnBankCounterparty { get; set; } // InnBankCounterparty (length: 12)
        public string KppBankCounterparty { get; set; } // KppBankCounterparty (length: 12)
        public string CashCounterparty { get; set; } // CashCounterparty (length: 64)
        public System.DateTime DateOperation { get; set; } // DateOperation
        public string SurOperation { get; set; } // SurOperation (length: 256)
        public string NameOperation { get; set; } // NameOperation (length: 512)
        public string InnOperation { get; set; } // InnOperation (length: 12)
        public string KppOperation { get; set; } // KppOperation (length: 12)
        public string OkvedOperation { get; set; } // OkvedOperation (length: 256)
        public string NumberDocOperation { get; set; } // NumberDocOperation (length: 32)
        public string VieDocOperation { get; set; } // VieDocOperation (length: 32)
        public double ExpenseSumOperationUsa { get; set; } // ExpenseSumOperationUSA
        public double ExpenseSumOperationRu { get; set; } // ExpenseSumOperationRU
        public double ComingSumOperationUsa { get; set; } // ComingSumOperationUSA
        public double ComingSumOperationRu { get; set; } // ComingSumOperationRU
        public string TypeSumOperation { get; set; } // TypeSumOperation (length: 256)
        public string TargetSumOperation { get; set; } // TargetSumOperation (length: 256)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [CounterpartyCashBank].([IdUl]) (FK_CounterpartyCashBank_UlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_CounterpartyCashBank_UlFace

        public CounterpartyCashBank()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DataAreaParameters
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DataAreaParameter
    {
        public int IdGridParameters { get; set; } // IdGridParameters (Primary key)
        public int? IdDataArea { get; set; } // IdDataArea
        public string NameParameters { get; set; } // NameParameters (length: 2048)
        public string FindNameMemo { get; set; } // FindNameMemo (length: 128)
        public string IndexParameters { get; set; } // IndexParameters (length: 128)
        public string ParametersGrid { get; set; } // ParametersGrid (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent TreeDataArea pointed by [DataAreaParameters].([IdDataArea]) (FK_TreeDataArea_DataAreaParameters)
        /// </summary>
        public TreeDataArea TreeDataArea { get; set; } // FK_TreeDataArea_DataAreaParameters

        public DataAreaParameter()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // Declaration3Ndfl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Declaration3Ndfl
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public long IdObject { get; set; } // IdObject (Primary key)
        public string NameNp { get; set; } // NameNp (length: 256)
        public string InnNp { get; set; } // InnNp (length: 12)
        public int? God { get; set; } // God
        public double? SummR { get; set; } // SummR
        public double? SummP { get; set; } // SummP
        public double? SummV { get; set; } // SummV
        public double? SummPv { get; set; } // SummPV
        public double? SummI { get; set; } // SummI
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Extensions { get; set; } // Extensions (length: 10)
    }

    // Declaration3NdflFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Declaration3NdflFl
    {
        public int Id { get; set; } // Id
        public int? IdFl { get; set; } // IdFl
        public string ColorType1 { get; set; } // ColorType1 (length: 10)
        public string ColorType2 { get; set; } // ColorType2 (length: 10)
        public string ColorType3 { get; set; } // ColorType3 (length: 10)
        public string ColorType4 { get; set; } // ColorType4 (length: 10)
        public string ColorType5 { get; set; } // ColorType5 (length: 10)
        public string ColorType6 { get; set; } // ColorType6 (length: 10)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public long IdObject { get; set; } // IdObject
        public string NameNp { get; set; } // NameNp (length: 256)
        public string InnNp { get; set; } // InnNp (length: 12)
        public int? God { get; set; } // God
        public double? SummR { get; set; } // SummR
        public double? SummP { get; set; } // SummP
        public double? SummV { get; set; } // SummV
        public double? SummPv { get; set; } // SummPV
        public double? SummI { get; set; } // SummI
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DeclarationData3NdflFl where [DeclarationData3NdflFl].[RegNumDecl] point to this entity (FK_DeclarationData3NdflFl_Declaration3NdflFl)
        /// </summary>
        public System.Collections.Generic.ICollection<DeclarationData3NdflFl> DeclarationData3NdflFl { get; set; } // DeclarationData3NdflFl.FK_DeclarationData3NdflFl_Declaration3NdflFl

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [Declaration3NdflFl].([IdFl]) (FK_Declaration3NdflFl_FlFace)
        /// </summary>
        public FlFace FlFace { get; set; } // FK_Declaration3NdflFl_FlFace

        public Declaration3NdflFl()
        {
            SummR = 0;
            SummP = 0;
            SummV = 0;
            SummPv = 0;
            SummI = 0;
            DateCreate = System.DateTime.Now;
            DeclarationData3NdflFl = new System.Collections.Generic.List<DeclarationData3NdflFl>();
        }
    }

    // DeclarationAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationAll
    {
        public int Id { get; set; } // Id
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public double Psumm { get; set; } // Psumm
        public string Knd { get; set; } // Knd (length: 12)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public string VidDoc { get; set; } // VidDoc (length: 1024)
        public int NumberKor { get; set; } // NumberKor
        public string Period { get; set; } // Period (length: 1024)
        public int? God { get; set; } // God
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DeclarationDataAlls where [DeclarationDataAll].[RegNumDecl] point to this entity (FK_DeclarationDataAll_DeclarationAll)
        /// </summary>
        public System.Collections.Generic.ICollection<DeclarationDataAll> DeclarationDataAlls { get; set; } // DeclarationDataAll.FK_DeclarationDataAll_DeclarationAll

        public DeclarationAll()
        {
            DateCreate = System.DateTime.Now;
            DeclarationDataAlls = new System.Collections.Generic.List<DeclarationDataAll>();
        }
    }

    // DeclarationData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationData
    {
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string CodeString { get; set; } // CodeString (length: 1024)
        public string NameParametr { get; set; } // NameParametr (length: 1024)
        public string CodeParametr { get; set; } // CodeParametr (length: 1024)
        public string DataFace { get; set; } // DataFace (length: 1024)
        public string DataInspector { get; set; } // DataInspector (length: 1024)
        public string Error { get; set; } // Error (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent DeclarationUl pointed by [DeclarationData].([RegNumDecl]) (FK_DeclarationData_DeclarationUl)
        /// </summary>
        public DeclarationUl DeclarationUl { get; set; } // FK_DeclarationData_DeclarationUl

        public DeclarationData()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DeclarationData3NdflFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationData3NdflFl
    {
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string CodeString { get; set; } // CodeString (length: 1024)
        public string NameParametr { get; set; } // NameParametr (length: 1024)
        public string CodeParametr { get; set; } // CodeParametr (length: 1024)
        public string DataFace { get; set; } // DataFace (length: 1024)
        public string DataInspector { get; set; } // DataInspector (length: 1024)
        public string Error { get; set; } // Error (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Declaration3NdflFl pointed by [DeclarationData3NdflFl].([RegNumDecl]) (FK_DeclarationData3NdflFl_Declaration3NdflFl)
        /// </summary>
        public Declaration3NdflFl Declaration3NdflFl { get; set; } // FK_DeclarationData3NdflFl_Declaration3NdflFl

        public DeclarationData3NdflFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DeclarationDataAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationDataAll
    {
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string CodeString { get; set; } // CodeString (length: 1024)
        public string NameParametr { get; set; } // NameParametr (length: 1024)
        public string CodeParametr { get; set; } // CodeParametr (length: 1024)
        public string DataFace { get; set; } // DataFace (length: 1024)
        public string DataInspector { get; set; } // DataInspector (length: 1024)
        public string Error { get; set; } // Error (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent DeclarationAll pointed by [DeclarationDataAll].([RegNumDecl]) (FK_DeclarationDataAll_DeclarationAll)
        /// </summary>
        public DeclarationAll DeclarationAll { get; set; } // FK_DeclarationDataAll_DeclarationAll

        public DeclarationDataAll()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DeclarationDataFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationDataFl
    {
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string CodeString { get; set; } // CodeString (length: 1024)
        public string NameParametr { get; set; } // NameParametr (length: 1024)
        public string CodeParametr { get; set; } // CodeParametr (length: 1024)
        public string DataFace { get; set; } // DataFace (length: 1024)
        public string DataInspector { get; set; } // DataInspector (length: 1024)
        public string Error { get; set; } // Error (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent DeclarationFl pointed by [DeclarationDataFl].([RegNumDecl]) (FK_DeclarationDataFl_DeclarationFl)
        /// </summary>
        public DeclarationFl DeclarationFl { get; set; } // FK_DeclarationDataFl_DeclarationFl

        public DeclarationDataFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DeclarationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationFl
    {
        public int Id { get; set; } // Id
        public int? IdFl { get; set; } // IdFl
        public string ColorType2 { get; set; } // ColorType2 (length: 10)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public double Psumm { get; set; } // Psumm
        public string Knd { get; set; } // Knd (length: 12)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public string Period { get; set; } // Period (length: 1024)
        public int NumberKor { get; set; } // NumberKor
        public int? God { get; set; } // God
        public string NameNp { get; set; } // NameNp (length: 256)
        public string InnNp { get; set; } // InnNp (length: 12)
        public bool SignOfDevialion { get; set; } // SignOfDevialion
        public double SummSignOfDevialion { get; set; } // SummSignOfDevialion
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DeclarationDataFls where [DeclarationDataFl].[RegNumDecl] point to this entity (FK_DeclarationDataFl_DeclarationFl)
        /// </summary>
        public System.Collections.Generic.ICollection<DeclarationDataFl> DeclarationDataFls { get; set; } // DeclarationDataFl.FK_DeclarationDataFl_DeclarationFl

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [DeclarationFl].([IdFl]) (FK_DeclarationFl_FlFace)
        /// </summary>
        public FlFace FlFace { get; set; } // FK_DeclarationFl_FlFace

        public DeclarationFl()
        {
            SignOfDevialion = false;
            SummSignOfDevialion = 0;
            DateCreate = System.DateTime.Now;
            DeclarationDataFls = new System.Collections.Generic.List<DeclarationDataFl>();
        }
    }

    // DeclarationUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationUl
    {
        public int Id { get; set; } // Id
        public int? IdUl { get; set; } // IdUl
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public double Psumm { get; set; } // Psumm
        public string Knd { get; set; } // Knd (length: 12)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public string VidDoc { get; set; } // VidDoc (length: 1024)
        public int NumberKor { get; set; } // NumberKor
        public string Period { get; set; } // Period (length: 1024)
        public int? God { get; set; } // God
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DeclarationDatas where [DeclarationData].[RegNumDecl] point to this entity (FK_DeclarationData_DeclarationUl)
        /// </summary>
        public System.Collections.Generic.ICollection<DeclarationData> DeclarationDatas { get; set; } // DeclarationData.FK_DeclarationData_DeclarationUl

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [DeclarationUl].([IdUl]) (FK_DeclarationUl_UlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_DeclarationUl_UlFace

        public DeclarationUl()
        {
            DateCreate = System.DateTime.Now;
            DeclarationDatas = new System.Collections.Generic.List<DeclarationData>();
        }
    }

    // DeliveryDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeliveryDocument
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public long RegNumber { get; set; } // RegNumber (Primary key)
        public string LoginUser { get; set; } // LoginUser (Primary key) (length: 1024)
        public System.DateTime DateDocument { get; set; } // DateDocument (Primary key)
        public System.DateTime DateSend { get; set; } // DateSend (Primary key)
        public System.DateTime DateDelivery { get; set; } // DateDelivery (Primary key)
        public int Number { get; set; } // Number (Primary key)
        public string NameDocument { get; set; } // NameDocument (length: 512)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string TypeFace { get; set; } // TypeFace (length: 32)
        public long? RegNumDeclarationDelivery { get; set; } // RegNumDeclarationDelivery
        public string Knd { get; set; } // Knd (length: 32)
        public string NameDeclaration { get; set; } // NameDeclaration (Primary key) (length: 1024)
        public int God { get; set; } // God (Primary key)
    }

    // DepartamentOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DepartamentOtdel
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdSender { get; set; } // IdSender
        public string NameDepartament { get; set; } // NameDepartament (length: 256)
        public string NameDepartamentActiveDerectory { get; set; } // NameDepartamentActiveDerectory (length: 256)
        public string StatusFace { get; set; } // StatusFace (length: 32)
        public string Office { get; set; } // Office (length: 32)
        public string Telephon { get; set; } // Telephon (length: 32)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent SenderTaxJournalOkp2 pointed by [DepartamentOtdel].([IdSender]) (FK_SenderTaxJournalOkp2_DepartamentOtdel)
        /// </summary>
        public SenderTaxJournalOkp2 SenderTaxJournalOkp2 { get; set; } // FK_SenderTaxJournalOkp2_DepartamentOtdel

        public DepartamentOtdel()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // DepartmentOtdelResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DepartmentOtdelResponse
    {
        public int IdDepartment { get; set; } // IdDepartment (Primary key)
        public int IdSenderResponse { get; set; } // IdSenderResponse
        public int IdTemplateResponse { get; set; } // IdTemplateResponse
        public string NameDepartment { get; set; } // NameDepartment (length: 256)
        public string NameDepartmentActiveDirectory { get; set; } // NameDepartmentActiveDirectory (length: 64)
        public string TemplateDepartment { get; set; } // TemplateDepartment (length: 512)
        public string Office { get; set; } // Office (length: 32)
        public string Phone { get; set; } // Phone (length: 32)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent SenderResponse pointed by [DepartmentOtdelResponse].([IdSenderResponse]) (FK_SenderResponse_DepartmentOtdelResponse)
        /// </summary>
        public SenderResponse SenderResponse { get; set; } // FK_SenderResponse_DepartmentOtdelResponse

        /// <summary>
        /// Parent TemplateModelResponse pointed by [DepartmentOtdelResponse].([IdTemplateResponse]) (FK_TemplateModelResponse_DepartmentOtdelResponse)
        /// </summary>
        public TemplateModelResponse TemplateModelResponse { get; set; } // FK_TemplateModelResponse_DepartmentOtdelResponse

        public DepartmentOtdelResponse()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Derector
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Derector
    {
        public int IdDerector { get; set; } // IdDerector (Primary key)
        public string NameDerector { get; set; } // NameDerector (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child MainOrgs where [MainOrg].[IdDerector] point to this entity (FK_Derector_MainOrg)
        /// </summary>
        public System.Collections.Generic.ICollection<MainOrg> MainOrgs { get; set; } // MainOrg.FK_Derector_MainOrg

        public Derector()
        {
            DateCreate = System.DateTime.Now;
            MainOrgs = new System.Collections.Generic.List<MainOrg>();
        }
    }

    // DirectoryDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DirectoryDocument
    {
        public int IdDocumentDirectory { get; set; } // IdDocumentDirectory (Primary key)
        public string NameDocumentDataBase { get; set; } // NameDocumentDataBase (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child AisDocuments where [AisDocument].[IdDocumentDirectory] point to this entity (FK_AisDocument_DirectoryDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<AisDocument> AisDocuments { get; set; } // AisDocument.FK_AisDocument_DirectoryDocument
        /// <summary>
        /// Child DocumentInventories where [DocumentInventory].[IdDocumentDirectory] point to this entity (FK_DocumentInventory_DirectoryDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<DocumentInventory> DocumentInventories { get; set; } // DocumentInventory.FK_DocumentInventory_DirectoryDocument

        public DirectoryDocument()
        {
            DateCreate = System.DateTime.Now;
            AisDocuments = new System.Collections.Generic.List<AisDocument>();
            DocumentInventories = new System.Collections.Generic.List<DocumentInventory>();
        }
    }

    // DocPatent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocPatent
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public int IdPatent { get; set; } // IdPatent
        public string ActualPatent { get; set; } // ActualPatent (length: 512)
        public string KodePr { get; set; } // KodePr (length: 16)
        public long? RegNum { get; set; } // RegNum
        public long? Number { get; set; } // Number
        public int? Knd { get; set; } // Knd
        public int? VidDoc { get; set; } // VidDoc
        public string NameDoc { get; set; } // NameDoc (length: 1024)
        public System.DateTime? DateCreatePatent { get; set; } // DateCreatePatent
        public System.DateTime? DateIn { get; set; } // DateIn
        public System.DateTime? DateOutTksMail { get; set; } // DateOutTksMail
        public int CodeIfns { get; set; } // CodeIfns
        public string Fid { get; set; } // Fid (length: 128)
        public long IdDoc { get; set; } // IdDoc
        public long IdWrite { get; set; } // IdWrite
        public int IdIn { get; set; } // IdIn
        public int? IdInIst { get; set; } // IdInIst
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Patent pointed by [DocPatent].([IdPatent]) (FK_DocPatent_Patent)
        /// </summary>
        public Patent Patent { get; set; } // FK_DocPatent_Patent

        public DocPatent()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Documen2NDFL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Documen2Ndfl
    {
        public int Id { get; set; } // Id
        public long IdDoc { get; set; } // IdDoc (Primary key via unique index UQ__Documen2__0E65F8DA6399A2AA)
        public long? IdFile { get; set; } // IdFile
        public int? Ifns { get; set; } // Ifns
        public int? Yars { get; set; } // Yars
        public int? Priznak { get; set; } // Priznak
        public string Inn { get; set; } // INN (length: 12)
        public string FName { get; set; } // FName (length: 512)
        public string IName { get; set; } // IName (length: 512)
        public string OName { get; set; } // OName (length: 512)
        public string Fio { get; set; } // FIO (length: 512)
        public string Document { get; set; } // Document (length: 1024)
        public string SeriaNumber { get; set; } // SeriaNumber (length: 1024)
        public System.DateTime? DateNameUser { get; set; } // DateNameUser
        public string InnOrganization { get; set; } // InnOrganization (length: 12)
        public string NameOrganization { get; set; } // NameOrganization (length: 1024)
        public long? Fid { get; set; } // Fid
        public long? IdFl { get; set; } // IdFl
        public string InnUtoch { get; set; } // INNUtoch (length: 12)
        public string FNameUtoch { get; set; } // FNameUtoch (length: 512)
        public string INameUtoch { get; set; } // INameUtoch (length: 512)
        public string ONameUtoch { get; set; } // ONameUtoch (length: 512)
        public System.DateTime? DateNameUserUtoch { get; set; } // DateNameUserUtoch
        public string StatusSved { get; set; } // StatusSved (length: 512)
        public string ErrorNameStatus { get; set; } // ErrorNameStatus (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public Documen2Ndfl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Documen2NDFLIdentification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Documen2NdflIdentification
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public long IdDoc { get; set; } // IdDoc (Primary key)
        public long? IdFile { get; set; } // IdFile
        public int? Ifns { get; set; } // Ifns
        public int? Yars { get; set; } // Yars
        public int? Priznak { get; set; } // Priznak
        public string Inn { get; set; } // INN (length: 12)
        public string FName { get; set; } // FName (length: 512)
        public string IName { get; set; } // IName (length: 512)
        public string OName { get; set; } // OName (length: 512)
        public string Fio { get; set; } // FIO (length: 512)
        public string Document { get; set; } // Document (length: 1024)
        public string SeriaNumber { get; set; } // SeriaNumber (length: 1024)
        public System.DateTime? DateNameUser { get; set; } // DateNameUser
        public string InnOrganization { get; set; } // InnOrganization (length: 12)
        public string NameOrganization { get; set; } // NameOrganization (length: 1024)
        public long? Fid { get; set; } // Fid
        public long? IdFl { get; set; } // IdFl
        public string InnUtoch { get; set; } // INNUtoch (length: 12)
        public string FNameUtoch { get; set; } // FNameUtoch (length: 512)
        public string INameUtoch { get; set; } // INameUtoch (length: 512)
        public string ONameUtoch { get; set; } // ONameUtoch (length: 512)
        public System.DateTime? DateNameUserUtoch { get; set; } // DateNameUserUtoch
        public string StatusSved { get; set; } // StatusSved (length: 512)
        public string ErrorNameStatus { get; set; } // ErrorNameStatus (length: 1024)
    }

    // DocumentContainer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentContainer
    {
        public int IdContainer { get; set; } // IdContainer (Primary key)
        public string BarcodeContainer { get; set; } // BarcodeContainer (length: 256)
        public int CountCurrent { get; set; } // CountCurrent
        public int CountDocumentMin { get; set; } // CountDocumentMin
        public int CountDocumentMax { get; set; } // CountDocumentMax
        public bool IsFinishContainer { get; set; } // IsFinishContainer
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child AddDocumentToContainers where [AddDocumentToContainer].[IdContainer] point to this entity (FK_AddDocumentToContainer_DocumentContainer)
        /// </summary>
        public System.Collections.Generic.ICollection<AddDocumentToContainer> AddDocumentToContainers { get; set; } // AddDocumentToContainer.FK_AddDocumentToContainer_DocumentContainer

        public DocumentContainer()
        {
            CountCurrent = 0;
            CountDocumentMin = 500;
            CountDocumentMax = 510;
            IsFinishContainer = false;
            DateCreate = System.DateTime.Now;
            AddDocumentToContainers = new System.Collections.Generic.List<AddDocumentToContainer>();
        }
    }

    // DocumentInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentInventory
    {
        public int IdDocument { get; set; } // IdDocument (Primary key)
        public int IdDocGrn { get; set; } // IdDocGrn
        public int IdDocumentDirectory { get; set; } // IdDocumentDirectory
        public int? IdInfo { get; set; } // IdInfo
        public int CountPage { get; set; } // CountPage
        public string GuidDocument { get; set; } // GuidDocument (length: 1024)
        public bool StateDocument { get; set; } // StateDocument
        public int IdStatusDocument { get; set; } // IdStatusDocument
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child AddDocumentToContainers where [AddDocumentToContainer].[IdDocument] point to this entity (FK_AddDocumentToContainer_DocumentInventory)
        /// </summary>
        public System.Collections.Generic.ICollection<AddDocumentToContainer> AddDocumentToContainers { get; set; } // AddDocumentToContainer.FK_AddDocumentToContainer_DocumentInventory
        /// <summary>
        /// Child SynchronizationUserAndAis where [SynchronizationUserAndAis].[IdDocument] point to this entity (FK_SynchronizationUserAndAis_DocumentInventory)
        /// </summary>
        public System.Collections.Generic.ICollection<SynchronizationUserAndAi> SynchronizationUserAndAis { get; set; } // SynchronizationUserAndAis.FK_SynchronizationUserAndAis_DocumentInventory

        // Foreign keys

        /// <summary>
        /// Parent DirectoryDocument pointed by [DocumentInventory].([IdDocumentDirectory]) (FK_DocumentInventory_DirectoryDocument)
        /// </summary>
        public DirectoryDocument DirectoryDocument { get; set; } // FK_DocumentInventory_DirectoryDocument

        /// <summary>
        /// Parent GrnInventory pointed by [DocumentInventory].([IdDocGrn]) (FK_DocumentInventory_GrnInventory)
        /// </summary>
        public GrnInventory GrnInventory { get; set; } // FK_DocumentInventory_GrnInventory

        /// <summary>
        /// Parent InfoDocument pointed by [DocumentInventory].([IdInfo]) (FK_DocumentInventory_InfoDocument)
        /// </summary>
        public InfoDocument InfoDocument { get; set; } // FK_DocumentInventory_InfoDocument

        /// <summary>
        /// Parent StatusDocument pointed by [DocumentInventory].([IdStatusDocument]) (FK_DocumentInventory_StatusDocument)
        /// </summary>
        public StatusDocument StatusDocument { get; set; } // FK_DocumentInventory_StatusDocument

        public DocumentInventory()
        {
            StateDocument = false;
            DateCreate = System.DateTime.Now;
            AddDocumentToContainers = new System.Collections.Generic.List<AddDocumentToContainer>();
            SynchronizationUserAndAis = new System.Collections.Generic.List<SynchronizationUserAndAi>();
        }
    }

    // DocumentOwnershipImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentOwnershipImZmTrFl
    {
        public int Id { get; set; } // Id (Primary key)
        public long FidObject { get; set; } // FidObject (Primary key)
        public string NumberDocument { get; set; } // NumberDocument (length: 512)
        public System.DateTime? DateDocument { get; set; } // DateDocument
        public string CodeDocument { get; set; } // CodeDocument (length: 512)
        public string NameDocument { get; set; } // NameDocument (length: 512)
        public string Name { get; set; } // Name (length: 512)
        public double? CashDeal { get; set; } // CashDeal
        public string CashText { get; set; } // CashText (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent FactOfOwnershipImZmTrFl pointed by [DocumentOwnershipImZmTrFl].([FidObject]) (FK_DocumentOwnershipImZmTrFl_FactOfOwnershipImZmTrFl)
        /// </summary>
        public FactOfOwnershipImZmTrFl FactOfOwnershipImZmTrFl { get; set; } // FK_DocumentOwnershipImZmTrFl_FactOfOwnershipImZmTrFl

        public DocumentOwnershipImZmTrFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // EasJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EasJournal
    {
        public int Id { get; set; } // Id (Primary key)
        public string Color { get; set; } // Color (length: 12)
        public string Color1 { get; set; } // Color1 (length: 12)
        public long RegNumber { get; set; } // RegNumber
        public long? RegNumberZ { get; set; } // RegNumberZ
        public string Knd { get; set; } // Knd (length: 64)
        public string NameKnd { get; set; } // NameKnd (length: 1024)
        public System.DateTime? DateDocument { get; set; } // DateDocument
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameNp { get; set; } // NameNp (length: 1024)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string NameFile { get; set; } // NameFile (length: 128)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public System.DateTime DataCreate { get; set; } // DataCreate

        public EasJournal()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ErrorFlRegistration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ErrorFlRegistration
    {
        public int IdError { get; set; } // IdError (Primary key)
        public string MessageError { get; set; } // MessageError (length: 1024)
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FlFaceMainRegistrations where [FlFaceMainRegistration].[IdError] point to this entity (FK_FlFaceMainRegistration_ErrorFlRegistration)
        /// </summary>
        public System.Collections.Generic.ICollection<FlFaceMainRegistration> FlFaceMainRegistrations { get; set; } // FlFaceMainRegistration.FK_FlFaceMainRegistration_ErrorFlRegistration

        public ErrorFlRegistration()
        {
            DateCreate = System.DateTime.Now;
            FlFaceMainRegistrations = new System.Collections.Generic.List<FlFaceMainRegistration>();
        }
    }

    // EventProcessError
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EventProcessError
    {
        public int IdProcess { get; set; } // IdProcess (Primary key)
        public string FullKeyProcess { get; set; } // FullKeyProcess
        public int IdStatusEvent { get; set; } // IdStatusEvent
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child GrnInventoryAndEventProcessErrors where [GrnInventoryAndEventProcessError].[IdProcess] point to this entity (FK_GrnInventoryAndEventProcessError_EventProcessError)
        /// </summary>
        public System.Collections.Generic.ICollection<GrnInventoryAndEventProcessError> GrnInventoryAndEventProcessErrors { get; set; } // GrnInventoryAndEventProcessError.FK_GrnInventoryAndEventProcessError_EventProcessError

        // Foreign keys

        /// <summary>
        /// Parent StatusEvent pointed by [EventProcessError].([IdStatusEvent]) (FK_EventProcessError_StatusEvent)
        /// </summary>
        public StatusEvent StatusEvent { get; set; } // FK_EventProcessError_StatusEvent

        public EventProcessError()
        {
            DateCreate = System.DateTime.Now;
            GrnInventoryAndEventProcessErrors = new System.Collections.Generic.List<GrnInventoryAndEventProcessError>();
        }
    }

    // FaceModelTemplateGetPost
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FaceModelTemplateGetPost
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public int IdTemplate { get; set; } // IdTemplate
        public int IdTree { get; set; } // IdTree
        public string StatusModel { get; set; } // StatusModel (length: 124)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent AddUlFace pointed by [FaceModelTemplateGetPost].([IdUl]) (FK_AddUlFace_FaceModelTemplateGetPost)
        /// </summary>
        public AddUlFace AddUlFace { get; set; } // FK_AddUlFace_FaceModelTemplateGetPost

        /// <summary>
        /// Parent Template pointed by [FaceModelTemplateGetPost].([IdTemplate]) (FK_Template_FaceModelTemplateGetPost)
        /// </summary>
        public Template Template { get; set; } // FK_Template_FaceModelTemplateGetPost

        /// <summary>
        /// Parent Tree pointed by [FaceModelTemplateGetPost].([IdTree]) (FK_Tree_FaceModelTemplateGetPost)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_FaceModelTemplateGetPost

        public FaceModelTemplateGetPost()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // FaceRegistryReference
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FaceRegistryReference
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdFace { get; set; } // IdFace (Primary key)
        public bool TypeFaceBool { get; set; } // TypeFaceBool (Primary key)
        public string TypeFace { get; set; } // TypeFace (Primary key) (length: 8)
        public string NameFace { get; set; } // NameFace (length: 256)
        public string InnFace { get; set; } // InnFace (Primary key) (length: 12)
        public int? CodeNo { get; set; } // CodeNo
        public string TypeObjectModel { get; set; } // TypeObjectModel (length: 256)
        public bool IsState1 { get; set; } // IsState1 (Primary key)
        public System.DateTime? DateState1 { get; set; } // DateState1
        public bool IsState2 { get; set; } // IsState2 (Primary key)
        public System.DateTime? DateState2 { get; set; } // DateState2
        public string IsErrorMessage { get; set; } // IsErrorMessage (length: 1024)
        public System.DateTime? DateModification { get; set; } // DateModification
    }

    // FactOfOwnershipImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FactOfOwnershipImZmTrFl
    {
        public int Id { get; set; } // Id
        public int IdFl { get; set; } // IdFl
        public int IdObject { get; set; } // IdObject
        public long FidObject { get; set; } // FidObject (Primary key)
        public long FidFl { get; set; } // FidFl
        public long FidFactOwnership { get; set; } // FidFactOwnership
        public int? CodeIfns { get; set; } // CodeIfns
        public string CadastralNumber { get; set; } // CadastralNumber (length: 256)
        public System.DateTime? DateStartRight { get; set; } // DateStartRight
        public System.DateTime? DateStartFinish { get; set; } // DateStartFinish
        public double? ActualCadastralCash { get; set; } // ActualCadastralCash
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DocumentOwnershipImZmTrFls where [DocumentOwnershipImZmTrFl].[FidObject] point to this entity (FK_DocumentOwnershipImZmTrFl_FactOfOwnershipImZmTrFl)
        /// </summary>
        public System.Collections.Generic.ICollection<DocumentOwnershipImZmTrFl> DocumentOwnershipImZmTrFls { get; set; } // DocumentOwnershipImZmTrFl.FK_DocumentOwnershipImZmTrFl_FactOfOwnershipImZmTrFl

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [FactOfOwnershipImZmTrFl].([IdFl]) (FK_FactOfOwnershipImZmTrFl_FlFace)
        /// </summary>
        public FlFace FlFace { get; set; } // FK_FactOfOwnershipImZmTrFl_FlFace

        /// <summary>
        /// Parent TypeObject pointed by [FactOfOwnershipImZmTrFl].([IdObject]) (FK_TypeObject_FactOfOwnershipImZmTrFl)
        /// </summary>
        public TypeObject TypeObject { get; set; } // FK_TypeObject_FactOfOwnershipImZmTrFl

        public FactOfOwnershipImZmTrFl()
        {
            DateCreate = System.DateTime.Now;
            DocumentOwnershipImZmTrFls = new System.Collections.Generic.List<DocumentOwnershipImZmTrFl>();
        }
    }

    // Fields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Field
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdTree { get; set; } // IdTree
        public string Fields { get; set; } // Fields (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [Fields].([IdTree]) (FK_Tree_Fields)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_Fields

        public Field()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // FlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFace
    {
        public int IdFl { get; set; } // IdFl (Primary key)
        public string Inn { get; set; } // Inn (length: 12)
        public string NameFl { get; set; } // NameFl (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Declaration3NdflFl where [Declaration3NdflFl].[IdFl] point to this entity (FK_Declaration3NdflFl_FlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<Declaration3NdflFl> Declaration3NdflFl { get; set; } // Declaration3NdflFl.FK_Declaration3NdflFl_FlFace
        /// <summary>
        /// Child DeclarationFls where [DeclarationFl].[IdFl] point to this entity (FK_DeclarationFl_FlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<DeclarationFl> DeclarationFls { get; set; } // DeclarationFl.FK_DeclarationFl_FlFace
        /// <summary>
        /// Child FactOfOwnershipImZmTrFls where [FactOfOwnershipImZmTrFl].[IdFl] point to this entity (FK_FactOfOwnershipImZmTrFl_FlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<FactOfOwnershipImZmTrFl> FactOfOwnershipImZmTrFls { get; set; } // FactOfOwnershipImZmTrFl.FK_FactOfOwnershipImZmTrFl_FlFace
        /// <summary>
        /// Child ImZmTrFls where [ImZmTrFl].[IdFl] point to this entity (FK_ImZmTrFl_FlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl.FK_ImZmTrFl_FlFace
        /// <summary>
        /// Child RukAndUcrhs where [RukAndUcrh].[IdFl] point to this entity (FK_RukAndUcrh_FlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh.FK_RukAndUcrh_FlFace

        public FlFace()
        {
            DateCreate = System.DateTime.Now;
            Declaration3NdflFl = new System.Collections.Generic.List<Declaration3NdflFl>();
            DeclarationFls = new System.Collections.Generic.List<DeclarationFl>();
            FactOfOwnershipImZmTrFls = new System.Collections.Generic.List<FactOfOwnershipImZmTrFl>();
            ImZmTrFls = new System.Collections.Generic.List<ImZmTrFl>();
            RukAndUcrhs = new System.Collections.Generic.List<RukAndUcrh>();
        }
    }

    // FlFaceMain
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFaceMain
    {
        public int IdFl { get; set; } // IdFl (Primary key)
        public long? IdNum { get; set; } // IdNum
        public long Fid { get; set; } // Fid
        public string Inn { get; set; } // Inn (length: 12)
        public string NameFull { get; set; } // NameFull (length: 1024)
        public string OgrnIp { get; set; } // OgrnIp (length: 20)
        public string Address { get; set; } // Address (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Patents where [Patent].[IdFl] point to this entity (FK_Patent_FlFaceMain)
        /// </summary>
        public System.Collections.Generic.ICollection<Patent> Patents { get; set; } // Patent.FK_Patent_FlFaceMain

        public FlFaceMain()
        {
            DateCreate = System.DateTime.Now;
            Patents = new System.Collections.Generic.List<Patent>();
        }
    }

    // FlFaceMainRegistration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFaceMainRegistration
    {
        public int IdFl { get; set; } // IdFl (Primary key)
        public long? IdNum { get; set; } // IdNum
        public long? Fid { get; set; } // Fid
        public string Inn { get; set; } // Inn (length: 12)
        public string F { get; set; } // F (length: 128)
        public string I { get; set; } // I (length: 128)
        public string O { get; set; } // O (length: 128)
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public string PlaceBirth { get; set; } // PlaceBirth (length: 1024)
        public string CodeSd { get; set; } // CodeSd (length: 32)
        public string Document { get; set; } // Document (length: 512)
        public string SeriaDoc { get; set; } // SeriaDoc (length: 32)
        public string NumberDoc { get; set; } // NumberDoc (length: 32)
        public System.DateTime? DateCreateDoc { get; set; } // DateCreateDoc
        public string WhoDoc { get; set; } // WhoDoc (length: 1024)
        public string CodePodr { get; set; } // CodePodr (length: 1024)
        public string Citizenship { get; set; } // Citizenship (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
        public int? IdStatus { get; set; } // IdStatus
        public int? IdError { get; set; } // IdError
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent ErrorFlRegistration pointed by [FlFaceMainRegistration].([IdError]) (FK_FlFaceMainRegistration_ErrorFlRegistration)
        /// </summary>
        public ErrorFlRegistration ErrorFlRegistration { get; set; } // FK_FlFaceMainRegistration_ErrorFlRegistration

        /// <summary>
        /// Parent StatusFlRegistration pointed by [FlFaceMainRegistration].([IdStatus]) (FK_FlFaceMainRegistration_StatusFlRegistration)
        /// </summary>
        public StatusFlRegistration StatusFlRegistration { get; set; } // FK_FlFaceMainRegistration_StatusFlRegistration

        public FlFaceMainRegistration()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // FormulNdfl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FormulNdfl
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public string NameSmall { get; set; } // NameSmall (Primary key) (length: 1024)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public int CodeNdfl { get; set; } // CodeNdfl (Primary key)
        public decimal? MoneyNdfl { get; set; } // MoneyNdfl
        public int? CountNdfl { get; set; } // CountNdfl
        public int? CountFl { get; set; } // CountFl
        public decimal? AvgMoney { get; set; } // AvgMoney
    }

    // GrnInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GrnInventory
    {
        public int IdDocGrn { get; set; } // IdDocGrn (Primary key)
        public int? IdGrnAis3 { get; set; } // IdGrnAis3
        public int IdOgrn { get; set; } // IdOgrn
        public long NumberOgrnGrn { get; set; } // NumberOgrnGrn
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public bool IsStartProcess { get; set; } // IsStartProcess
        public bool IsFindGrnDataBase { get; set; } // IsFindGrnDataBase
        public bool StatusFinish { get; set; } // StatusFinish
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DocumentInventories where [DocumentInventory].[IdDocGrn] point to this entity (FK_DocumentInventory_GrnInventory)
        /// </summary>
        public System.Collections.Generic.ICollection<DocumentInventory> DocumentInventories { get; set; } // DocumentInventory.FK_DocumentInventory_GrnInventory
        /// <summary>
        /// Child GrnInventoryAndEventProcessErrors where [GrnInventoryAndEventProcessError].[IdDocGrn] point to this entity (FK_GrnInventoryAndEventProcessError_GrnInventory)
        /// </summary>
        public System.Collections.Generic.ICollection<GrnInventoryAndEventProcessError> GrnInventoryAndEventProcessErrors { get; set; } // GrnInventoryAndEventProcessError.FK_GrnInventoryAndEventProcessError_GrnInventory
        /// <summary>
        /// Child SynchronizationUserAndAis where [SynchronizationUserAndAis].[IdDocGrn] point to this entity (FK_SynchronizationUserAndAis_GrnInventory)
        /// </summary>
        public System.Collections.Generic.ICollection<SynchronizationUserAndAi> SynchronizationUserAndAis { get; set; } // SynchronizationUserAndAis.FK_SynchronizationUserAndAis_GrnInventory

        // Foreign keys

        /// <summary>
        /// Parent AisGrnDocument pointed by [GrnInventory].([IdGrnAis3]) (FK_GrnInventory_AisGrnDocument)
        /// </summary>
        public AisGrnDocument AisGrnDocument { get; set; } // FK_GrnInventory_AisGrnDocument

        /// <summary>
        /// Parent OrganizationOgrnInventory pointed by [GrnInventory].([IdOgrn]) (FK_GrnInventory_OrganizationOgrnInventory)
        /// </summary>
        public OrganizationOgrnInventory OrganizationOgrnInventory { get; set; } // FK_GrnInventory_OrganizationOgrnInventory

        public GrnInventory()
        {
            IsStartProcess = false;
            IsFindGrnDataBase = false;
            StatusFinish = false;
            DateCreate = System.DateTime.Now;
            DocumentInventories = new System.Collections.Generic.List<DocumentInventory>();
            GrnInventoryAndEventProcessErrors = new System.Collections.Generic.List<GrnInventoryAndEventProcessError>();
            SynchronizationUserAndAis = new System.Collections.Generic.List<SynchronizationUserAndAi>();
        }
    }

    // GrnInventoryAndEventProcessError
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GrnInventoryAndEventProcessError
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdDocGrn { get; set; } // IdDocGrn
        public int IdProcess { get; set; } // IdProcess
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent EventProcessError pointed by [GrnInventoryAndEventProcessError].([IdProcess]) (FK_GrnInventoryAndEventProcessError_EventProcessError)
        /// </summary>
        public EventProcessError EventProcessError { get; set; } // FK_GrnInventoryAndEventProcessError_EventProcessError

        /// <summary>
        /// Parent GrnInventory pointed by [GrnInventoryAndEventProcessError].([IdDocGrn]) (FK_GrnInventoryAndEventProcessError_GrnInventory)
        /// </summary>
        public GrnInventory GrnInventory { get; set; } // FK_GrnInventoryAndEventProcessError_GrnInventory

        public GrnInventoryAndEventProcessError()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // GroupKbk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupKbk
    {
        public int IdQbe { get; set; } // IdQbe (Primary key)
        public string NameGroupPl { get; set; } // NameGroupPl (length: 1024)
        public string DescriptionGroup { get; set; } // DescriptionGroup (length: 1024)
        public string GroupColor { get; set; } // GroupColor (length: 15)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child KbkPayments where [KbkPayment].[IdQbe] point to this entity (FK_GroupKbk_KbkPayment)
        /// </summary>
        public System.Collections.Generic.ICollection<KbkPayment> KbkPayments { get; set; } // KbkPayment.FK_GroupKbk_KbkPayment

        public GroupKbk()
        {
            DateCreate = System.DateTime.Now;
            KbkPayments = new System.Collections.Generic.List<KbkPayment>();
        }
    }

    // GroupQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupQuestion
    {
        public int IdGroupQuestions { get; set; } // IdGroupQuestions (Primary key)
        public string NameGroup { get; set; } // NameGroup (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TemplateQuestions where [TemplateQuestions].[IdGroupQuestions] point to this entity (FK_GroupQuestions_TemplateQuestions)
        /// </summary>
        public System.Collections.Generic.ICollection<TemplateQuestion> TemplateQuestions { get; set; } // TemplateQuestions.FK_GroupQuestions_TemplateQuestions

        public GroupQuestion()
        {
            DateCreate = System.DateTime.Now;
            TemplateQuestions = new System.Collections.Generic.List<TemplateQuestion>();
        }
    }

    // HeadingStatement
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HeadingStatement
    {
        public int IdStatementHead { get; set; } // IdStatementHead (Primary key)
        public string NameIndex { get; set; } // NameIndex (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child StatementFulls where [StatementFull].[IdStatementHead] point to this entity (FK_HeadingStatement_StatementFull)
        /// </summary>
        public System.Collections.Generic.ICollection<StatementFull> StatementFulls { get; set; } // StatementFull.FK_HeadingStatement_StatementFull

        public HeadingStatement()
        {
            DateCreate = System.DateTime.Now;
            StatementFulls = new System.Collections.Generic.List<StatementFull>();
        }
    }

    // HelpKbkAuto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HelpKbkAuto
    {
        public int Id { get; set; } // Id (Primary key)
        public string GroupColor { get; set; } // GroupColor (length: 15)
        public int IdQbe { get; set; } // IdQbe (Primary key)
        public string NameGroupPl { get; set; } // NameGroupPl (Primary key) (length: 1024)
        public string Kbk { get; set; } // Kbk (Primary key) (length: 1024)
        public string DescriptionGroup { get; set; } // DescriptionGroup (length: 1024)
    }

    // HistoriUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HistoriUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public string TypeObject { get; set; } // TypeObject (length: 1024)
        public string KppObject { get; set; } // KppObject (length: 1024)
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string AddressObject { get; set; } // AddressObject (length: 1024)
        public int KodeNo { get; set; } // KodeNo (Primary key)
        public System.DateTime? DateNoStart { get; set; } // DateNoStart
        public System.DateTime? DateNoFinish { get; set; } // DateNoFinish
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [HistoriUlFace].([IdUl]) (FK_HistoriUlFace_UlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_HistoriUlFace_UlFace

        public HistoriUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // H_NAMES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HName
    {
        public int Id { get; set; } // ID (Primary key)
        public string N142 { get; set; } // N142 (length: 64)
        public bool D1035 { get; set; } // D1035
    }

    // ImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrFl
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdFl { get; set; } // IdFl
        public long IdNum { get; set; } // IdNum
        public int IdObject { get; set; } // IdObject
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string ReasonSettingStart { get; set; } // ReasonSettingStart (length: 1024)
        public System.DateTime? DateOne { get; set; } // DateOne
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFactStart { get; set; } // DateFactStart
        public string ReasonSettingFinish { get; set; } // ReasonSettingFinish (length: 1024)
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public System.DateTime? DateFinishNo { get; set; } // DateFinishNo
        public System.DateTime? DateFactFinish { get; set; } // DateFactFinish
        public string AddresObject { get; set; } // AddresObject (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [ImZmTrFl].([IdFl]) (FK_ImZmTrFl_FlFace)
        /// </summary>
        public FlFace FlFace { get; set; } // FK_ImZmTrFl_FlFace

        /// <summary>
        /// Parent TypeObject pointed by [ImZmTrFl].([IdObject]) (FK_TypeObject_ImZmTrFl)
        /// </summary>
        public TypeObject TypeObject { get; set; } // FK_TypeObject_ImZmTrFl

        public ImZmTrFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ImZmTrUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrUl
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum
        public int IdObject { get; set; } // IdObject
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string ReasonSettingStart { get; set; } // ReasonSettingStart (length: 1024)
        public System.DateTime? DateOne { get; set; } // DateOne
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFactStart { get; set; } // DateFactStart
        public string ReasonSettingFinish { get; set; } // ReasonSettingFinish (length: 1024)
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public System.DateTime? DateFinishNo { get; set; } // DateFinishNo
        public System.DateTime? DateFactFinish { get; set; } // DateFactFinish
        public string AddresObject { get; set; } // AddresObject (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent TypeObject pointed by [ImZmTrUl].([IdObject]) (FK_TypeObject_ImZmTrUl)
        /// </summary>
        public TypeObject TypeObject { get; set; } // FK_TypeObject_ImZmTrUl

        /// <summary>
        /// Parent UlFace pointed by [ImZmTrUl].([IdUl]) (FK_UlFace_ImZmTrUl)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_ImZmTrUl

        public ImZmTrUl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // IndividualCardsUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IndividualCardsUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public string ReportAll { get; set; } // ReportAll
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [IndividualCardsUlFace].([IdUl]) (FK_IndividualCardsUlFace_UlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_IndividualCardsUlFace_UlFace

        public IndividualCardsUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // InfoDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InfoDocument
    {
        public int IdInfo { get; set; } // IdInfo (Primary key)
        public string NameDocumentInfo { get; set; } // NameDocumentInfo (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DocumentInventories where [DocumentInventory].[IdInfo] point to this entity (FK_DocumentInventory_InfoDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<DocumentInventory> DocumentInventories { get; set; } // DocumentInventory.FK_DocumentInventory_InfoDocument

        public InfoDocument()
        {
            DateCreate = System.DateTime.Now;
            DocumentInventories = new System.Collections.Generic.List<DocumentInventory>();
        }
    }

    // InfoViewAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InfoViewAutomation
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameView { get; set; } // NameView (length: 64)
        public string NameViewColumns { get; set; } // NameViewColumns (length: 64)
        public string InfoColumn { get; set; } // InfoColumn (length: 256)
        public string FormatView { get; set; } // FormatView (length: 16)
        public bool? IsVisible { get; set; } // IsVisible
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public InfoViewAutomation()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // IsPatentParses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IsPatentPars
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdNum { get; set; } // IdNum (Primary key)
        public long RegNumPatent { get; set; } // RegNumPatent (Primary key)
        public bool IsParseFullPatent { get; set; } // IsParseFullPatent (Primary key)
        public bool IsParseDocPatent { get; set; } // IsParseDocPatent (Primary key)
        public bool IsParsePlaceOfBusiness { get; set; } // IsParsePlaceOfBusiness (Primary key)
        public bool IsParseSvedTr { get; set; } // IsParseSvedTr (Primary key)
        public bool IsParseSvedObject { get; set; } // IsParseSvedObject (Primary key)
        public bool IsParseParametrNalog { get; set; } // IsParseParametrNalog (Primary key)
        public bool IsParseSvedFactPatent { get; set; } // IsParseSvedFactPatent (Primary key)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // IsPatentParse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IsPatentParse
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public long RegNumPatent { get; set; } // RegNumPatent
        public bool IsParseFullPatent { get; set; } // IsParseFullPatent
        public bool IsParseDocPatent { get; set; } // IsParseDocPatent
        public bool IsParsePlaceOfBusiness { get; set; } // IsParsePlaceOfBusiness
        public bool IsParseSvedTr { get; set; } // IsParseSvedTr
        public bool IsParseSvedObject { get; set; } // IsParseSvedObject
        public bool IsParseParametrNalog { get; set; } // IsParseParametrNalog
        public bool IsParseSvedFactPatent { get; set; } // IsParseSvedFactPatent
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public IsPatentParse()
        {
            IsParseFullPatent = false;
            IsParseDocPatent = false;
            IsParsePlaceOfBusiness = false;
            IsParseSvedTr = false;
            IsParseSvedObject = false;
            IsParseParametrNalog = false;
            IsParseSvedFactPatent = false;
            DateCreate = System.DateTime.Now;
        }
    }

    // KbkPayment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KbkPayment
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdQbe { get; set; } // IdQbe
        public string Kbk { get; set; } // Kbk (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent GroupKbk pointed by [KbkPayment].([IdQbe]) (FK_GroupKbk_KbkPayment)
        /// </summary>
        public GroupKbk GroupKbk { get; set; } // FK_GroupKbk_KbkPayment

        public KbkPayment()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // KbkPlat
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KbkPlat
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdQbe { get; set; } // IdQbe
        public string Kbk { get; set; } // Kbk (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public KbkPlat()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // KontrAgent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KontrAgent
    {
        public int IdKontrAgent { get; set; } // IdKontrAgent (Primary key)
        public string InnKontrAgent { get; set; } // InnKontrAgent (length: 12)
        public string NameKontrAgent { get; set; } // NameKontrAgent (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child MainOrgAndKontrAgents where [MainOrgAndKontrAgent].[IdKontrAgent] point to this entity (FK_KontrAgent_MainOrgAndKontrAgent)
        /// </summary>
        public System.Collections.Generic.ICollection<MainOrgAndKontrAgent> MainOrgAndKontrAgents { get; set; } // MainOrgAndKontrAgent.FK_KontrAgent_MainOrgAndKontrAgent

        public KontrAgent()
        {
            DateCreate = System.DateTime.Now;
            MainOrgAndKontrAgents = new System.Collections.Generic.List<MainOrgAndKontrAgent>();
        }
    }

    // Krsb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Krsb
    {
        public int IdKrsb { get; set; } // IdKrsb (Primary key)
        public int? IdNp { get; set; } // IdNp
        public string Kbk { get; set; } // Kbk (length: 20)
        public string NameKrsb { get; set; } // NameKrsb (length: 1024)
        public string Oktmo { get; set; } // Oktmo (length: 15)
        public long IdParameter { get; set; } // IdParameter
        public bool IsPriznak { get; set; } // IsPriznak
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent KrsbNp pointed by [Krsb].([IdNp]) (FK_KrsbNp_Krsb)
        /// </summary>
        public KrsbNp KrsbNp { get; set; } // FK_KrsbNp_Krsb

        public Krsb()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // KrsbNp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KrsbNp
    {
        public int IdNp { get; set; } // IdNp (Primary key)
        public long Fid { get; set; } // Fid
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Inn { get; set; } // Inn (length: 12)
        public string NameNp { get; set; } // NameNp (length: 1024)
        public bool IsPriznakFullClosed { get; set; } // IsPriznakFullClosed
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Krsbs where [Krsb].[IdNp] point to this entity (FK_KrsbNp_Krsb)
        /// </summary>
        public System.Collections.Generic.ICollection<Krsb> Krsbs { get; set; } // Krsb.FK_KrsbNp_Krsb

        public KrsbNp()
        {
            DateCreate = System.DateTime.Now;
            Krsbs = new System.Collections.Generic.List<Krsb>();
        }
    }

    // LogicsSelectAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogicsSelectAutomation
    {
        public int Id { get; set; } // Id (Primary key)
        public string SelectInfo { get; set; } // SelectInfo (length: 512)
        public string NameDll { get; set; } // NameDll (length: 128)
        public string FindNameSpace { get; set; } // FindNameSpace (length: 512)
        public bool? IsResultXml { get; set; } // IsResultXml
        public string NameReportList { get; set; } // NameReportList (length: 128)
        public string NameReportFile { get; set; } // NameReportFile (length: 128)
        public string SelectedParametr { get; set; } // SelectedParametr
        public string SelectUser { get; set; } // SelectUser
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // LogPreCheck
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogPreCheck
    {
        public int Id { get; set; } // Id (Primary key)
        public string UserTabelNum { get; set; } // UserTabelNum (Primary key) (length: 32)
        public string Method { get; set; } // Method (length: 32)
        public string StatusMethod { get; set; } // StatusMethod (length: 32)
        public string ErrorLog { get; set; } // ErrorLog
        public System.DateTime? Datacreate { get; set; } // Datacreate

        public LogPreCheck()
        {
            Datacreate = System.DateTime.Now;
        }
    }

    // MainOrg
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainOrg
    {
        public int IdOrg { get; set; } // IdOrg (Primary key)
        public int IdDerector { get; set; } // IdDerector
        public int IdType { get; set; } // IdType
        public string Inn { get; set; } // Inn (length: 12)
        public string NameOrg { get; set; } // NameOrg (length: 512)
        public string NoIn { get; set; } // NoIn (length: 1024)
        public string NoOut { get; set; } // NoOut (length: 1024)
        public bool IsReady { get; set; } // IsReady
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child MainOrgAndKontrAgents where [MainOrgAndKontrAgent].[IdOrg] point to this entity (FK_MainOrgAndKontrAgent_MainOrg)
        /// </summary>
        public System.Collections.Generic.ICollection<MainOrgAndKontrAgent> MainOrgAndKontrAgents { get; set; } // MainOrgAndKontrAgent.FK_MainOrgAndKontrAgent_MainOrg
        /// <summary>
        /// Child UserOrgs where [UserOrg].[IdOrg] point to this entity (FK_MainOrg_UserOrg)
        /// </summary>
        public System.Collections.Generic.ICollection<UserOrg> UserOrgs { get; set; } // UserOrg.FK_MainOrg_UserOrg

        // Foreign keys

        /// <summary>
        /// Parent Derector pointed by [MainOrg].([IdDerector]) (FK_Derector_MainOrg)
        /// </summary>
        public Derector Derector { get; set; } // FK_Derector_MainOrg

        /// <summary>
        /// Parent TypeOrgAndQuestion pointed by [MainOrg].([IdType]) (FK_TypeOrgAndQuestions_MainOrg)
        /// </summary>
        public TypeOrgAndQuestion TypeOrgAndQuestion { get; set; } // FK_TypeOrgAndQuestions_MainOrg

        public MainOrg()
        {
            IsReady = false;
            DateCreate = System.DateTime.Now;
            MainOrgAndKontrAgents = new System.Collections.Generic.List<MainOrgAndKontrAgent>();
            UserOrgs = new System.Collections.Generic.List<UserOrg>();
        }
    }

    // MainOrgAndKontrAgent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainOrgAndKontrAgent
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdOrg { get; set; } // IdOrg
        public int IdKontrAgent { get; set; } // IdKontrAgent
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent KontrAgent pointed by [MainOrgAndKontrAgent].([IdKontrAgent]) (FK_KontrAgent_MainOrgAndKontrAgent)
        /// </summary>
        public KontrAgent KontrAgent { get; set; } // FK_KontrAgent_MainOrgAndKontrAgent

        /// <summary>
        /// Parent MainOrg pointed by [MainOrgAndKontrAgent].([IdOrg]) (FK_MainOrgAndKontrAgent_MainOrg)
        /// </summary>
        public MainOrg MainOrg { get; set; } // FK_MainOrgAndKontrAgent_MainOrg

        public MainOrgAndKontrAgent()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // MainOrgAndQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainOrgAndQuestion
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameOrg { get; set; } // NameOrg (length: 512)
        public string NoIn { get; set; } // NoIn (length: 1024)
        public string NoOut { get; set; } // NoOut (length: 1024)
        public bool IsReady { get; set; } // IsReady (Primary key)
    }

    // MainUserAndQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainUserAndQuestion
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdUserRegistrationFl { get; set; } // IdUserRegistrationFl (Primary key)
        public string NameType { get; set; } // NameType (Primary key) (length: 256)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameUser { get; set; } // NameUser (length: 512)
        public string NoIn { get; set; } // NoIn (length: 1024)
        public string NoOut { get; set; } // NoOut (length: 1024)
        public bool IsReady { get; set; } // IsReady (Primary key)
    }

    // MainUserRegistrationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainUserRegistrationFl
    {
        public int IdUserRegistrationFl { get; set; } // IdUserRegistrationFl (Primary key)
        public int IdType { get; set; } // IdType
        public string Inn { get; set; } // Inn (length: 12)
        public string NameUser { get; set; } // NameUser (length: 512)
        public int? CodeNo { get; set; } // CodeNo
        public string NoIn { get; set; } // NoIn (length: 1024)
        public string NoOut { get; set; } // NoOut (length: 1024)
        public bool IsReady { get; set; } // IsReady
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child QuestionsAndUserRegistrationFls where [QuestionsAndUserRegistrationFl].[IdUserRegistrationFl] point to this entity (FK_MainUserRegistrationFl_QuestionsAndUserRegistrationFl)
        /// </summary>
        public System.Collections.Generic.ICollection<QuestionsAndUserRegistrationFl> QuestionsAndUserRegistrationFls { get; set; } // QuestionsAndUserRegistrationFl.FK_MainUserRegistrationFl_QuestionsAndUserRegistrationFl

        // Foreign keys

        /// <summary>
        /// Parent TypeOrgAndQuestion pointed by [MainUserRegistrationFl].([IdType]) (FK_TypeOrgAndQuestions_MainUserRegistrationFl)
        /// </summary>
        public TypeOrgAndQuestion TypeOrgAndQuestion { get; set; } // FK_TypeOrgAndQuestions_MainUserRegistrationFl

        public MainUserRegistrationFl()
        {
            IsReady = false;
            DateCreate = System.DateTime.Now;
            QuestionsAndUserRegistrationFls = new System.Collections.Generic.List<QuestionsAndUserRegistrationFl>();
        }
    }

    // ModelKbkOnKbk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelKbkOnKbk
    {
        public int IdClarification { get; set; } // IdClarification (Primary key)
        public string StatusError { get; set; } // StatusError (length: 12)
        public long IdDoc { get; set; } // IdDoc
        public string InnPayer { get; set; } // InnPayer (length: 12)
        public decimal? Payment { get; set; } // Payment
        public string KbkIfns { get; set; } // KbkIfns (length: 1024)
        public string Kbk100Before { get; set; } // Kbk100Before (length: 1024)
        public string TpPayerBefore { get; set; } // TpPayerBefore (length: 12)
        public string StatusPayerBefore { get; set; } // StatusPayerBefore (length: 12)
        public string KbkUtcAfter { get; set; } // KbkUtcAfter (length: 1024)
        public string TpPayerUtcAfter { get; set; } // TpPayerUtcAfter (length: 12)
        public string StatusPayerUtcAfter { get; set; } // StatusPayerUtcAfter (length: 12)
        public string InnBank { get; set; } // InnBank (length: 12)
        public string KppBank { get; set; } // KppBank (length: 12)
        public string Oktmo105 { get; set; } // Oktmo105 (length: 12)
        public string OktmoUfk { get; set; } // OktmoUfk (length: 12)
        public string Conclusion { get; set; } // Conclusion (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public ModelKbkOnKbk()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ModelTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelTree
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdUl { get; set; } // IdUl (Primary key)
        public int IdModel { get; set; } // IdModel (Primary key)
        public string InnUl { get; set; } // InnUl (length: 12)
        public string NameTemplate { get; set; } // NameTemplate (length: 512)
        public string Tree { get; set; } // Tree (length: 1024)
        public string StatusModel { get; set; } // StatusModel (length: 124)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // NdflFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NdflFl
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl (Primary key)
        public long IdSved { get; set; } // IdSved (Primary key)
        public string FidFl { get; set; } // FidFl (length: 128)
        public string InnFl { get; set; } // InnFl (length: 12)
        public string SurnameFl { get; set; } // SurnameFl (length: 1024)
        public string NameFl { get; set; } // NameFl (length: 1024)
        public string PatronymicFl { get; set; } // PatronymicFl (length: 1024)
        public string FioFl { get; set; } // FioFl (length: 1024)
        public int Number { get; set; } // Number (Primary key)
        public int IdVidNdfl { get; set; } // IdVidNdfl (Primary key)
        public int CodeNdfl { get; set; } // CodeNdfl (Primary key)
        public string NameNdfl { get; set; } // NameNdfl (length: 2048)
        public string MoneyNdfl { get; set; } // MoneyNdfl (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [NdflFl].([IdUl]) (FK_UlFace_NdflFl)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_NdflFl

        public NdflFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // OrganizationOgrnInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrganizationOgrnInventory
    {
        public int IdOgrn { get; set; } // IdOgrn (Primary key)
        public string UserLogin { get; set; } // UserLogin (length: 128)
        public long NumberOgrn { get; set; } // NumberOgrn
        public bool? IsHiddenWeb { get; set; } // IsHiddenWeb
        public int IdStatus { get; set; } // IdStatus
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child GrnInventories where [GrnInventory].[IdOgrn] point to this entity (FK_GrnInventory_OrganizationOgrnInventory)
        /// </summary>
        public System.Collections.Generic.ICollection<GrnInventory> GrnInventories { get; set; } // GrnInventory.FK_GrnInventory_OrganizationOgrnInventory

        // Foreign keys

        /// <summary>
        /// Parent StatusOgrn pointed by [OrganizationOgrnInventory].([IdStatus]) (FK_OrganizationOgrnInventory_StatusOgrn)
        /// </summary>
        public StatusOgrn StatusOgrn { get; set; } // FK_OrganizationOgrnInventory_StatusOgrn

        public OrganizationOgrnInventory()
        {
            UserLogin = "7751-00-170";
            IsHiddenWeb = false;
            DateCreate = System.DateTime.Now;
            GrnInventories = new System.Collections.Generic.List<GrnInventory>();
        }
    }

    // ParameterProcedureWeb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ParameterProcedureWeb
    {
        public int Id { get; set; } // Id (Primary key)
        public string SelectInfoModel { get; set; } // SelectInfoModel (length: 512)
        public string SelectParameterTable { get; set; } // SelectParameterTable
        public string ModelClassFind { get; set; } // ModelClassFind (length: 512)
        public string ParameterProcedure { get; set; } // ParameterProcedure
        public string SelectUser { get; set; } // SelectUser
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public ParameterProcedureWeb()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ParametrNalog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ParametrNalog
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public int IdPatent { get; set; } // IdPatent
        public string PrizSum { get; set; } // PrizSum (length: 32)
        public string PrizCountWork { get; set; } // PrizCountWork (length: 32)
        public string PrizCountTr { get; set; } // PrizCountTr (length: 32)
        public string PrizCountSeqts { get; set; } // PrizCountSeqts (length: 32)
        public string PrizCountWeight { get; set; } // PrizCountWeight (length: 32)
        public string PrizCountObject { get; set; } // PrizCountObject (length: 32)
        public string PrizCountObjectArea { get; set; } // PrizCountObjectArea (length: 32)
        public string PrizRukVvod { get; set; } // PrizRukVvod (length: 32)
        public string Kbk { get; set; } // Kbk (length: 20)
        public int? IdKbk { get; set; } // IdKbk
        public string NameNalog { get; set; } // NameNalog (length: 2048)
        public string Oktmo { get; set; } // Oktmo (length: 12)
        public string Vktmo { get; set; } // Vktmo (length: 1024)
        public int? IdVktmo { get; set; } // IdVktmo
        public double NalogDateBase { get; set; } // NalogDateBase
        public double NalogPsnYear { get; set; } // NalogPsnYear
        public double NalogPsnPeriod { get; set; } // NalogPsnPeriod
        public string Inspector { get; set; } // Inspector (length: 256)
        public long IdWrite { get; set; } // IdWrite
        public long IdNalogWrite { get; set; } // IdNalogWrite
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Patent pointed by [ParametrNalog].([IdPatent]) (FK_ParametrNalog_Patent)
        /// </summary>
        public Patent Patent { get; set; } // FK_ParametrNalog_Patent

        public ParametrNalog()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Patent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Patent
    {
        public int IdPatent { get; set; } // IdPatent (Primary key)
        public int IdFl { get; set; } // IdFl
        public System.DateTime DateStartPatent { get; set; } // DateStartPatent
        public System.DateTime DateFinishPatent { get; set; } // DateFinishPatent
        public int CodeWork { get; set; } // CodeWork
        public string NameVid { get; set; } // NameVid (length: 2048)
        public string CodeOkun { get; set; } // CodeOkun (length: 1024)
        public string NameCodeOkun { get; set; } // NameCodeOkun (length: 1024)
        public string CountMouth { get; set; } // CountMouth (length: 32)
        public string CountDays { get; set; } // CountDays (length: 32)
        public string AvgPeople { get; set; } // AvgPeople (length: 32)
        public string NalogStav { get; set; } // NalogStav (length: 32)
        public string NormalCodex { get; set; } // NormalCodex (length: 1024)
        public System.DateTime DateWaitResh { get; set; } // DateWaitResh
        public System.DateTime DateResh { get; set; } // DateResh
        public string DateCancel { get; set; } // DateCancel (length: 128)
        public long? RegNumInfo { get; set; } // RegNumInfo
        public long? RegNumPatent { get; set; } // RegNumPatent
        public long? RegNumInfoVz { get; set; } // RegNumInfoVz
        public long? RegNumPatentVz { get; set; } // RegNumPatentVz
        public string DateObjectNot { get; set; } // DateObjectNot (length: 128)
        public long? IdObjectPsn { get; set; } // IdObjectPsn
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DocPatents where [DocPatent].[IdPatent] point to this entity (FK_DocPatent_Patent)
        /// </summary>
        public System.Collections.Generic.ICollection<DocPatent> DocPatents { get; set; } // DocPatent.FK_DocPatent_Patent
        /// <summary>
        /// Child ParametrNalogs where [ParametrNalog].[IdPatent] point to this entity (FK_ParametrNalog_Patent)
        /// </summary>
        public System.Collections.Generic.ICollection<ParametrNalog> ParametrNalogs { get; set; } // ParametrNalog.FK_ParametrNalog_Patent
        /// <summary>
        /// Child PlaceOfBusinesses where [PlaceOfBusiness].[IdPatent] point to this entity (FK_PlaceOfBusiness_Patent)
        /// </summary>
        public System.Collections.Generic.ICollection<PlaceOfBusiness> PlaceOfBusinesses { get; set; } // PlaceOfBusiness.FK_PlaceOfBusiness_Patent
        /// <summary>
        /// Child SvedFactPatents where [SvedFactPatent].[IdPatent] point to this entity (FK_SvedFactPatent_Patent)
        /// </summary>
        public System.Collections.Generic.ICollection<SvedFactPatent> SvedFactPatents { get; set; } // SvedFactPatent.FK_SvedFactPatent_Patent
        /// <summary>
        /// Child SvedObjects where [SvedObject].[IdPatent] point to this entity (FK_SvedObject_Patent)
        /// </summary>
        public System.Collections.Generic.ICollection<SvedObject> SvedObjects { get; set; } // SvedObject.FK_SvedObject_Patent
        /// <summary>
        /// Child SvedTrs where [SvedTr].[IdPatent] point to this entity (FK_SvedTr_Patent)
        /// </summary>
        public System.Collections.Generic.ICollection<SvedTr> SvedTrs { get; set; } // SvedTr.FK_SvedTr_Patent

        // Foreign keys

        /// <summary>
        /// Parent FlFaceMain pointed by [Patent].([IdFl]) (FK_Patent_FlFaceMain)
        /// </summary>
        public FlFaceMain FlFaceMain { get; set; } // FK_Patent_FlFaceMain

        public Patent()
        {
            DateCreate = System.DateTime.Now;
            DocPatents = new System.Collections.Generic.List<DocPatent>();
            ParametrNalogs = new System.Collections.Generic.List<ParametrNalog>();
            PlaceOfBusinesses = new System.Collections.Generic.List<PlaceOfBusiness>();
            SvedFactPatents = new System.Collections.Generic.List<SvedFactPatent>();
            SvedObjects = new System.Collections.Generic.List<SvedObject>();
            SvedTrs = new System.Collections.Generic.List<SvedTr>();
        }
    }

    // PlaceOfBusiness
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PlaceOfBusiness
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public int IdPatent { get; set; } // IdPatent
        public long? IdPlace { get; set; } // IdPlace
        public string AddressPlace { get; set; } // AddressPlace (length: 1024)
        public long IdWrite { get; set; } // IdWrite
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Patent pointed by [PlaceOfBusiness].([IdPatent]) (FK_PlaceOfBusiness_Patent)
        /// </summary>
        public Patent Patent { get; set; } // FK_PlaceOfBusiness_Patent

        public PlaceOfBusiness()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // QuestionsAndUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class QuestionsAndUser
    {
        public int IdQuestions { get; set; } // IdQuestions (Primary key)
        public int IdUser { get; set; } // IdUser
        public int IdTemplateQuestions { get; set; } // IdTemplateQuestions
        public string ModelQuestions { get; set; } // ModelQuestions
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent TemplateQuestion pointed by [QuestionsAndUsers].([IdTemplateQuestions]) (FK_TemplateQuestions_QuestionsAndUsers)
        /// </summary>
        public TemplateQuestion TemplateQuestion { get; set; } // FK_TemplateQuestions_QuestionsAndUsers

        /// <summary>
        /// Parent UserOrg pointed by [QuestionsAndUsers].([IdUser]) (FK_UserOrg_QuestionsAndUsers)
        /// </summary>
        public UserOrg UserOrg { get; set; } // FK_UserOrg_QuestionsAndUsers

        public QuestionsAndUser()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // QuestionsAndUserRegistrationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class QuestionsAndUserRegistrationFl
    {
        public int IdQuestions { get; set; } // IdQuestions (Primary key)
        public int IdUserRegistrationFl { get; set; } // IdUserRegistrationFl
        public int IdTemplateQuestions { get; set; } // IdTemplateQuestions
        public string ModelQuestions { get; set; } // ModelQuestions
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent MainUserRegistrationFl pointed by [QuestionsAndUserRegistrationFl].([IdUserRegistrationFl]) (FK_MainUserRegistrationFl_QuestionsAndUserRegistrationFl)
        /// </summary>
        public MainUserRegistrationFl MainUserRegistrationFl { get; set; } // FK_MainUserRegistrationFl_QuestionsAndUserRegistrationFl

        /// <summary>
        /// Parent TemplateQuestion pointed by [QuestionsAndUserRegistrationFl].([IdTemplateQuestions]) (FK_TemplateQuestions_QuestionsAndUserRegistrationFl)
        /// </summary>
        public TemplateQuestion TemplateQuestion { get; set; } // FK_TemplateQuestions_QuestionsAndUserRegistrationFl

        public QuestionsAndUserRegistrationFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Rb_Holidays
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbHoliday
    {
        public int Id { get; set; } // Id (Primary key)
        public System.DateTime DateTimeHoliday { get; set; } // DateTime_Holiday (Primary key)
        public bool IsHoliday { get; set; } // IS_HOLIDAY (Primary key)
    }

    // RealEstateZmIm
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RealEstateZmIm
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameFl { get; set; } // NameFl (Primary key) (length: 1024)
        public string TypeObject { get; set; } // TypeObject (length: 1024)
        public long FidObject { get; set; } // FidObject (Primary key)
        public long FidFactOwnership { get; set; } // FidFactOwnership (Primary key)
        public int? CodeIfns { get; set; } // CodeIfns
        public string CadastralNumber { get; set; } // CadastralNumber (length: 256)
        public System.DateTime? DateStartRight { get; set; } // DateStartRight
        public System.DateTime? DateStartFinish { get; set; } // DateStartFinish
        public double? ActualCadastralCash { get; set; } // ActualCadastralCash
        public string NumberDocument { get; set; } // NumberDocument (length: 512)
        public System.DateTime? DateDocument { get; set; } // DateDocument
        public string CodeDocument { get; set; } // CodeDocument (length: 512)
        public string NameDocument { get; set; } // NameDocument (length: 512)
        public string Name { get; set; } // Name (length: 512)
        public double? CashDeal { get; set; } // CashDeal
        public string CashText { get; set; } // CashText (length: 512)
    }

    // RegisterDocumentsPrinting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RegisterDocumentsPrinting
    {
        public int IdDocument { get; set; } // IdDocument (Primary key)
        public string MachineName { get; set; } // MachineName (length: 128)
        public string TabelNumberUser { get; set; } // TabelNumberUser (length: 64)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public string Address { get; set; } // Address (length: 1024)
        public System.DateTime? DateDocument { get; set; } // DateDocument
        public int? NumberDocument { get; set; } // NumberDocument
        public string FormKnd { get; set; } // FormKnd (length: 512)
        public string RegNumberDocumetGuid { get; set; } // RegNumberDocumetGuid (length: 64)
        public int CountPage { get; set; } // CountPage
        public System.DateTime DateCreate { get; set; } // DateCreate

        public RegisterDocumentsPrinting()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ReportXlsx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportXlsx
    {
        public int IdReport { get; set; } // IdReport (Primary key)
        public string NameReport { get; set; } // NameReport (length: 256)
        public string NameFile { get; set; } // NameFile (length: 128)
        public string NameTable { get; set; } // NameTable (length: 256)
        public string ParameterProcedure { get; set; } // ParameterProcedure (length: 256)
        public string ProcedureReport { get; set; } // ProcedureReport (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public ReportXlsx()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // RukAndUcrh
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RukAndUcrh
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public int IdFl { get; set; } // IdFl
        public string NameFl { get; set; } // NameFl (length: 1024)
        public string Inn { get; set; } // Inn (length: 12)
        public string Priznak { get; set; } // Priznak (length: 1024)
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [RukAndUcrh].([IdFl]) (FK_RukAndUcrh_FlFace)
        /// </summary>
        public FlFace FlFace { get; set; } // FK_RukAndUcrh_FlFace

        /// <summary>
        /// Parent UlFace pointed by [RukAndUcrh].([IdUl]) (FK_RukAndUcrh_UlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_RukAndUcrh_UlFace

        public RukAndUcrh()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SenderResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SenderResponse
    {
        public int IdSenderResponse { get; set; } // IdSenderResponse (Primary key)
        public long IdTemplateSender { get; set; } // IdTemplateSender
        public string NameSender { get; set; } // NameSender (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DepartmentOtdelResponses where [DepartmentOtdelResponse].[IdSenderResponse] point to this entity (FK_SenderResponse_DepartmentOtdelResponse)
        /// </summary>
        public System.Collections.Generic.ICollection<DepartmentOtdelResponse> DepartmentOtdelResponses { get; set; } // DepartmentOtdelResponse.FK_SenderResponse_DepartmentOtdelResponse

        public SenderResponse()
        {
            DateCreate = System.DateTime.Now;
            DepartmentOtdelResponses = new System.Collections.Generic.List<DepartmentOtdelResponse>();
        }
    }

    // SenderTaxJournalOkp2
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SenderTaxJournalOkp2
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameUser { get; set; } // NameUser (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child DepartamentOtdels where [DepartamentOtdel].[IdSender] point to this entity (FK_SenderTaxJournalOkp2_DepartamentOtdel)
        /// </summary>
        public System.Collections.Generic.ICollection<DepartamentOtdel> DepartamentOtdels { get; set; } // DepartamentOtdel.FK_SenderTaxJournalOkp2_DepartamentOtdel

        public SenderTaxJournalOkp2()
        {
            DataCreate = System.DateTime.Now;
            DepartamentOtdels = new System.Collections.Generic.List<DepartamentOtdel>();
        }
    }

    // SignatureBoss
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SignatureBoss
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameUser { get; set; } // NameUser (Primary key) (length: 128)
        public string IsSignature { get; set; } // IsSignature (Primary key) (length: 23)
        public bool IsActual { get; set; } // IsActual (Primary key)
    }

    // Statement
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Statement
    {
        public int IdStatement { get; set; } // IdStatement (Primary key)
        public int? IdNp { get; set; } // IdNp
        public string NumberStatement { get; set; } // NumberStatement (length: 128)
        public string Kbk { get; set; } // Kbk (length: 20)
        public string Oktmo { get; set; } // Oktmo (length: 15)
        public string IsPriznak { get; set; } // IsPriznak (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent StatementNp pointed by [Statement].([IdNp]) (FK_StatementNp_Statement)
        /// </summary>
        public StatementNp StatementNp { get; set; } // FK_StatementNp_Statement

        public Statement()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // StatementFull
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatementFull
    {
        public int IdStatementIndex { get; set; } // IdStatementIndex (Primary key)
        public int IdUl { get; set; } // IdUl
        public int IdStatementHead { get; set; } // IdStatementHead
        public int VarIndex { get; set; } // VarIndex
        public string NameParametr { get; set; } // NameParametr (length: 1024)
        public string ValuesStatement { get; set; } // ValuesStatement (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent HeadingStatement pointed by [StatementFull].([IdStatementHead]) (FK_HeadingStatement_StatementFull)
        /// </summary>
        public HeadingStatement HeadingStatement { get; set; } // FK_HeadingStatement_StatementFull

        /// <summary>
        /// Parent UlFace pointed by [StatementFull].([IdUl]) (FK_UlFace_StatementFull)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_StatementFull

        public StatementFull()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // StatementNp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatementNp
    {
        public int IdNp { get; set; } // IdNp (Primary key)
        public string Inn { get; set; } // Inn (length: 12)
        public string NameNp { get; set; } // NameNp (length: 1024)
        public string IsPriznakFullClosed { get; set; } // IsPriznakFullClosed (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Statements where [Statement].[IdNp] point to this entity (FK_StatementNp_Statement)
        /// </summary>
        public System.Collections.Generic.ICollection<Statement> Statements { get; set; } // Statement.FK_StatementNp_Statement

        public StatementNp()
        {
            DateCreate = System.DateTime.Now;
            Statements = new System.Collections.Generic.List<Statement>();
        }
    }

    // StatusDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusDocument
    {
        public int IdStatusDocument { get; set; } // IdStatusDocument (Primary key)
        public string NameMessage { get; set; } // NameMessage (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DocumentInventories where [DocumentInventory].[IdStatusDocument] point to this entity (FK_DocumentInventory_StatusDocument)
        /// </summary>
        public System.Collections.Generic.ICollection<DocumentInventory> DocumentInventories { get; set; } // DocumentInventory.FK_DocumentInventory_StatusDocument

        public StatusDocument()
        {
            DateCreate = System.DateTime.Now;
            DocumentInventories = new System.Collections.Generic.List<DocumentInventory>();
        }
    }

    // StatusEvent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusEvent
    {
        public int IdStatusEvent { get; set; } // IdStatusEvent (Primary key)
        public string NameStatusEvent { get; set; } // NameStatusEvent (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child EventProcessErrors where [EventProcessError].[IdStatusEvent] point to this entity (FK_EventProcessError_StatusEvent)
        /// </summary>
        public System.Collections.Generic.ICollection<EventProcessError> EventProcessErrors { get; set; } // EventProcessError.FK_EventProcessError_StatusEvent

        public StatusEvent()
        {
            DateCreate = System.DateTime.Now;
            EventProcessErrors = new System.Collections.Generic.List<EventProcessError>();
        }
    }

    // StatusFlRegistration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusFlRegistration
    {
        public int IdStatus { get; set; } // IdStatus (Primary key)
        public string MessageStatus { get; set; } // MessageStatus (length: 1024)
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FlFaceMainRegistrations where [FlFaceMainRegistration].[IdStatus] point to this entity (FK_FlFaceMainRegistration_StatusFlRegistration)
        /// </summary>
        public System.Collections.Generic.ICollection<FlFaceMainRegistration> FlFaceMainRegistrations { get; set; } // FlFaceMainRegistration.FK_FlFaceMainRegistration_StatusFlRegistration

        public StatusFlRegistration()
        {
            DateCreate = System.DateTime.Now;
            FlFaceMainRegistrations = new System.Collections.Generic.List<FlFaceMainRegistration>();
        }
    }

    // StatusOgrn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusOgrn
    {
        public int IdStatus { get; set; } // IdStatus (Primary key)
        public string NameStatus { get; set; } // NameStatus (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child OrganizationOgrnInventories where [OrganizationOgrnInventory].[IdStatus] point to this entity (FK_OrganizationOgrnInventory_StatusOgrn)
        /// </summary>
        public System.Collections.Generic.ICollection<OrganizationOgrnInventory> OrganizationOgrnInventories { get; set; } // OrganizationOgrnInventory.FK_OrganizationOgrnInventory_StatusOgrn

        public StatusOgrn()
        {
            DateCreate = System.DateTime.Now;
            OrganizationOgrnInventories = new System.Collections.Generic.List<OrganizationOgrnInventory>();
        }
    }

    // StrngthUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StrngthUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public System.DateTime? DataDocument { get; set; } // DataDocument
        public int? StrngthFace { get; set; } // StrngthFace
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [StrngthUlFace].([IdUl]) (FK_UlFace_StrngthUlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_StrngthUlFace

        public StrngthUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SvedAccoutingUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedAccoutingUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public string TypeObject { get; set; } // TypeObject (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string AddressObject { get; set; } // AddressObject (length: 1024)
        public int? CodeNalog { get; set; } // CodeNalog
        public System.DateTime? DateBegin { get; set; } // DateBegin
        public System.DateTime? DateFactBegin { get; set; } // DateFactBegin
        public string CodeSppuno { get; set; } // CodeSPPUNO (length: 1024)
        public string CauseBegin { get; set; } // CauseBegin (length: 1024)
        public System.DateTime? DateEnd { get; set; } // DateEnd
        public System.DateTime? DateFactEnd { get; set; } // DateFactEnd
        public string CodeSppunoEnd { get; set; } // CodeSPPUNOEnd (length: 1024)
        public string CauseEnd { get; set; } // CauseEnd (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [SvedAccoutingUlFace].([IdUl]) (FK_UlFace_SvedAccoutingUlFace)
        /// </summary>
        public UlFace UlFace { get; set; } // FK_UlFace_SvedAccoutingUlFace

        public SvedAccoutingUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SvedFactPatent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedFactPatent
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public int IdPatent { get; set; } // IdPatent
        public int FactDaysPatent { get; set; } // FactDaysPatent
        public int NalogDays { get; set; } // NalogDays
        public double NalogFact { get; set; } // NalogFact
        public double Delta { get; set; } // Delta
        public string Inspector { get; set; } // Inspector (length: 256)
        public long IdWrite { get; set; } // IdWrite
        public string DeltaWriteError { get; set; } // DeltaWriteError (length: 256)
        public string NalogDaysDelta { get; set; } // NalogDaysDelta (length: 256)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Patent pointed by [SvedFactPatent].([IdPatent]) (FK_SvedFactPatent_Patent)
        /// </summary>
        public Patent Patent { get; set; } // FK_SvedFactPatent_Patent

        public SvedFactPatent()
        {
            FactDaysPatent = 0;
            NalogDays = 0;
            DateCreate = System.DateTime.Now;
        }
    }

    // SvedObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedObject
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public int IdPatent { get; set; } // IdPatent
        public long IdObject { get; set; } // IdObject
        public string Code { get; set; } // Code (length: 10)
        public string TypeObject { get; set; } // TypeObject (length: 1024)
        public double AreaObject { get; set; } // AreaObject
        public string AddressObject { get; set; } // AddressObject (length: 1024)
        public long IdWrite { get; set; } // IdWrite
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Patent pointed by [SvedObject].([IdPatent]) (FK_SvedObject_Patent)
        /// </summary>
        public Patent Patent { get; set; } // FK_SvedObject_Patent

        public SvedObject()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SvedTr
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedTr
    {
        public int IdNum { get; set; } // IdNum (Primary key)
        public int IdPatent { get; set; } // IdPatent
        public long IdTr { get; set; } // IdTr
        public string Code { get; set; } // Code (length: 10)
        public string TypeTr { get; set; } // TypeTr (length: 1024)
        public string IdNumber { get; set; } // IdNumber (length: 1024)
        public string Model { get; set; } // Model (length: 256)
        public string RegNumber { get; set; } // RegNumber (length: 256)
        public double Weight { get; set; } // Weight
        public int NumberSeqts { get; set; } // NumberSeqts
        public long IdWrite { get; set; } // IdWrite
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Patent pointed by [SvedTr].([IdPatent]) (FK_SvedTr_Patent)
        /// </summary>
        public Patent Patent { get; set; } // FK_SvedTr_Patent

        public SvedTr()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SynchronizationUserAndAis
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SynchronizationUserAndAi
    {
        public int IdSync { get; set; } // IdSync (Primary key)
        public int IdDocGrn { get; set; } // IdDocGrn
        public int? IdDocument { get; set; } // IdDocument
        public int? IdAisDocument { get; set; } // IdAisDocument
        public bool? IsAddDocument { get; set; } // IsAddDocument
        public bool? IsEmptyDocument { get; set; } // IsEmptyDocument
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent AisDocument pointed by [SynchronizationUserAndAis].([IdAisDocument]) (FK_SynchronizationUserAndAis_AisDocument)
        /// </summary>
        public AisDocument AisDocument { get; set; } // FK_SynchronizationUserAndAis_AisDocument

        /// <summary>
        /// Parent DocumentInventory pointed by [SynchronizationUserAndAis].([IdDocument]) (FK_SynchronizationUserAndAis_DocumentInventory)
        /// </summary>
        public DocumentInventory DocumentInventory { get; set; } // FK_SynchronizationUserAndAis_DocumentInventory

        /// <summary>
        /// Parent GrnInventory pointed by [SynchronizationUserAndAis].([IdDocGrn]) (FK_SynchronizationUserAndAis_GrnInventory)
        /// </summary>
        public GrnInventory GrnInventory { get; set; } // FK_SynchronizationUserAndAis_GrnInventory

        public SynchronizationUserAndAi()
        {
            IsAddDocument = false;
            IsEmptyDocument = false;
            DateCreate = System.DateTime.Now;
        }
    }

    // TaxDeclarationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxDeclarationFl
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public double Psumm { get; set; } // Psumm (Primary key)
        public string Knd { get; set; } // Knd (length: 12)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public string Period { get; set; } // Period (length: 1024)
        public int NumberKor { get; set; } // NumberKor (Primary key)
        public int? God { get; set; } // God
        public string NameNp { get; set; } // NameNp (length: 256)
        public string InnNp { get; set; } // InnNp (length: 12)
        public bool SignOfDevialion { get; set; } // SignOfDevialion (Primary key)
        public double SummSignOfDevialion { get; set; } // SummSignOfDevialion (Primary key)
    }

    // TaxEasJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxEasJournal
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public long RegNumber { get; set; } // RegNumber (Primary key)
        public long? RegNumberZ { get; set; } // RegNumberZ
        public string Knd { get; set; } // Knd (length: 64)
        public string NameKnd { get; set; } // NameKnd (length: 1024)
        public System.DateTime? DateDocument { get; set; } // DateDocument
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameNp { get; set; } // NameNp (length: 1024)
    }

    // TaxJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal
    {
        public int Id { get; set; } // Id (Primary key)
        public string Color { get; set; } // Color (length: 12)
        public int? IdDelo { get; set; } // IdDelo
        public System.DateTime? DateError { get; set; } // DateError
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string FullPath { get; set; } // FullPath (length: 1024)
        public string NameFile { get; set; } // NameFile (length: 128)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public TaxJournal()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TaxJournal121
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121
    {
        public int Id { get; set; } // Id (Primary key)
        public string GlobalColor { get; set; } // GlobalColor (length: 12)
        public string GlobalProcessColor { get; set; } // GlobalProcessColor (length: 12)
        public string ColorDoc { get; set; } // ColorDoc (length: 12)
        public long? RegNumDeclaration { get; set; } // RegNumDeclaration
        public string Knd { get; set; } // Knd (length: 64)
        public string NameKnd { get; set; } // NameKnd (length: 512)
        public string Period { get; set; } // Period (length: 128)
        public int? God { get; set; } // God
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public int? IdComplex { get; set; } // IdComplex
        public System.DateTime DateStartCheck { get; set; } // DateStartCheck (Primary key)
        public System.DateTime DateFinishCheck { get; set; } // DateFinishCheck (Primary key)
        public System.DateTime DateStartDeclaration { get; set; } // DateStartDeclaration (Primary key)
        public System.DateTime DateFinishDeclaration { get; set; } // DateFinishDeclaration (Primary key)
        public System.DateTime? DateFinishKnp { get; set; } // DateFinishKnp
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public bool IsPriznak { get; set; } // IsPriznak (Primary key)
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string Score { get; set; } // Score (length: 512)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public TaxJournal121()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TaxJournal121AutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121AutoWebPage
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public int? RegNumDeclaration { get; set; } // RegNumDeclaration
        public string Period { get; set; } // Period (length: 128)
        public string Knd { get; set; } // Knd (length: 64)
        public string NameKnd { get; set; } // NameKnd (length: 512)
        public int? God { get; set; } // God
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public System.DateTime DateStartCheck { get; set; } // DateStartCheck (Primary key)
        public System.DateTime DateFinishCheck { get; set; } // DateFinishCheck (Primary key)
        public System.DateTime DateStartDeclaration { get; set; } // DateStartDeclaration (Primary key)
        public System.DateTime DateFinishDeclaration { get; set; } // DateFinishDeclaration (Primary key)
        public int? CounDay { get; set; } // CounDay
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Extensions { get; set; } // Extensions (length: 10)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
    }

    // TaxJournal121Error
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121Error
    {
        public int Id { get; set; } // Id (Primary key)
        public string Color1 { get; set; } // Color1 (length: 12)
        public string Color2 { get; set; } // Color2 (length: 12)
        public string Color3 { get; set; } // Color3 (length: 12)
        public string Color4 { get; set; } // Color4 (length: 12)
        public string Color5 { get; set; } // Color5 (length: 12)
        public long? RegNumDeclaration { get; set; } // RegNumDeclaration
        public string NameKnd { get; set; } // NameKnd (length: 512)
        public string Knd { get; set; } // Knd (length: 64)
        public string Period { get; set; } // Period (length: 128)
        public int? God { get; set; } // God
        public int? KorrectNumber { get; set; } // KorrectNumber
        public string Fid { get; set; } // Fid (length: 512)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public int? IdComplex { get; set; } // IdComplex
        public System.DateTime? DateStartCheck { get; set; } // DateStartCheck
        public System.DateTime DateFinishCheck { get; set; } // DateFinishCheck
        public System.DateTime? DateStartDeclaration { get; set; } // DateStartDeclaration
        public System.DateTime? DateFinishDeclaration { get; set; } // DateFinishDeclaration
        public System.DateTime? DateFinishKnp { get; set; } // DateFinishKnp
        public System.DateTime? DateCloseValidation { get; set; } // DateCloseValidation
        public string MessageInfoR1 { get; set; } // MessageInfoR1
        public string MessageError { get; set; } // MessageError
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public TaxJournal121Error()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TaxJournal129
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal129
    {
        public int Id { get; set; } // Id (Primary key)
        public string StateColor { get; set; } // StateColor (length: 12)
        public string StateTaxPayerColor { get; set; } // State_TaxPayerColor (length: 12)
        public int? IdDelo { get; set; } // IdDelo
        public System.DateTime? DateError { get; set; } // DateError
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string StatusObject { get; set; } // StatusObject (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string FullPath { get; set; } // FullPath (length: 1024)
        public string NameFile { get; set; } // NameFile (length: 128)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public TaxJournal129()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TaxJournalAutoReport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoReport
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdDelo { get; set; } // IdDelo
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // isTks
        public bool? IsMail { get; set; } // isMail
        public bool? IsLk3 { get; set; } // isLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string Extensions { get; set; } // Extensions (length: 10)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // TaxJournalAutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoWebPage
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public int? IdDelo { get; set; } // IdDelo
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string Extensions { get; set; } // Extensions (length: 10)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // TaxJournalDelivery
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalDelivery
    {
        public int Id { get; set; } // Id (Primary key)
        public long RegNumber { get; set; } // RegNumber
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public System.DateTime DateDocument { get; set; } // DateDocument
        public System.DateTime DateSend { get; set; } // DateSend
        public System.DateTime DateDelivery { get; set; } // DateDelivery
        public int Number { get; set; } // Number
        public string NameDocument { get; set; } // NameDocument (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string TypeFace { get; set; } // TypeFace (length: 32)
        public long? RegNumDeclaration { get; set; } // RegNumDeclaration
        public string Knd { get; set; } // Knd (length: 32)
        public string NameDeclaration { get; set; } // NameDeclaration (length: 1024)
        public int God { get; set; } // God
        public System.DateTime DateCreate { get; set; } // DateCreate

        public TaxJournalDelivery()
        {
            Number = 0;
            DateCreate = System.DateTime.Now;
        }
    }

    // Template
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Template
    {
        public int IdTemplate { get; set; } // IdTemplate (Primary key)
        public string NameTemplate { get; set; } // NameTemplate (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FaceModelTemplateGetPosts where [FaceModelTemplateGetPost].[IdTemplate] point to this entity (FK_Template_FaceModelTemplateGetPost)
        /// </summary>
        public System.Collections.Generic.ICollection<FaceModelTemplateGetPost> FaceModelTemplateGetPosts { get; set; } // FaceModelTemplateGetPost.FK_Template_FaceModelTemplateGetPost
        /// <summary>
        /// Child TemplateAndTrees where [TemplateAndTree].[IdTemplate] point to this entity (FK_Template_TemplateAndTree)
        /// </summary>
        public System.Collections.Generic.ICollection<TemplateAndTree> TemplateAndTrees { get; set; } // TemplateAndTree.FK_Template_TemplateAndTree

        public Template()
        {
            DateCreate = System.DateTime.Now;
            FaceModelTemplateGetPosts = new System.Collections.Generic.List<FaceModelTemplateGetPost>();
            TemplateAndTrees = new System.Collections.Generic.List<TemplateAndTree>();
        }
    }

    // TemplateAndTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateAndTree
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdTemplate { get; set; } // IdTemplate
        public int IdTree { get; set; } // IdTree
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Template pointed by [TemplateAndTree].([IdTemplate]) (FK_Template_TemplateAndTree)
        /// </summary>
        public Template Template { get; set; } // FK_Template_TemplateAndTree

        /// <summary>
        /// Parent Tree pointed by [TemplateAndTree].([IdTree]) (FK_Tree_TemplateAndTree)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_TemplateAndTree

        public TemplateAndTree()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // TemplateModelResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateModelResponse
    {
        public int IdTemplateResponse { get; set; } // IdTemplateResponse (Primary key)
        public string NameTemplate { get; set; } // NameTemplate (length: 512)
        public string NameMnk { get; set; } // NameMnk (length: 512)
        public string DocMail { get; set; } // DocMail (length: 512)
        public string NumberDoc { get; set; } // NumberDoc (length: 512)
        public string DataDoc { get; set; } // DataDoc (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DepartmentOtdelResponses where [DepartmentOtdelResponse].[IdTemplateResponse] point to this entity (FK_TemplateModelResponse_DepartmentOtdelResponse)
        /// </summary>
        public System.Collections.Generic.ICollection<DepartmentOtdelResponse> DepartmentOtdelResponses { get; set; } // DepartmentOtdelResponse.FK_TemplateModelResponse_DepartmentOtdelResponse

        public TemplateModelResponse()
        {
            DateCreate = System.DateTime.Now;
            DepartmentOtdelResponses = new System.Collections.Generic.List<DepartmentOtdelResponse>();
        }
    }

    // TemplateQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateQuestion
    {
        public int IdTemplateQuestions { get; set; } // IdTemplateQuestions (Primary key)
        public int IdGroupQuestions { get; set; } // IdGroupQuestions
        public int IdType { get; set; } // IdType
        public string InfoQuestions { get; set; } // InfoQuestions (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child QuestionsAndUsers where [QuestionsAndUsers].[IdTemplateQuestions] point to this entity (FK_TemplateQuestions_QuestionsAndUsers)
        /// </summary>
        public System.Collections.Generic.ICollection<QuestionsAndUser> QuestionsAndUsers { get; set; } // QuestionsAndUsers.FK_TemplateQuestions_QuestionsAndUsers
        /// <summary>
        /// Child QuestionsAndUserRegistrationFls where [QuestionsAndUserRegistrationFl].[IdTemplateQuestions] point to this entity (FK_TemplateQuestions_QuestionsAndUserRegistrationFl)
        /// </summary>
        public System.Collections.Generic.ICollection<QuestionsAndUserRegistrationFl> QuestionsAndUserRegistrationFls { get; set; } // QuestionsAndUserRegistrationFl.FK_TemplateQuestions_QuestionsAndUserRegistrationFl

        // Foreign keys

        /// <summary>
        /// Parent GroupQuestion pointed by [TemplateQuestions].([IdGroupQuestions]) (FK_GroupQuestions_TemplateQuestions)
        /// </summary>
        public GroupQuestion GroupQuestion { get; set; } // FK_GroupQuestions_TemplateQuestions

        /// <summary>
        /// Parent TypeOrgAndQuestion pointed by [TemplateQuestions].([IdType]) (FK_TypeOrgAndQuestions_TemplateQuestions)
        /// </summary>
        public TypeOrgAndQuestion TypeOrgAndQuestion { get; set; } // FK_TypeOrgAndQuestions_TemplateQuestions

        public TemplateQuestion()
        {
            DateCreate = System.DateTime.Now;
            QuestionsAndUserRegistrationFls = new System.Collections.Generic.List<QuestionsAndUserRegistrationFl>();
            QuestionsAndUsers = new System.Collections.Generic.List<QuestionsAndUser>();
        }
    }

    // Tree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Tree
    {
        public int IdTree { get; set; } // IdTree (Primary key)
        public string Tree_ { get; set; } // Tree (length: 1024)
        public int IdTypeTree { get; set; } // IdTypeTree
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FaceModelTemplateGetPosts where [FaceModelTemplateGetPost].[IdTree] point to this entity (FK_Tree_FaceModelTemplateGetPost)
        /// </summary>
        public System.Collections.Generic.ICollection<FaceModelTemplateGetPost> FaceModelTemplateGetPosts { get; set; } // FaceModelTemplateGetPost.FK_Tree_FaceModelTemplateGetPost
        /// <summary>
        /// Child Fields where [Fields].[IdTree] point to this entity (FK_Tree_Fields)
        /// </summary>
        public System.Collections.Generic.ICollection<Field> Fields { get; set; } // Fields.FK_Tree_Fields
        /// <summary>
        /// Child TemplateAndTrees where [TemplateAndTree].[IdTree] point to this entity (FK_Tree_TemplateAndTree)
        /// </summary>
        public System.Collections.Generic.ICollection<TemplateAndTree> TemplateAndTrees { get; set; } // TemplateAndTree.FK_Tree_TemplateAndTree
        /// <summary>
        /// Parent (One-to-One) Tree pointed by [TreeDataArea].[IdTreeDataArea] (FK_Tree_TreeDataArea)
        /// </summary>
        public TreeDataArea TreeDataArea { get; set; } // TreeDataArea.FK_Tree_TreeDataArea
        /// <summary>
        /// Parent (One-to-One) Tree pointed by [TreeExport].[IdTreeExport] (FK_Tree_TreeExport)
        /// </summary>
        public TreeExport TreeExport { get; set; } // TreeExport.FK_Tree_TreeExport
        /// <summary>
        /// Parent (One-to-One) Tree pointed by [TreeFilter].[IdTreeFilter] (FK_Tree_TreeFilter)
        /// </summary>
        public TreeFilter TreeFilter { get; set; } // TreeFilter.FK_Tree_TreeFilter
        /// <summary>
        /// Parent (One-to-One) Tree pointed by [TreeGrid].[IdTreeGrid] (FK_Tree_TreeGrid)
        /// </summary>
        public TreeGrid TreeGrid { get; set; } // TreeGrid.FK_Tree_TreeGrid
        /// <summary>
        /// Parent (One-to-One) Tree pointed by [TreeUpdate].[IdTreeUpdate] (FK_Tree_TreeUpdate)
        /// </summary>
        public TreeUpdate TreeUpdate { get; set; } // TreeUpdate.FK_Tree_TreeUpdate

        // Foreign keys

        /// <summary>
        /// Parent TypeTree pointed by [Tree].([IdTypeTree]) (FK_Tree_TypeTree)
        /// </summary>
        public TypeTree TypeTree { get; set; } // FK_Tree_TypeTree

        public Tree()
        {
            DateCreate = System.DateTime.Now;
            FaceModelTemplateGetPosts = new System.Collections.Generic.List<FaceModelTemplateGetPost>();
            Fields = new System.Collections.Generic.List<Field>();
            TemplateAndTrees = new System.Collections.Generic.List<TemplateAndTree>();
        }
    }

    // TreeDataArea
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeDataArea
    {
        public int IdTreeDataArea { get; set; } // IdTreeDataArea (Primary key)
        public string FullPathDataArea { get; set; } // FullPathDataArea (length: 2048)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child DataAreaParameters where [DataAreaParameters].[IdDataArea] point to this entity (FK_TreeDataArea_DataAreaParameters)
        /// </summary>
        public System.Collections.Generic.ICollection<DataAreaParameter> DataAreaParameters { get; set; } // DataAreaParameters.FK_TreeDataArea_DataAreaParameters

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [TreeDataArea].([IdTreeDataArea]) (FK_Tree_TreeDataArea)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_TreeDataArea

        public TreeDataArea()
        {
            DataCreate = System.DateTime.Now;
            DataAreaParameters = new System.Collections.Generic.List<DataAreaParameter>();
        }
    }

    // TreeExport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeExport
    {
        public int IdTreeExport { get; set; } // IdTreeExport (Primary key)
        public string FullPathExport { get; set; } // FullPathExport (length: 2048)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [TreeExport].([IdTreeExport]) (FK_Tree_TreeExport)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_TreeExport

        public TreeExport()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TreeFilter
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeFilter
    {
        public int IdTreeFilter { get; set; } // IdTreeFilter (Primary key)
        public string FullPathFilter { get; set; } // FullPathFilter (length: 2048)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [TreeFilter].([IdTreeFilter]) (FK_Tree_TreeFilter)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_TreeFilter

        public TreeFilter()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TreeGrid
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeGrid
    {
        public int IdTreeGrid { get; set; } // IdTreeGrid (Primary key)
        public string FullPathGrid { get; set; } // FullPathGrid (length: 2048)
        public string GridToIndexParameter { get; set; } // GridToIndexParameter (length: 2048)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [TreeGrid].([IdTreeGrid]) (FK_Tree_TreeGrid)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_TreeGrid

        public TreeGrid()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TreeUpdate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeUpdate
    {
        public int IdTreeUpdate { get; set; } // IdTreeUpdate (Primary key)
        public string FullPathUpdate { get; set; } // FullPathUpdate (length: 2048)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [TreeUpdate].([IdTreeUpdate]) (FK_Tree_TreeUpdate)
        /// </summary>
        public Tree Tree { get; set; } // FK_Tree_TreeUpdate

        public TreeUpdate()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TypeObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeObject
    {
        public int IdObject { get; set; } // IdObject (Primary key)
        public string TypeObject_ { get; set; } // TypeObject (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FactOfOwnershipImZmTrFls where [FactOfOwnershipImZmTrFl].[IdObject] point to this entity (FK_TypeObject_FactOfOwnershipImZmTrFl)
        /// </summary>
        public System.Collections.Generic.ICollection<FactOfOwnershipImZmTrFl> FactOfOwnershipImZmTrFls { get; set; } // FactOfOwnershipImZmTrFl.FK_TypeObject_FactOfOwnershipImZmTrFl
        /// <summary>
        /// Child ImZmTrFls where [ImZmTrFl].[IdObject] point to this entity (FK_TypeObject_ImZmTrFl)
        /// </summary>
        public System.Collections.Generic.ICollection<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl.FK_TypeObject_ImZmTrFl
        /// <summary>
        /// Child ImZmTrUls where [ImZmTrUl].[IdObject] point to this entity (FK_TypeObject_ImZmTrUl)
        /// </summary>
        public System.Collections.Generic.ICollection<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl.FK_TypeObject_ImZmTrUl

        public TypeObject()
        {
            DateCreate = System.DateTime.Now;
            FactOfOwnershipImZmTrFls = new System.Collections.Generic.List<FactOfOwnershipImZmTrFl>();
            ImZmTrFls = new System.Collections.Generic.List<ImZmTrFl>();
            ImZmTrUls = new System.Collections.Generic.List<ImZmTrUl>();
        }
    }

    // TypeOrgAndQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeOrgAndQuestion
    {
        public int IdType { get; set; } // IdType (Primary key)
        public string NameType { get; set; } // NameType (length: 256)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child MainOrgs where [MainOrg].[IdType] point to this entity (FK_TypeOrgAndQuestions_MainOrg)
        /// </summary>
        public System.Collections.Generic.ICollection<MainOrg> MainOrgs { get; set; } // MainOrg.FK_TypeOrgAndQuestions_MainOrg
        /// <summary>
        /// Child MainUserRegistrationFls where [MainUserRegistrationFl].[IdType] point to this entity (FK_TypeOrgAndQuestions_MainUserRegistrationFl)
        /// </summary>
        public System.Collections.Generic.ICollection<MainUserRegistrationFl> MainUserRegistrationFls { get; set; } // MainUserRegistrationFl.FK_TypeOrgAndQuestions_MainUserRegistrationFl
        /// <summary>
        /// Child TemplateQuestions where [TemplateQuestions].[IdType] point to this entity (FK_TypeOrgAndQuestions_TemplateQuestions)
        /// </summary>
        public System.Collections.Generic.ICollection<TemplateQuestion> TemplateQuestions { get; set; } // TemplateQuestions.FK_TypeOrgAndQuestions_TemplateQuestions

        public TypeOrgAndQuestion()
        {
            DateCreate = System.DateTime.Now;
            MainOrgs = new System.Collections.Generic.List<MainOrg>();
            MainUserRegistrationFls = new System.Collections.Generic.List<MainUserRegistrationFl>();
            TemplateQuestions = new System.Collections.Generic.List<TemplateQuestion>();
        }
    }

    // TypeTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeTree
    {
        public int IdTypeTree { get; set; } // IdTypeTree (Primary key)
        public string NameTypeTree { get; set; } // NameTypeTree (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Trees where [Tree].[IdTypeTree] point to this entity (FK_Tree_TypeTree)
        /// </summary>
        public System.Collections.Generic.ICollection<Tree> Trees { get; set; } // Tree.FK_Tree_TypeTree

        public TypeTree()
        {
            DateCreate = System.DateTime.Now;
            Trees = new System.Collections.Generic.List<Tree>();
        }
    }

    // UlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFace
    {
        public int IdUl { get; set; } // IdUl (Primary key)
        public long IdNum { get; set; } // IdNum
        public long Fid { get; set; } // Fid
        public string Inn { get; set; } // Inn (length: 12)
        public string NameFull { get; set; } // NameFull (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Ogrn { get; set; } // Ogrn (length: 18)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public string NameSmall { get; set; } // NameSmall (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
        public System.DateTime? DateResh { get; set; } // DateResh
        public System.DateTime? DateReshReorg { get; set; } // DateReshReorg
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Books where [Book].[IdUl] point to this entity (FK_Book_UlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<Book> Books { get; set; } // Book.FK_Book_UlFace
        /// <summary>
        /// Child BranchUlFaces where [BranchUlFace].[IdUl] point to this entity (FK_UlFace_BranchUlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<BranchUlFace> BranchUlFaces { get; set; } // BranchUlFace.FK_UlFace_BranchUlFace
        /// <summary>
        /// Child CashBankAllUlFaces where [CashBankAllUlFace].[IdUl] point to this entity (FK_UlFace_CashBankAllUlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<CashBankAllUlFace> CashBankAllUlFaces { get; set; } // CashBankAllUlFace.FK_UlFace_CashBankAllUlFace
        /// <summary>
        /// Child CashUlFaces where [CashUlFace].[IdUl] point to this entity (FK_UlFace_CashUlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<CashUlFace> CashUlFaces { get; set; } // CashUlFace.FK_UlFace_CashUlFace
        /// <summary>
        /// Child CounterpartyCashBanks where [CounterpartyCashBank].[IdUl] point to this entity (FK_CounterpartyCashBank_UlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<CounterpartyCashBank> CounterpartyCashBanks { get; set; } // CounterpartyCashBank.FK_CounterpartyCashBank_UlFace
        /// <summary>
        /// Child DeclarationUls where [DeclarationUl].[IdUl] point to this entity (FK_DeclarationUl_UlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<DeclarationUl> DeclarationUls { get; set; } // DeclarationUl.FK_DeclarationUl_UlFace
        /// <summary>
        /// Child HistoriUlFaces where [HistoriUlFace].[IdUl] point to this entity (FK_HistoriUlFace_UlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<HistoriUlFace> HistoriUlFaces { get; set; } // HistoriUlFace.FK_HistoriUlFace_UlFace
        /// <summary>
        /// Child ImZmTrUls where [ImZmTrUl].[IdUl] point to this entity (FK_UlFace_ImZmTrUl)
        /// </summary>
        public System.Collections.Generic.ICollection<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl.FK_UlFace_ImZmTrUl
        /// <summary>
        /// Child IndividualCardsUlFaces where [IndividualCardsUlFace].[IdUl] point to this entity (FK_IndividualCardsUlFace_UlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<IndividualCardsUlFace> IndividualCardsUlFaces { get; set; } // IndividualCardsUlFace.FK_IndividualCardsUlFace_UlFace
        /// <summary>
        /// Child NdflFls where [NdflFl].[IdUl] point to this entity (FK_UlFace_NdflFl)
        /// </summary>
        public System.Collections.Generic.ICollection<NdflFl> NdflFls { get; set; } // NdflFl.FK_UlFace_NdflFl
        /// <summary>
        /// Child RukAndUcrhs where [RukAndUcrh].[IdUl] point to this entity (FK_RukAndUcrh_UlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh.FK_RukAndUcrh_UlFace
        /// <summary>
        /// Child StatementFulls where [StatementFull].[IdUl] point to this entity (FK_UlFace_StatementFull)
        /// </summary>
        public System.Collections.Generic.ICollection<StatementFull> StatementFulls { get; set; } // StatementFull.FK_UlFace_StatementFull
        /// <summary>
        /// Child StrngthUlFaces where [StrngthUlFace].[IdUl] point to this entity (FK_UlFace_StrngthUlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<StrngthUlFace> StrngthUlFaces { get; set; } // StrngthUlFace.FK_UlFace_StrngthUlFace
        /// <summary>
        /// Child SvedAccoutingUlFaces where [SvedAccoutingUlFace].[IdUl] point to this entity (FK_UlFace_SvedAccoutingUlFace)
        /// </summary>
        public System.Collections.Generic.ICollection<SvedAccoutingUlFace> SvedAccoutingUlFaces { get; set; } // SvedAccoutingUlFace.FK_UlFace_SvedAccoutingUlFace

        public UlFace()
        {
            DateCreate = System.DateTime.Now;
            Books = new System.Collections.Generic.List<Book>();
            BranchUlFaces = new System.Collections.Generic.List<BranchUlFace>();
            CashBankAllUlFaces = new System.Collections.Generic.List<CashBankAllUlFace>();
            CashUlFaces = new System.Collections.Generic.List<CashUlFace>();
            CounterpartyCashBanks = new System.Collections.Generic.List<CounterpartyCashBank>();
            DeclarationUls = new System.Collections.Generic.List<DeclarationUl>();
            HistoriUlFaces = new System.Collections.Generic.List<HistoriUlFace>();
            ImZmTrUls = new System.Collections.Generic.List<ImZmTrUl>();
            IndividualCardsUlFaces = new System.Collections.Generic.List<IndividualCardsUlFace>();
            NdflFls = new System.Collections.Generic.List<NdflFl>();
            RukAndUcrhs = new System.Collections.Generic.List<RukAndUcrh>();
            StatementFulls = new System.Collections.Generic.List<StatementFull>();
            StrngthUlFaces = new System.Collections.Generic.List<StrngthUlFace>();
            SvedAccoutingUlFaces = new System.Collections.Generic.List<SvedAccoutingUlFace>();
        }
    }

    // UlFaceAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceAll
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdUl { get; set; } // IdUl (Primary key)
        public string StatusFull { get; set; } // StatusFull (length: 7)
        public long IdNum { get; set; } // IdNum (Primary key)
        public long Fid { get; set; } // Fid (Primary key)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Ogrn { get; set; } // Ogrn (length: 18)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public string NameSmall { get; set; } // NameSmall (Primary key) (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
    }

    // UlFaceAllSales
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceAllSale
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdUl { get; set; } // IdUl (Primary key)
        public string StatusFull { get; set; } // StatusFull (length: 7)
        public long IdNum { get; set; } // IdNum (Primary key)
        public long Fid { get; set; } // Fid (Primary key)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Ogrn { get; set; } // Ogrn (length: 18)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public string NameSmall { get; set; } // NameSmall (Primary key) (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
    }

    // UlFaceSalesBookBank
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceSalesBookBank
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdUl { get; set; } // IdUl (Primary key)
        public string StatusFull { get; set; } // StatusFull (length: 7)
        public long IdNum { get; set; } // IdNum (Primary key)
        public long Fid { get; set; } // Fid (Primary key)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Ogrn { get; set; } // Ogrn (length: 18)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public string NameSmall { get; set; } // NameSmall (Primary key) (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
    }

    // UserOrg
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UserOrg
    {
        public int IdUser { get; set; } // IdUser (Primary key)
        public int IdOrg { get; set; } // IdOrg
        public string InnUser { get; set; } // InnUser (length: 12)
        public int? IdProcedure { get; set; } // IdProcedure
        public string Family { get; set; } // Family (length: 512)
        public string Name { get; set; } // Name (length: 512)
        public string Surname { get; set; } // Surname (length: 512)
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public string VidDoc { get; set; } // VidDoc (length: 512)
        public string Seria { get; set; } // Seria (length: 512)
        public string Number { get; set; } // Number (length: 512)
        public System.DateTime? DateIn { get; set; } // DateIn
        public string Code { get; set; } // Code (length: 512)
        public string WhoIn { get; set; } // WhoIn (length: 512)
        public string Location { get; set; } // Location (length: 1024)
        public bool IsError { get; set; } // IsError
        public bool IsGood { get; set; } // IsGood
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child QuestionsAndUsers where [QuestionsAndUsers].[IdUser] point to this entity (FK_UserOrg_QuestionsAndUsers)
        /// </summary>
        public System.Collections.Generic.ICollection<QuestionsAndUser> QuestionsAndUsers { get; set; } // QuestionsAndUsers.FK_UserOrg_QuestionsAndUsers

        // Foreign keys

        /// <summary>
        /// Parent MainOrg pointed by [UserOrg].([IdOrg]) (FK_MainOrg_UserOrg)
        /// </summary>
        public MainOrg MainOrg { get; set; } // FK_MainOrg_UserOrg

        public UserOrg()
        {
            IsError = false;
            IsGood = false;
            DateCreate = System.DateTime.Now;
            QuestionsAndUsers = new System.Collections.Generic.List<QuestionsAndUser>();
        }
    }

    // ViewRegisterDocumentsPrinting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ViewRegisterDocumentsPrinting
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int IdDocument { get; set; } // IdDocument (Primary key)
        public string MachineName { get; set; } // MachineName (length: 128)
        public string TabelNumberUser { get; set; } // TabelNumberUser (length: 64)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public string Address { get; set; } // Address (length: 1024)
        public System.DateTime? DateDocument { get; set; } // DateDocument
        public int? NumberDocument { get; set; } // NumberDocument
        public string FormKnd { get; set; } // FormKnd (length: 512)
        public string RegNumberDocumetGuid { get; set; } // RegNumberDocumetGuid (length: 64)
        public int CountPage { get; set; } // CountPage (Primary key)
        public System.DateTime DateCreate { get; set; } // DateCreate (Primary key)
    }

    #endregion

    #region POCO Configuration

    // AddDocumentToContainer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddDocumentToContainerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AddDocumentToContainer>
    {
        public AddDocumentToContainerConfiguration()
            : this("dbo")
        {
        }

        public AddDocumentToContainerConfiguration(string schema)
        {
            ToTable("AddDocumentToContainer", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdContainer).HasColumnName(@"IdContainer").HasColumnType("int").IsRequired();
            Property(x => x.IdDocument).HasColumnName(@"IdDocument").HasColumnType("int").IsRequired();
            Property(x => x.CounterModel).HasColumnName(@"CounterModel").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DocumentContainer).WithMany(b => b.AddDocumentToContainers).HasForeignKey(c => c.IdContainer).WillCascadeOnDelete(false); // FK_AddDocumentToContainer_DocumentContainer
            HasRequired(a => a.DocumentInventory).WithMany(b => b.AddDocumentToContainers).HasForeignKey(c => c.IdDocument).WillCascadeOnDelete(false); // FK_AddDocumentToContainer_DocumentInventory
        }
    }

    // AddUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AddUlFace>
    {
        public AddUlFaceConfiguration()
            : this("dbo")
        {
        }

        public AddUlFaceConfiguration(string schema)
        {
            ToTable("AddUlFace", schema);
            HasKey(x => x.IdUl);

            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InnUl).HasColumnName(@"InnUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FullStatus).HasColumnName(@"FullStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // AddUlFaceWeb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddUlFaceWebConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AddUlFaceWeb>
    {
        public AddUlFaceWebConfiguration()
            : this("dbo")
        {
        }

        public AddUlFaceWebConfiguration(string schema)
        {
            ToTable("AddUlFaceWeb", schema);
            HasKey(x => new { x.LogicsButton, x.IdUl });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InnUl).HasColumnName(@"InnUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FullStatus).HasColumnName(@"FullStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
        }
    }

    // AisDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisDocument>
    {
        public AisDocumentConfiguration()
            : this("dbo")
        {
        }

        public AisDocumentConfiguration(string schema)
        {
            ToTable("AisDocument", schema);
            HasKey(x => x.IdAisDocument);

            Property(x => x.IdAisDocument).HasColumnName(@"IdAisDocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdGrnAis3).HasColumnName(@"IdGrnAis3").HasColumnType("int").IsRequired();
            Property(x => x.IdDocumentDirectory).HasColumnName(@"IdDocumentDirectory").HasColumnType("int").IsRequired();
            Property(x => x.SmallNameDocument).HasColumnName(@"SmallNameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NumberDocument).HasColumnName(@"NumberDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CountPage).HasColumnName(@"CountPage").HasColumnType("int").IsOptional();
            Property(x => x.GuidDocument).HasColumnName(@"GuidDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IsFinndRegDelo).HasColumnName(@"IsFinndRegDelo").HasColumnType("bit").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.AisGrnDocument).WithMany(b => b.AisDocuments).HasForeignKey(c => c.IdGrnAis3).WillCascadeOnDelete(false); // FK_AisDocument_AisGrnDocument
            HasRequired(a => a.DirectoryDocument).WithMany(b => b.AisDocuments).HasForeignKey(c => c.IdDocumentDirectory).WillCascadeOnDelete(false); // FK_AisDocument_DirectoryDocument
        }
    }

    // AisGrnDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisGrnDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisGrnDocument>
    {
        public AisGrnDocumentConfiguration()
            : this("dbo")
        {
        }

        public AisGrnDocumentConfiguration(string schema)
        {
            ToTable("AisGrnDocument", schema);
            HasKey(x => x.IdGrnAis3);

            Property(x => x.IdGrnAis3).HasColumnName(@"IdGrnAis3").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FullNameGrnAis3).HasColumnName(@"FullNameGrnAis3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // AllFaceRegistryReference
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllFaceRegistryReferenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllFaceRegistryReference>
    {
        public AllFaceRegistryReferenceConfiguration()
            : this("dbo")
        {
        }

        public AllFaceRegistryReferenceConfiguration(string schema)
        {
            ToTable("AllFaceRegistryReference", schema);
            HasKey(x => x.IdFace);

            Property(x => x.IdFace).HasColumnName(@"IdFace").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TypeFaceBool).HasColumnName(@"TypeFaceBool").HasColumnType("bit").IsRequired();
            Property(x => x.TypeFace).HasColumnName(@"TypeFace").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InnFace).HasColumnName(@"InnFace").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.CodeNo).HasColumnName(@"CodeNo").HasColumnType("int").IsOptional();
            Property(x => x.TypeObjectModel).HasColumnName(@"TypeObjectModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsState1).HasColumnName(@"IsState1").HasColumnType("bit").IsRequired();
            Property(x => x.DateState1).HasColumnName(@"DateState1").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsState2).HasColumnName(@"IsState2").HasColumnType("bit").IsRequired();
            Property(x => x.DateState2).HasColumnName(@"DateState2").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsErrorMessage).HasColumnName(@"IsErrorMessage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateModification).HasColumnName(@"DateModification").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // AllJournal129
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllJournal129Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllJournal129>
    {
        public AllJournal129Configuration()
            : this("dbo")
        {
        }

        public AllJournal129Configuration(string schema)
        {
            ToTable("AllJournal129", schema);
            HasKey(x => new { x.LogicsButton, x.Id });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StateColor).HasColumnName(@"StateColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.StateTaxPayerColor).HasColumnName(@"State_TaxPayerColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.DateError).HasColumnName(@"DateError").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // AllJournalRegistrationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllJournalRegistrationFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllJournalRegistrationFl>
    {
        public AllJournalRegistrationFlConfiguration()
            : this("dbo")
        {
        }

        public AllJournalRegistrationFlConfiguration(string schema)
        {
            ToTable("AllJournalRegistrationFl", schema);
            HasKey(x => new { x.LogicsButton, x.Inn, x.DateCreate });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessageStatus).HasColumnName(@"MessageStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.MessageError).HasColumnName(@"MessageError").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.F).HasColumnName(@"F").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.I).HasColumnName(@"I").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.O).HasColumnName(@"O").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.PlaceBirth).HasColumnName(@"PlaceBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeSd).HasColumnName(@"CodeSd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SeriaDoc).HasColumnName(@"SeriaDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NumberDoc).HasColumnName(@"NumberDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateCreateDoc).HasColumnName(@"DateCreateDoc").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.WhoDoc).HasColumnName(@"WhoDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodePodr).HasColumnName(@"CodePodr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Citizenship).HasColumnName(@"Citizenship").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AllPatent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AllPatentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllPatent>
    {
        public AllPatentConfiguration()
            : this("dbo")
        {
        }

        public AllPatentConfiguration(string schema)
        {
            ToTable("AllPatent", schema);
            HasKey(x => new { x.LogicsButton, x.NameFull, x.Inn, x.Address, x.NameVid, x.DateStartPatent, x.DateFinishPatent, x.DateResh, x.IdPatent });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OgrnIp).HasColumnName(@"OgrnIp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AddressObject).HasColumnName(@"AddressObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeWork).HasColumnName(@"CodeWork").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(31);
            Property(x => x.NameVid).HasColumnName(@"NameVid").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2048).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NumberPatent).HasColumnName(@"NumberPatent").HasColumnType("bigint").IsOptional();
            Property(x => x.DateStartPatent).HasColumnName(@"DateStartPatent").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateFinishPatent).HasColumnName(@"DateFinishPatent").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateCancel).HasColumnName(@"DateCancel").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateResh).HasColumnName(@"DateResh").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NalogPsnPeriod).HasColumnName(@"NalogPsnPeriod").HasColumnType("decimal").IsOptional().HasPrecision(28,2);
            Property(x => x.NalogFact).HasColumnName(@"NalogFact").HasColumnType("decimal").IsOptional().HasPrecision(28,2);
            Property(x => x.AvgPeople).HasColumnName(@"AvgPeople").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CountMouth).HasColumnName(@"CountMouth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Model).HasColumnName(@"Model").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Weight).HasColumnName(@"Weight").HasColumnType("decimal").IsOptional().HasPrecision(28,2);
            Property(x => x.NumberSeqts).HasColumnName(@"NumberSeqts").HasColumnType("int").IsOptional();
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IndexId).HasColumnName(@"IndexId").HasColumnType("bigint").IsOptional();
        }
    }

    // Book
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BookConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Book>
    {
        public BookConfiguration()
            : this("dbo")
        {
        }

        public BookConfiguration(string schema)
        {
            ToTable("Book", schema);
            HasKey(x => x.IdBook);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdBook).HasColumnName(@"IdBook").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsBookSalesParse).HasColumnName(@"IsBookSalesParse").HasColumnType("bit").IsRequired();
            Property(x => x.IsBookPurchase).HasColumnName(@"IsBookPurchase").HasColumnType("bit").IsRequired();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.SummBookPurchase).HasColumnName(@"SummBookPurchase").HasColumnType("float").IsRequired();
            Property(x => x.SummBookSales).HasColumnName(@"SummBookSales").HasColumnType("float").IsRequired();
            Property(x => x.SummNds).HasColumnName(@"SummNds").HasColumnType("float").IsRequired();
            Property(x => x.SummTotal).HasColumnName(@"SummTotal").HasColumnType("float").IsRequired();
            Property(x => x.WeightProduct).HasColumnName(@"WeightProduct").HasColumnType("int").IsRequired();
            Property(x => x.NameOperator).HasColumnName(@"NameOperator").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CodeTaxCom).HasColumnName(@"CodeTaxCom").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IpAdres).HasColumnName(@"IpAdres").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Telephone).HasColumnName(@"Telephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.UlFace).WithMany(b => b.Books).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_Book_UlFace
        }
    }

    // BookPurchase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BookPurchaseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BookPurchase>
    {
        public BookPurchaseConfiguration()
            : this("dbo")
        {
        }

        public BookPurchaseConfiguration(string schema)
        {
            ToTable("BookPurchase", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdBook).HasColumnName(@"IdBook").HasColumnType("bigint").IsRequired();
            Property(x => x.F).HasColumnName(@"F").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.K).HasColumnName(@"K").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.C).HasColumnName(@"C").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Str005).HasColumnName(@"Str005").HasColumnType("int").IsRequired();
            Property(x => x.Str010).HasColumnName(@"Str010").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str020).HasColumnName(@"Str020").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str030).HasColumnName(@"Str030").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str040).HasColumnName(@"Str040").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str050).HasColumnName(@"Str050").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str060).HasColumnName(@"Str060").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str070).HasColumnName(@"Str070").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str080).HasColumnName(@"Str080").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str090).HasColumnName(@"Str090").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str120130).HasColumnName(@"Str120130").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Inn100).HasColumnName(@"Inn100").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Kpp100).HasColumnName(@"Kpp100").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameCustomer100).HasColumnName(@"NameCustomer100").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Inn110).HasColumnName(@"Inn110").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Kpp110).HasColumnName(@"Kpp110").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameMediator110).HasColumnName(@"NameMediator110").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Str140).HasColumnName(@"Str140").HasColumnType("int").IsRequired();
            Property(x => x.Str150).HasColumnName(@"Str150").HasColumnType("float").IsRequired();
            Property(x => x.Str160).HasColumnName(@"Str160").HasColumnType("float").IsRequired();
            Property(x => x.Str170).HasColumnName(@"Str170").HasColumnType("float").IsRequired();
            Property(x => x.Str175).HasColumnName(@"Str175").HasColumnType("float").IsRequired();
            Property(x => x.Str180).HasColumnName(@"Str180").HasColumnType("float").IsRequired();
            Property(x => x.Str190).HasColumnName(@"Str190").HasColumnType("float").IsRequired();
            Property(x => x.Str200).HasColumnName(@"Str200").HasColumnType("float").IsRequired();
            Property(x => x.Str205).HasColumnName(@"Str205").HasColumnType("float").IsRequired();
            Property(x => x.Str210).HasColumnName(@"Str210").HasColumnType("float").IsRequired();
            Property(x => x.Str220).HasColumnName(@"Str220").HasColumnType("float").IsRequired();
            Property(x => x.CountRnp).HasColumnName(@"CountRnp").HasColumnType("int").IsRequired();
            Property(x => x.Sf).HasColumnName(@"Sf").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ListDop).HasColumnName(@"ListDop").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.CodeProduct).HasColumnName(@"CodeProduct").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Book).WithMany(b => b.BookPurchases).HasForeignKey(c => c.IdBook).WillCascadeOnDelete(false); // FK_BookPurchase_Book
        }
    }

    // BookSales
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BookSaleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BookSale>
    {
        public BookSaleConfiguration()
            : this("dbo")
        {
        }

        public BookSaleConfiguration(string schema)
        {
            ToTable("BookSales", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdBook).HasColumnName(@"IdBook").HasColumnType("bigint").IsRequired();
            Property(x => x.F).HasColumnName(@"F").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.K).HasColumnName(@"K").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.C).HasColumnName(@"C").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Str005).HasColumnName(@"Str005").HasColumnType("int").IsRequired();
            Property(x => x.Str010).HasColumnName(@"Str010").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str020).HasColumnName(@"Str020").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Str030).HasColumnName(@"Str030").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str040).HasColumnName(@"Str040").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str050).HasColumnName(@"Str050").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str060).HasColumnName(@"Str060").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str070).HasColumnName(@"Str070").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str080).HasColumnName(@"Str080").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Str090).HasColumnName(@"Str090").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Str100110).HasColumnName(@"Str100110").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Str120).HasColumnName(@"Str120").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn130).HasColumnName(@"Inn130").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Kpp130).HasColumnName(@"Kpp130").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameSale130).HasColumnName(@"NameSale130").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Inn140).HasColumnName(@"Inn140").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Kpp140).HasColumnName(@"Kpp140").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameMediator140).HasColumnName(@"NameMediator140").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Str160).HasColumnName(@"Str160").HasColumnType("int").IsRequired();
            Property(x => x.Str170).HasColumnName(@"Str170").HasColumnType("float").IsRequired();
            Property(x => x.Str180).HasColumnName(@"Str180").HasColumnType("float").IsRequired();
            Property(x => x.CountRnp).HasColumnName(@"CountRnp").HasColumnType("int").IsRequired();
            Property(x => x.Sf).HasColumnName(@"Sf").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ListDop).HasColumnName(@"ListDop").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Book).WithMany(b => b.BookSales).HasForeignKey(c => c.IdBook).WillCascadeOnDelete(false); // FK_BookSales_Book
        }
    }

    // BranchUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BranchUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BranchUlFace>
    {
        public BranchUlFaceConfiguration()
            : this("dbo")
        {
        }

        public BranchUlFaceConfiguration(string schema)
        {
            ToTable("BranchUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DataCreateBranch).HasColumnName(@"DataCreateBranch").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataCloseBranch).HasColumnName(@"DataCloseBranch").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IndexAddress).HasColumnName(@"IndexAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.RegionAddress).HasColumnName(@"RegionAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DistrictAddress).HasColumnName(@"DistrictAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TownAddress).HasColumnName(@"TownAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.LocalityAddress).HasColumnName(@"LocalityAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StreetAddress).HasColumnName(@"StreetAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.HouseAddress).HasColumnName(@"HouseAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.BodyAddress).HasColumnName(@"BodyAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ApartmentAddress).HasColumnName(@"ApartmentAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.BranchUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_BranchUlFace
        }
    }

    // CashBankAllUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashBankAllUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CashBankAllUlFace>
    {
        public CashBankAllUlFaceConfiguration()
            : this("dbo")
        {
        }

        public CashBankAllUlFaceConfiguration(string schema)
        {
            ToTable("CashBankAllUlFace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateWay).HasColumnName(@"DateWay").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeNo).HasColumnName(@"CodeNo").HasColumnType("int").IsOptional();
            Property(x => x.DatePriem).HasColumnName(@"DatePriem").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NameBank).HasColumnName(@"NameBank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Bik).HasColumnName(@"Bik").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.InnBank).HasColumnName(@"InnBank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.KppBank).HasColumnName(@"KppBank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NumberCash).HasColumnName(@"NumberCash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Cash).HasColumnName(@"Cash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateStartPeriod).HasColumnName(@"DateStartPeriod").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishPeriod).HasColumnName(@"DateFinishPeriod").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CashScoreStartPeriod).HasColumnName(@"CashScoreStartPeriod").HasColumnType("float").IsOptional();
            Property(x => x.CashScoreFinishPeriod).HasColumnName(@"CashScoreFinishPeriod").HasColumnType("float").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.CashBankAllUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_CashBankAllUlFace
        }
    }

    // CashUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CashUlFace>
    {
        public CashUlFaceConfiguration()
            : this("dbo")
        {
        }

        public CashUlFaceConfiguration(string schema)
        {
            ToTable("CashUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum, x.NameFull, x.CashNumber });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CashNumber).HasColumnName(@"CashNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DataOpenCash).HasColumnName(@"DataOpenCash").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataClosedCash).HasColumnName(@"DataClosedCash").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.TypeCash).HasColumnName(@"TypeCash").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.CashUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_CashUlFace
        }
    }

    // CounterpartyCashBank
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CounterpartyCashBankConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CounterpartyCashBank>
    {
        public CounterpartyCashBankConfiguration()
            : this("dbo")
        {
        }

        public CounterpartyCashBankConfiguration(string schema)
        {
            ToTable("CounterpartyCashBank", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.TypeCash).HasColumnName(@"TypeCash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PriznakCash).HasColumnName(@"PriznakCash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NumberCash).HasColumnName(@"NumberCash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Currency).HasColumnName(@"Currency").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CorrespondentAccountNumberCounterparty).HasColumnName(@"CorrespondentAccountNumberCounterparty").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameBankCounterparty).HasColumnName(@"NameBankCounterparty").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.BikBankCounterparty).HasColumnName(@"BikBankCounterparty").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.InnBankCounterparty).HasColumnName(@"InnBankCounterparty").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.KppBankCounterparty).HasColumnName(@"KppBankCounterparty").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.CashCounterparty).HasColumnName(@"CashCounterparty").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DateOperation).HasColumnName(@"DateOperation").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.SurOperation).HasColumnName(@"SurOperation").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameOperation).HasColumnName(@"NameOperation").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.InnOperation).HasColumnName(@"InnOperation").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.KppOperation).HasColumnName(@"KppOperation").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.OkvedOperation).HasColumnName(@"OkvedOperation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NumberDocOperation).HasColumnName(@"NumberDocOperation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.VieDocOperation).HasColumnName(@"VieDocOperation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ExpenseSumOperationUsa).HasColumnName(@"ExpenseSumOperationUSA").HasColumnType("float").IsRequired();
            Property(x => x.ExpenseSumOperationRu).HasColumnName(@"ExpenseSumOperationRU").HasColumnType("float").IsRequired();
            Property(x => x.ComingSumOperationUsa).HasColumnName(@"ComingSumOperationUSA").HasColumnType("float").IsRequired();
            Property(x => x.ComingSumOperationRu).HasColumnName(@"ComingSumOperationRU").HasColumnType("float").IsRequired();
            Property(x => x.TypeSumOperation).HasColumnName(@"TypeSumOperation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.TargetSumOperation).HasColumnName(@"TargetSumOperation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.UlFace).WithMany(b => b.CounterpartyCashBanks).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_CounterpartyCashBank_UlFace
        }
    }

    // DataAreaParameters
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DataAreaParameterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DataAreaParameter>
    {
        public DataAreaParameterConfiguration()
            : this("dbo")
        {
        }

        public DataAreaParameterConfiguration(string schema)
        {
            ToTable("DataAreaParameters", schema);
            HasKey(x => x.IdGridParameters);

            Property(x => x.IdGridParameters).HasColumnName(@"IdGridParameters").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDataArea).HasColumnName(@"IdDataArea").HasColumnType("int").IsOptional();
            Property(x => x.NameParameters).HasColumnName(@"NameParameters").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.FindNameMemo).HasColumnName(@"FindNameMemo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IndexParameters).HasColumnName(@"IndexParameters").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ParametersGrid).HasColumnName(@"ParametersGrid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.TreeDataArea).WithMany(b => b.DataAreaParameters).HasForeignKey(c => c.IdDataArea).WillCascadeOnDelete(false); // FK_TreeDataArea_DataAreaParameters
        }
    }

    // Declaration3Ndfl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Declaration3NdflConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Declaration3Ndfl>
    {
        public Declaration3NdflConfiguration()
            : this("dbo")
        {
        }

        public Declaration3NdflConfiguration(string schema)
        {
            ToTable("Declaration3Ndfl", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.RegNumDecl, x.IdObject });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InnNp).HasColumnName(@"InnNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.SummR).HasColumnName(@"SummR").HasColumnType("float").IsOptional();
            Property(x => x.SummP).HasColumnName(@"SummP").HasColumnType("float").IsOptional();
            Property(x => x.SummV).HasColumnName(@"SummV").HasColumnType("float").IsOptional();
            Property(x => x.SummPv).HasColumnName(@"SummPV").HasColumnType("float").IsOptional();
            Property(x => x.SummI).HasColumnName(@"SummI").HasColumnType("float").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
        }
    }

    // Declaration3NdflFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Declaration3NdflFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Declaration3NdflFl>
    {
        public Declaration3NdflFlConfiguration()
            : this("dbo")
        {
        }

        public Declaration3NdflFlConfiguration(string schema)
        {
            ToTable("Declaration3NdflFl", schema);
            HasKey(x => x.RegNumDecl);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsOptional();
            Property(x => x.ColorType1).HasColumnName(@"ColorType1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ColorType2).HasColumnName(@"ColorType2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ColorType3).HasColumnName(@"ColorType3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ColorType4).HasColumnName(@"ColorType4").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ColorType5).HasColumnName(@"ColorType5").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ColorType6).HasColumnName(@"ColorType6").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("bigint").IsRequired();
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InnNp).HasColumnName(@"InnNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.SummR).HasColumnName(@"SummR").HasColumnType("float").IsOptional();
            Property(x => x.SummP).HasColumnName(@"SummP").HasColumnType("float").IsOptional();
            Property(x => x.SummV).HasColumnName(@"SummV").HasColumnType("float").IsOptional();
            Property(x => x.SummPv).HasColumnName(@"SummPV").HasColumnType("float").IsOptional();
            Property(x => x.SummI).HasColumnName(@"SummI").HasColumnType("float").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FlFace).WithMany(b => b.Declaration3NdflFl).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_Declaration3NdflFl_FlFace
        }
    }

    // DeclarationAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationAll>
    {
        public DeclarationAllConfiguration()
            : this("dbo")
        {
        }

        public DeclarationAllConfiguration(string schema)
        {
            ToTable("DeclarationAll", schema);
            HasKey(x => x.RegNumDecl);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Psumm).HasColumnName(@"Psumm").HasColumnType("float").IsRequired();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.VidDoc).HasColumnName(@"VidDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NumberKor).HasColumnName(@"NumberKor").HasColumnType("int").IsRequired();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // DeclarationData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationDataConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationData>
    {
        public DeclarationDataConfiguration()
            : this("dbo")
        {
        }

        public DeclarationDataConfiguration(string schema)
        {
            ToTable("DeclarationData", schema);
            HasKey(x => new { x.Id, x.RegNumDecl });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeString).HasColumnName(@"CodeString").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameParametr).HasColumnName(@"NameParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeParametr).HasColumnName(@"CodeParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataFace).HasColumnName(@"DataFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataInspector).HasColumnName(@"DataInspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Error).HasColumnName(@"Error").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DeclarationUl).WithMany(b => b.DeclarationDatas).HasForeignKey(c => c.RegNumDecl).WillCascadeOnDelete(false); // FK_DeclarationData_DeclarationUl
        }
    }

    // DeclarationData3NdflFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationData3NdflFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationData3NdflFl>
    {
        public DeclarationData3NdflFlConfiguration()
            : this("dbo")
        {
        }

        public DeclarationData3NdflFlConfiguration(string schema)
        {
            ToTable("DeclarationData3NdflFl", schema);
            HasKey(x => new { x.Id, x.RegNumDecl });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeString).HasColumnName(@"CodeString").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameParametr).HasColumnName(@"NameParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeParametr).HasColumnName(@"CodeParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataFace).HasColumnName(@"DataFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataInspector).HasColumnName(@"DataInspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Error).HasColumnName(@"Error").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Declaration3NdflFl).WithMany(b => b.DeclarationData3NdflFl).HasForeignKey(c => c.RegNumDecl).WillCascadeOnDelete(false); // FK_DeclarationData3NdflFl_Declaration3NdflFl
        }
    }

    // DeclarationDataAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationDataAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationDataAll>
    {
        public DeclarationDataAllConfiguration()
            : this("dbo")
        {
        }

        public DeclarationDataAllConfiguration(string schema)
        {
            ToTable("DeclarationDataAll", schema);
            HasKey(x => new { x.Id, x.RegNumDecl });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeString).HasColumnName(@"CodeString").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameParametr).HasColumnName(@"NameParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeParametr).HasColumnName(@"CodeParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataFace).HasColumnName(@"DataFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataInspector).HasColumnName(@"DataInspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Error).HasColumnName(@"Error").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DeclarationAll).WithMany(b => b.DeclarationDataAlls).HasForeignKey(c => c.RegNumDecl).WillCascadeOnDelete(false); // FK_DeclarationDataAll_DeclarationAll
        }
    }

    // DeclarationDataFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationDataFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationDataFl>
    {
        public DeclarationDataFlConfiguration()
            : this("dbo")
        {
        }

        public DeclarationDataFlConfiguration(string schema)
        {
            ToTable("DeclarationDataFl", schema);
            HasKey(x => new { x.Id, x.RegNumDecl });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeString).HasColumnName(@"CodeString").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameParametr).HasColumnName(@"NameParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeParametr).HasColumnName(@"CodeParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataFace).HasColumnName(@"DataFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataInspector).HasColumnName(@"DataInspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Error).HasColumnName(@"Error").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DeclarationFl).WithMany(b => b.DeclarationDataFls).HasForeignKey(c => c.RegNumDecl).WillCascadeOnDelete(false); // FK_DeclarationDataFl_DeclarationFl
        }
    }

    // DeclarationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationFl>
    {
        public DeclarationFlConfiguration()
            : this("dbo")
        {
        }

        public DeclarationFlConfiguration(string schema)
        {
            ToTable("DeclarationFl", schema);
            HasKey(x => x.RegNumDecl);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsOptional();
            Property(x => x.ColorType2).HasColumnName(@"ColorType2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Psumm).HasColumnName(@"Psumm").HasColumnType("float").IsRequired();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NumberKor).HasColumnName(@"NumberKor").HasColumnType("int").IsRequired();
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InnNp).HasColumnName(@"InnNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SignOfDevialion).HasColumnName(@"SignOfDevialion").HasColumnType("bit").IsRequired();
            Property(x => x.SummSignOfDevialion).HasColumnName(@"SummSignOfDevialion").HasColumnType("float").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FlFace).WithMany(b => b.DeclarationFls).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_DeclarationFl_FlFace
        }
    }

    // DeclarationUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationUlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationUl>
    {
        public DeclarationUlConfiguration()
            : this("dbo")
        {
        }

        public DeclarationUlConfiguration(string schema)
        {
            ToTable("DeclarationUl", schema);
            HasKey(x => x.RegNumDecl);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Psumm).HasColumnName(@"Psumm").HasColumnType("float").IsRequired();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.VidDoc).HasColumnName(@"VidDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NumberKor).HasColumnName(@"NumberKor").HasColumnType("int").IsRequired();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.DeclarationUls).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_DeclarationUl_UlFace
        }
    }

    // DeliveryDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeliveryDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeliveryDocument>
    {
        public DeliveryDocumentConfiguration()
            : this("dbo")
        {
        }

        public DeliveryDocumentConfiguration(string schema)
        {
            ToTable("DeliveryDocument", schema);
            HasKey(x => new { x.LogicsButton, x.RegNumber, x.LoginUser, x.DateDocument, x.DateSend, x.DateDelivery, x.Number, x.Inn, x.NameDeclaration, x.God });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateSend).HasColumnName(@"DateSend").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateDelivery).HasColumnName(@"DateDelivery").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeFace).HasColumnName(@"TypeFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.RegNumDeclarationDelivery).HasColumnName(@"RegNumDeclarationDelivery").HasColumnType("bigint").IsOptional();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameDeclaration).HasColumnName(@"NameDeclaration").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // DepartamentOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DepartamentOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DepartamentOtdel>
    {
        public DepartamentOtdelConfiguration()
            : this("dbo")
        {
        }

        public DepartamentOtdelConfiguration(string schema)
        {
            ToTable("DepartamentOtdel", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdSender).HasColumnName(@"IdSender").HasColumnType("int").IsOptional();
            Property(x => x.NameDepartament).HasColumnName(@"NameDepartament").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameDepartamentActiveDerectory).HasColumnName(@"NameDepartamentActiveDerectory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.StatusFace).HasColumnName(@"StatusFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Office).HasColumnName(@"Office").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Telephon).HasColumnName(@"Telephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.SenderTaxJournalOkp2).WithMany(b => b.DepartamentOtdels).HasForeignKey(c => c.IdSender).WillCascadeOnDelete(false); // FK_SenderTaxJournalOkp2_DepartamentOtdel
        }
    }

    // DepartmentOtdelResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DepartmentOtdelResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DepartmentOtdelResponse>
    {
        public DepartmentOtdelResponseConfiguration()
            : this("dbo")
        {
        }

        public DepartmentOtdelResponseConfiguration(string schema)
        {
            ToTable("DepartmentOtdelResponse", schema);
            HasKey(x => x.IdDepartment);

            Property(x => x.IdDepartment).HasColumnName(@"IdDepartment").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdSenderResponse).HasColumnName(@"IdSenderResponse").HasColumnType("int").IsRequired();
            Property(x => x.IdTemplateResponse).HasColumnName(@"IdTemplateResponse").HasColumnType("int").IsRequired();
            Property(x => x.NameDepartment).HasColumnName(@"NameDepartment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameDepartmentActiveDirectory).HasColumnName(@"NameDepartmentActiveDirectory").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TemplateDepartment).HasColumnName(@"TemplateDepartment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Office).HasColumnName(@"Office").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.SenderResponse).WithMany(b => b.DepartmentOtdelResponses).HasForeignKey(c => c.IdSenderResponse).WillCascadeOnDelete(false); // FK_SenderResponse_DepartmentOtdelResponse
            HasRequired(a => a.TemplateModelResponse).WithMany(b => b.DepartmentOtdelResponses).HasForeignKey(c => c.IdTemplateResponse).WillCascadeOnDelete(false); // FK_TemplateModelResponse_DepartmentOtdelResponse
        }
    }

    // Derector
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DerectorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Derector>
    {
        public DerectorConfiguration()
            : this("dbo")
        {
        }

        public DerectorConfiguration(string schema)
        {
            ToTable("Derector", schema);
            HasKey(x => x.IdDerector);

            Property(x => x.IdDerector).HasColumnName(@"IdDerector").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameDerector).HasColumnName(@"NameDerector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // DirectoryDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DirectoryDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DirectoryDocument>
    {
        public DirectoryDocumentConfiguration()
            : this("dbo")
        {
        }

        public DirectoryDocumentConfiguration(string schema)
        {
            ToTable("DirectoryDocument", schema);
            HasKey(x => x.IdDocumentDirectory);

            Property(x => x.IdDocumentDirectory).HasColumnName(@"IdDocumentDirectory").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameDocumentDataBase).HasColumnName(@"NameDocumentDataBase").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // DocPatent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocPatentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocPatent>
    {
        public DocPatentConfiguration()
            : this("dbo")
        {
        }

        public DocPatentConfiguration(string schema)
        {
            ToTable("DocPatent", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired();
            Property(x => x.ActualPatent).HasColumnName(@"ActualPatent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.KodePr).HasColumnName(@"KodePr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.RegNum).HasColumnName(@"RegNum").HasColumnType("bigint").IsOptional();
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("bigint").IsOptional();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("int").IsOptional();
            Property(x => x.VidDoc).HasColumnName(@"VidDoc").HasColumnType("int").IsOptional();
            Property(x => x.NameDoc).HasColumnName(@"NameDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreatePatent).HasColumnName(@"DateCreatePatent").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateIn).HasColumnName(@"DateIn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateOutTksMail).HasColumnName(@"DateOutTksMail").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeIfns).HasColumnName(@"CodeIfns").HasColumnType("int").IsRequired();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdDoc).HasColumnName(@"IdDoc").HasColumnType("bigint").IsRequired();
            Property(x => x.IdWrite).HasColumnName(@"IdWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.IdIn).HasColumnName(@"IdIn").HasColumnType("int").IsRequired();
            Property(x => x.IdInIst).HasColumnName(@"IdInIst").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Patent).WithMany(b => b.DocPatents).HasForeignKey(c => c.IdPatent); // FK_DocPatent_Patent
        }
    }

    // Documen2NDFL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Documen2NdflConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Documen2Ndfl>
    {
        public Documen2NdflConfiguration()
            : this("dbo")
        {
        }

        public Documen2NdflConfiguration(string schema)
        {
            ToTable("Documen2NDFL", schema);
            HasKey(x => x.IdDoc);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDoc).HasColumnName(@"IdDoc").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdFile).HasColumnName(@"IdFile").HasColumnType("bigint").IsOptional();
            Property(x => x.Ifns).HasColumnName(@"Ifns").HasColumnType("int").IsOptional();
            Property(x => x.Yars).HasColumnName(@"Yars").HasColumnType("int").IsOptional();
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("int").IsOptional();
            Property(x => x.Inn).HasColumnName(@"INN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FName).HasColumnName(@"FName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IName).HasColumnName(@"IName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.OName).HasColumnName(@"OName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fio).HasColumnName(@"FIO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.SeriaNumber).HasColumnName(@"SeriaNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateNameUser).HasColumnName(@"DateNameUser").HasColumnType("date").IsOptional();
            Property(x => x.InnOrganization).HasColumnName(@"InnOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameOrganization).HasColumnName(@"NameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsOptional();
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("bigint").IsOptional();
            Property(x => x.InnUtoch).HasColumnName(@"INNUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FNameUtoch).HasColumnName(@"FNameUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.INameUtoch).HasColumnName(@"INameUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ONameUtoch).HasColumnName(@"ONameUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateNameUserUtoch).HasColumnName(@"DateNameUserUtoch").HasColumnType("date").IsOptional();
            Property(x => x.StatusSved).HasColumnName(@"StatusSved").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ErrorNameStatus).HasColumnName(@"ErrorNameStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Documen2NDFLIdentification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Documen2NdflIdentificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Documen2NdflIdentification>
    {
        public Documen2NdflIdentificationConfiguration()
            : this("dbo")
        {
        }

        public Documen2NdflIdentificationConfiguration(string schema)
        {
            ToTable("Documen2NDFLIdentification", schema);
            HasKey(x => new { x.LogicsButton, x.IdDoc });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdDoc).HasColumnName(@"IdDoc").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdFile).HasColumnName(@"IdFile").HasColumnType("bigint").IsOptional();
            Property(x => x.Ifns).HasColumnName(@"Ifns").HasColumnType("int").IsOptional();
            Property(x => x.Yars).HasColumnName(@"Yars").HasColumnType("int").IsOptional();
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("int").IsOptional();
            Property(x => x.Inn).HasColumnName(@"INN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FName).HasColumnName(@"FName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IName).HasColumnName(@"IName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.OName).HasColumnName(@"OName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fio).HasColumnName(@"FIO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.SeriaNumber).HasColumnName(@"SeriaNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateNameUser).HasColumnName(@"DateNameUser").HasColumnType("date").IsOptional();
            Property(x => x.InnOrganization).HasColumnName(@"InnOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameOrganization).HasColumnName(@"NameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsOptional();
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("bigint").IsOptional();
            Property(x => x.InnUtoch).HasColumnName(@"INNUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FNameUtoch).HasColumnName(@"FNameUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.INameUtoch).HasColumnName(@"INameUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ONameUtoch).HasColumnName(@"ONameUtoch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateNameUserUtoch).HasColumnName(@"DateNameUserUtoch").HasColumnType("date").IsOptional();
            Property(x => x.StatusSved).HasColumnName(@"StatusSved").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ErrorNameStatus).HasColumnName(@"ErrorNameStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // DocumentContainer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentContainerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentContainer>
    {
        public DocumentContainerConfiguration()
            : this("dbo")
        {
        }

        public DocumentContainerConfiguration(string schema)
        {
            ToTable("DocumentContainer", schema);
            HasKey(x => x.IdContainer);

            Property(x => x.IdContainer).HasColumnName(@"IdContainer").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BarcodeContainer).HasColumnName(@"BarcodeContainer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.CountCurrent).HasColumnName(@"CountCurrent").HasColumnType("int").IsRequired();
            Property(x => x.CountDocumentMin).HasColumnName(@"CountDocumentMin").HasColumnType("int").IsRequired();
            Property(x => x.CountDocumentMax).HasColumnName(@"CountDocumentMax").HasColumnType("int").IsRequired();
            Property(x => x.IsFinishContainer).HasColumnName(@"IsFinishContainer").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // DocumentInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentInventory>
    {
        public DocumentInventoryConfiguration()
            : this("dbo")
        {
        }

        public DocumentInventoryConfiguration(string schema)
        {
            ToTable("DocumentInventory", schema);
            HasKey(x => x.IdDocument);

            Property(x => x.IdDocument).HasColumnName(@"IdDocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDocGrn).HasColumnName(@"IdDocGrn").HasColumnType("int").IsRequired();
            Property(x => x.IdDocumentDirectory).HasColumnName(@"IdDocumentDirectory").HasColumnType("int").IsRequired();
            Property(x => x.IdInfo).HasColumnName(@"IdInfo").HasColumnType("int").IsOptional();
            Property(x => x.CountPage).HasColumnName(@"CountPage").HasColumnType("int").IsRequired();
            Property(x => x.GuidDocument).HasColumnName(@"GuidDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StateDocument).HasColumnName(@"StateDocument").HasColumnType("bit").IsRequired();
            Property(x => x.IdStatusDocument).HasColumnName(@"IdStatusDocument").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.InfoDocument).WithMany(b => b.DocumentInventories).HasForeignKey(c => c.IdInfo).WillCascadeOnDelete(false); // FK_DocumentInventory_InfoDocument
            HasRequired(a => a.DirectoryDocument).WithMany(b => b.DocumentInventories).HasForeignKey(c => c.IdDocumentDirectory).WillCascadeOnDelete(false); // FK_DocumentInventory_DirectoryDocument
            HasRequired(a => a.GrnInventory).WithMany(b => b.DocumentInventories).HasForeignKey(c => c.IdDocGrn).WillCascadeOnDelete(false); // FK_DocumentInventory_GrnInventory
            HasRequired(a => a.StatusDocument).WithMany(b => b.DocumentInventories).HasForeignKey(c => c.IdStatusDocument).WillCascadeOnDelete(false); // FK_DocumentInventory_StatusDocument
        }
    }

    // DocumentOwnershipImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentOwnershipImZmTrFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentOwnershipImZmTrFl>
    {
        public DocumentOwnershipImZmTrFlConfiguration()
            : this("dbo")
        {
        }

        public DocumentOwnershipImZmTrFlConfiguration(string schema)
        {
            ToTable("DocumentOwnershipImZmTrFl", schema);
            HasKey(x => new { x.Id, x.FidObject });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FidObject).HasColumnName(@"FidObject").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NumberDocument).HasColumnName(@"NumberDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeDocument).HasColumnName(@"CodeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CashDeal).HasColumnName(@"CashDeal").HasColumnType("float").IsOptional();
            Property(x => x.CashText).HasColumnName(@"CashText").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FactOfOwnershipImZmTrFl).WithMany(b => b.DocumentOwnershipImZmTrFls).HasForeignKey(c => c.FidObject).WillCascadeOnDelete(false); // FK_DocumentOwnershipImZmTrFl_FactOfOwnershipImZmTrFl
        }
    }

    // EasJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EasJournalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EasJournal>
    {
        public EasJournalConfiguration()
            : this("dbo")
        {
        }

        public EasJournalConfiguration(string schema)
        {
            ToTable("EasJournal", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Color1).HasColumnName(@"Color1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("bigint").IsRequired();
            Property(x => x.RegNumberZ).HasColumnName(@"RegNumberZ").HasColumnType("bigint").IsOptional();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameKnd).HasColumnName(@"NameKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameFile).HasColumnName(@"NameFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // ErrorFlRegistration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ErrorFlRegistrationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ErrorFlRegistration>
    {
        public ErrorFlRegistrationConfiguration()
            : this("dbo")
        {
        }

        public ErrorFlRegistrationConfiguration(string schema)
        {
            ToTable("ErrorFlRegistration", schema);
            HasKey(x => x.IdError);

            Property(x => x.IdError).HasColumnName(@"IdError").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MessageError).HasColumnName(@"MessageError").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // EventProcessError
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EventProcessErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EventProcessError>
    {
        public EventProcessErrorConfiguration()
            : this("dbo")
        {
        }

        public EventProcessErrorConfiguration(string schema)
        {
            ToTable("EventProcessError", schema);
            HasKey(x => x.IdProcess);

            Property(x => x.IdProcess).HasColumnName(@"IdProcess").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FullKeyProcess).HasColumnName(@"FullKeyProcess").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
            Property(x => x.IdStatusEvent).HasColumnName(@"IdStatusEvent").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.StatusEvent).WithMany(b => b.EventProcessErrors).HasForeignKey(c => c.IdStatusEvent).WillCascadeOnDelete(false); // FK_EventProcessError_StatusEvent
        }
    }

    // FaceModelTemplateGetPost
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FaceModelTemplateGetPostConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FaceModelTemplateGetPost>
    {
        public FaceModelTemplateGetPostConfiguration()
            : this("dbo")
        {
        }

        public FaceModelTemplateGetPostConfiguration(string schema)
        {
            ToTable("FaceModelTemplateGetPost", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired();
            Property(x => x.IdTree).HasColumnName(@"IdTree").HasColumnType("int").IsRequired();
            Property(x => x.StatusModel).HasColumnName(@"StatusModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.AddUlFace).WithMany(b => b.FaceModelTemplateGetPosts).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_AddUlFace_FaceModelTemplateGetPost
            HasRequired(a => a.Template).WithMany(b => b.FaceModelTemplateGetPosts).HasForeignKey(c => c.IdTemplate).WillCascadeOnDelete(false); // FK_Template_FaceModelTemplateGetPost
            HasRequired(a => a.Tree).WithMany(b => b.FaceModelTemplateGetPosts).HasForeignKey(c => c.IdTree).WillCascadeOnDelete(false); // FK_Tree_FaceModelTemplateGetPost
        }
    }

    // FaceRegistryReference
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FaceRegistryReferenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FaceRegistryReference>
    {
        public FaceRegistryReferenceConfiguration()
            : this("dbo")
        {
        }

        public FaceRegistryReferenceConfiguration(string schema)
        {
            ToTable("FaceRegistryReference", schema);
            HasKey(x => new { x.LogicsButton, x.IdFace, x.TypeFaceBool, x.TypeFace, x.InnFace, x.IsState1, x.IsState2 });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdFace).HasColumnName(@"IdFace").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TypeFaceBool).HasColumnName(@"TypeFaceBool").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeFace).HasColumnName(@"TypeFace").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InnFace).HasColumnName(@"InnFace").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeNo).HasColumnName(@"CodeNo").HasColumnType("int").IsOptional();
            Property(x => x.TypeObjectModel).HasColumnName(@"TypeObjectModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsState1).HasColumnName(@"IsState1").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateState1).HasColumnName(@"DateState1").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsState2).HasColumnName(@"IsState2").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateState2).HasColumnName(@"DateState2").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsErrorMessage).HasColumnName(@"IsErrorMessage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateModification).HasColumnName(@"DateModification").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FactOfOwnershipImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FactOfOwnershipImZmTrFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FactOfOwnershipImZmTrFl>
    {
        public FactOfOwnershipImZmTrFlConfiguration()
            : this("dbo")
        {
        }

        public FactOfOwnershipImZmTrFlConfiguration(string schema)
        {
            ToTable("FactOfOwnershipImZmTrFl", schema);
            HasKey(x => x.FidObject);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired();
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired();
            Property(x => x.FidObject).HasColumnName(@"FidObject").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FidFl).HasColumnName(@"FidFl").HasColumnType("bigint").IsRequired();
            Property(x => x.FidFactOwnership).HasColumnName(@"FidFactOwnership").HasColumnType("bigint").IsRequired();
            Property(x => x.CodeIfns).HasColumnName(@"CodeIfns").HasColumnType("int").IsOptional();
            Property(x => x.CadastralNumber).HasColumnName(@"CadastralNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateStartRight).HasColumnName(@"DateStartRight").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStartFinish).HasColumnName(@"DateStartFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.ActualCadastralCash).HasColumnName(@"ActualCadastralCash").HasColumnType("float").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FlFace).WithMany(b => b.FactOfOwnershipImZmTrFls).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_FactOfOwnershipImZmTrFl_FlFace
            HasRequired(a => a.TypeObject).WithMany(b => b.FactOfOwnershipImZmTrFls).HasForeignKey(c => c.IdObject).WillCascadeOnDelete(false); // FK_TypeObject_FactOfOwnershipImZmTrFl
        }
    }

    // Fields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Field>
    {
        public FieldConfiguration()
            : this("dbo")
        {
        }

        public FieldConfiguration(string schema)
        {
            ToTable("Fields", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTree).HasColumnName(@"IdTree").HasColumnType("int").IsRequired();
            Property(x => x.Fields).HasColumnName(@"Fields").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tree).WithMany(b => b.Fields).HasForeignKey(c => c.IdTree).WillCascadeOnDelete(false); // FK_Tree_Fields
        }
    }

    // FlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FlFace>
    {
        public FlFaceConfiguration()
            : this("dbo")
        {
        }

        public FlFaceConfiguration(string schema)
        {
            ToTable("FlFace", schema);
            HasKey(x => x.IdFl);

            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFl).HasColumnName(@"NameFl").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FlFaceMain
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFaceMainConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FlFaceMain>
    {
        public FlFaceMainConfiguration()
            : this("dbo")
        {
        }

        public FlFaceMainConfiguration(string schema)
        {
            ToTable("FlFaceMain", schema);
            HasKey(x => x.IdFl);

            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.OgrnIp).HasColumnName(@"OgrnIp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FlFaceMainRegistration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFaceMainRegistrationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FlFaceMainRegistration>
    {
        public FlFaceMainRegistrationConfiguration()
            : this("dbo")
        {
        }

        public FlFaceMainRegistrationConfiguration(string schema)
        {
            ToTable("FlFaceMainRegistration", schema);
            HasKey(x => x.IdFl);

            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.F).HasColumnName(@"F").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.I).HasColumnName(@"I").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.O).HasColumnName(@"O").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.PlaceBirth).HasColumnName(@"PlaceBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeSd).HasColumnName(@"CodeSd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SeriaDoc).HasColumnName(@"SeriaDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NumberDoc).HasColumnName(@"NumberDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateCreateDoc).HasColumnName(@"DateCreateDoc").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.WhoDoc).HasColumnName(@"WhoDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodePodr).HasColumnName(@"CodePodr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Citizenship).HasColumnName(@"Citizenship").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdError).HasColumnName(@"IdError").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ErrorFlRegistration).WithMany(b => b.FlFaceMainRegistrations).HasForeignKey(c => c.IdError).WillCascadeOnDelete(false); // FK_FlFaceMainRegistration_ErrorFlRegistration
            HasOptional(a => a.StatusFlRegistration).WithMany(b => b.FlFaceMainRegistrations).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_FlFaceMainRegistration_StatusFlRegistration
        }
    }

    // FormulNdfl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FormulNdflConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FormulNdfl>
    {
        public FormulNdflConfiguration()
            : this("dbo")
        {
        }

        public FormulNdflConfiguration(string schema)
        {
            ToTable("FormulNdfl", schema);
            HasKey(x => new { x.LogicsButton, x.NameSmall, x.Inn, x.CodeNdfl });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeNdfl).HasColumnName(@"CodeNdfl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MoneyNdfl).HasColumnName(@"MoneyNdfl").HasColumnType("decimal").IsOptional().HasPrecision(38,2);
            Property(x => x.CountNdfl).HasColumnName(@"CountNdfl").HasColumnType("int").IsOptional();
            Property(x => x.CountFl).HasColumnName(@"CountFl").HasColumnType("int").IsOptional();
            Property(x => x.AvgMoney).HasColumnName(@"AvgMoney").HasColumnType("decimal").IsOptional().HasPrecision(28,2);
        }
    }

    // GrnInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GrnInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GrnInventory>
    {
        public GrnInventoryConfiguration()
            : this("dbo")
        {
        }

        public GrnInventoryConfiguration(string schema)
        {
            ToTable("GrnInventory", schema);
            HasKey(x => x.IdDocGrn);

            Property(x => x.IdDocGrn).HasColumnName(@"IdDocGrn").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdGrnAis3).HasColumnName(@"IdGrnAis3").HasColumnType("int").IsOptional();
            Property(x => x.IdOgrn).HasColumnName(@"IdOgrn").HasColumnType("int").IsRequired();
            Property(x => x.NumberOgrnGrn).HasColumnName(@"NumberOgrnGrn").HasColumnType("bigint").IsRequired();
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsStartProcess).HasColumnName(@"IsStartProcess").HasColumnType("bit").IsRequired();
            Property(x => x.IsFindGrnDataBase).HasColumnName(@"IsFindGrnDataBase").HasColumnType("bit").IsRequired();
            Property(x => x.StatusFinish).HasColumnName(@"StatusFinish").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.AisGrnDocument).WithMany(b => b.GrnInventories).HasForeignKey(c => c.IdGrnAis3).WillCascadeOnDelete(false); // FK_GrnInventory_AisGrnDocument
            HasRequired(a => a.OrganizationOgrnInventory).WithMany(b => b.GrnInventories).HasForeignKey(c => c.IdOgrn).WillCascadeOnDelete(false); // FK_GrnInventory_OrganizationOgrnInventory
        }
    }

    // GrnInventoryAndEventProcessError
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GrnInventoryAndEventProcessErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GrnInventoryAndEventProcessError>
    {
        public GrnInventoryAndEventProcessErrorConfiguration()
            : this("dbo")
        {
        }

        public GrnInventoryAndEventProcessErrorConfiguration(string schema)
        {
            ToTable("GrnInventoryAndEventProcessError", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDocGrn).HasColumnName(@"IdDocGrn").HasColumnType("int").IsRequired();
            Property(x => x.IdProcess).HasColumnName(@"IdProcess").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.EventProcessError).WithMany(b => b.GrnInventoryAndEventProcessErrors).HasForeignKey(c => c.IdProcess).WillCascadeOnDelete(false); // FK_GrnInventoryAndEventProcessError_EventProcessError
            HasRequired(a => a.GrnInventory).WithMany(b => b.GrnInventoryAndEventProcessErrors).HasForeignKey(c => c.IdDocGrn).WillCascadeOnDelete(false); // FK_GrnInventoryAndEventProcessError_GrnInventory
        }
    }

    // GroupKbk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupKbkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GroupKbk>
    {
        public GroupKbkConfiguration()
            : this("dbo")
        {
        }

        public GroupKbkConfiguration(string schema)
        {
            ToTable("GroupKbk", schema);
            HasKey(x => x.IdQbe);

            Property(x => x.IdQbe).HasColumnName(@"IdQbe").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameGroupPl).HasColumnName(@"NameGroupPl").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DescriptionGroup).HasColumnName(@"DescriptionGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.GroupColor).HasColumnName(@"GroupColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // GroupQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GroupQuestion>
    {
        public GroupQuestionConfiguration()
            : this("dbo")
        {
        }

        public GroupQuestionConfiguration(string schema)
        {
            ToTable("GroupQuestions", schema);
            HasKey(x => x.IdGroupQuestions);

            Property(x => x.IdGroupQuestions).HasColumnName(@"IdGroupQuestions").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameGroup).HasColumnName(@"NameGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // HeadingStatement
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HeadingStatementConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HeadingStatement>
    {
        public HeadingStatementConfiguration()
            : this("dbo")
        {
        }

        public HeadingStatementConfiguration(string schema)
        {
            ToTable("HeadingStatement", schema);
            HasKey(x => x.IdStatementHead);

            Property(x => x.IdStatementHead).HasColumnName(@"IdStatementHead").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameIndex).HasColumnName(@"NameIndex").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // HelpKbkAuto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HelpKbkAutoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HelpKbkAuto>
    {
        public HelpKbkAutoConfiguration()
            : this("dbo")
        {
        }

        public HelpKbkAutoConfiguration(string schema)
        {
            ToTable("HelpKbkAuto", schema);
            HasKey(x => new { x.Id, x.IdQbe, x.NameGroupPl, x.Kbk });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.GroupColor).HasColumnName(@"GroupColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.IdQbe).HasColumnName(@"IdQbe").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameGroupPl).HasColumnName(@"NameGroupPl").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DescriptionGroup).HasColumnName(@"DescriptionGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // HistoriUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HistoriUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HistoriUlFace>
    {
        public HistoriUlFaceConfiguration()
            : this("dbo")
        {
        }

        public HistoriUlFaceConfiguration(string schema)
        {
            ToTable("HistoriUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum, x.KodeNo });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.KppObject).HasColumnName(@"KppObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.AddressObject).HasColumnName(@"AddressObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.KodeNo).HasColumnName(@"KodeNo").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateNoStart).HasColumnName(@"DateNoStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateNoFinish).HasColumnName(@"DateNoFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.HistoriUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_HistoriUlFace_UlFace
        }
    }

    // H_NAMES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HNameConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HName>
    {
        public HNameConfiguration()
            : this("dbo")
        {
        }

        public HNameConfiguration(string schema)
        {
            ToTable("H_NAMES", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N142).HasColumnName(@"N142").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.D1035).HasColumnName(@"D1035").HasColumnType("bit").IsRequired();
        }
    }

    // ImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImZmTrFl>
    {
        public ImZmTrFlConfiguration()
            : this("dbo")
        {
        }

        public ImZmTrFlConfiguration(string schema)
        {
            ToTable("ImZmTrFl", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired();
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ReasonSettingStart).HasColumnName(@"ReasonSettingStart").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateOne).HasColumnName(@"DateOne").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactStart).HasColumnName(@"DateFactStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.ReasonSettingFinish).HasColumnName(@"ReasonSettingFinish").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishNo).HasColumnName(@"DateFinishNo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactFinish).HasColumnName(@"DateFactFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.AddresObject).HasColumnName(@"AddresObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FlFace).WithMany(b => b.ImZmTrFls).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_ImZmTrFl_FlFace
            HasRequired(a => a.TypeObject).WithMany(b => b.ImZmTrFls).HasForeignKey(c => c.IdObject).WillCascadeOnDelete(false); // FK_TypeObject_ImZmTrFl
        }
    }

    // ImZmTrUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrUlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImZmTrUl>
    {
        public ImZmTrUlConfiguration()
            : this("dbo")
        {
        }

        public ImZmTrUlConfiguration(string schema)
        {
            ToTable("ImZmTrUl", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired();
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ReasonSettingStart).HasColumnName(@"ReasonSettingStart").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateOne).HasColumnName(@"DateOne").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactStart).HasColumnName(@"DateFactStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.ReasonSettingFinish).HasColumnName(@"ReasonSettingFinish").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishNo).HasColumnName(@"DateFinishNo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactFinish).HasColumnName(@"DateFactFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.AddresObject).HasColumnName(@"AddresObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TypeObject).WithMany(b => b.ImZmTrUls).HasForeignKey(c => c.IdObject).WillCascadeOnDelete(false); // FK_TypeObject_ImZmTrUl
            HasRequired(a => a.UlFace).WithMany(b => b.ImZmTrUls).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_ImZmTrUl
        }
    }

    // IndividualCardsUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IndividualCardsUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IndividualCardsUlFace>
    {
        public IndividualCardsUlFaceConfiguration()
            : this("dbo")
        {
        }

        public IndividualCardsUlFaceConfiguration(string schema)
        {
            ToTable("IndividualCardsUlFace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.ReportAll).HasColumnName(@"ReportAll").HasColumnType("xml").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.IndividualCardsUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_IndividualCardsUlFace_UlFace
        }
    }

    // InfoDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InfoDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoDocument>
    {
        public InfoDocumentConfiguration()
            : this("dbo")
        {
        }

        public InfoDocumentConfiguration(string schema)
        {
            ToTable("InfoDocument", schema);
            HasKey(x => x.IdInfo);

            Property(x => x.IdInfo).HasColumnName(@"IdInfo").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameDocumentInfo).HasColumnName(@"NameDocumentInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // InfoViewAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InfoViewAutomationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoViewAutomation>
    {
        public InfoViewAutomationConfiguration()
            : this("dbo")
        {
        }

        public InfoViewAutomationConfiguration(string schema)
        {
            ToTable("InfoViewAutomation", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameView).HasColumnName(@"NameView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameViewColumns).HasColumnName(@"NameViewColumns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InfoColumn).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.FormatView).HasColumnName(@"FormatView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.IsVisible).HasColumnName(@"IsVisible").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // IsPatentParses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IsPatentParsConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IsPatentPars>
    {
        public IsPatentParsConfiguration()
            : this("dbo")
        {
        }

        public IsPatentParsConfiguration(string schema)
        {
            ToTable("IsPatentParses", schema);
            HasKey(x => new { x.LogicsButton, x.IdNum, x.RegNumPatent, x.IsParseFullPatent, x.IsParseDocPatent, x.IsParsePlaceOfBusiness, x.IsParseSvedTr, x.IsParseSvedObject, x.IsParseParametrNalog, x.IsParseSvedFactPatent });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumPatent).HasColumnName(@"RegNumPatent").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParseFullPatent).HasColumnName(@"IsParseFullPatent").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParseDocPatent).HasColumnName(@"IsParseDocPatent").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParsePlaceOfBusiness).HasColumnName(@"IsParsePlaceOfBusiness").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParseSvedTr).HasColumnName(@"IsParseSvedTr").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParseSvedObject).HasColumnName(@"IsParseSvedObject").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParseParametrNalog).HasColumnName(@"IsParseParametrNalog").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsParseSvedFactPatent).HasColumnName(@"IsParseSvedFactPatent").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // IsPatentParse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IsPatentParseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IsPatentParse>
    {
        public IsPatentParseConfiguration()
            : this("dbo")
        {
        }

        public IsPatentParseConfiguration(string schema)
        {
            ToTable("IsPatentParse", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumPatent).HasColumnName(@"RegNumPatent").HasColumnType("bigint").IsRequired();
            Property(x => x.IsParseFullPatent).HasColumnName(@"IsParseFullPatent").HasColumnType("bit").IsRequired();
            Property(x => x.IsParseDocPatent).HasColumnName(@"IsParseDocPatent").HasColumnType("bit").IsRequired();
            Property(x => x.IsParsePlaceOfBusiness).HasColumnName(@"IsParsePlaceOfBusiness").HasColumnType("bit").IsRequired();
            Property(x => x.IsParseSvedTr).HasColumnName(@"IsParseSvedTr").HasColumnType("bit").IsRequired();
            Property(x => x.IsParseSvedObject).HasColumnName(@"IsParseSvedObject").HasColumnType("bit").IsRequired();
            Property(x => x.IsParseParametrNalog).HasColumnName(@"IsParseParametrNalog").HasColumnType("bit").IsRequired();
            Property(x => x.IsParseSvedFactPatent).HasColumnName(@"IsParseSvedFactPatent").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // KbkPayment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KbkPaymentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KbkPayment>
    {
        public KbkPaymentConfiguration()
            : this("dbo")
        {
        }

        public KbkPaymentConfiguration(string schema)
        {
            ToTable("KbkPayment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdQbe).HasColumnName(@"IdQbe").HasColumnType("int").IsRequired();
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.GroupKbk).WithMany(b => b.KbkPayments).HasForeignKey(c => c.IdQbe).WillCascadeOnDelete(false); // FK_GroupKbk_KbkPayment
        }
    }

    // KbkPlat
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KbkPlatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KbkPlat>
    {
        public KbkPlatConfiguration()
            : this("dbo")
        {
        }

        public KbkPlatConfiguration(string schema)
        {
            ToTable("KbkPlat", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdQbe).HasColumnName(@"IdQbe").HasColumnType("int").IsRequired();
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // KontrAgent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KontrAgentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KontrAgent>
    {
        public KontrAgentConfiguration()
            : this("dbo")
        {
        }

        public KontrAgentConfiguration(string schema)
        {
            ToTable("KontrAgent", schema);
            HasKey(x => x.IdKontrAgent);

            Property(x => x.IdKontrAgent).HasColumnName(@"IdKontrAgent").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InnKontrAgent).HasColumnName(@"InnKontrAgent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameKontrAgent).HasColumnName(@"NameKontrAgent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Krsb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KrsbConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Krsb>
    {
        public KrsbConfiguration()
            : this("dbo")
        {
        }

        public KrsbConfiguration(string schema)
        {
            ToTable("Krsb", schema);
            HasKey(x => x.IdKrsb);

            Property(x => x.IdKrsb).HasColumnName(@"IdKrsb").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNp).HasColumnName(@"IdNp").HasColumnType("int").IsOptional();
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.NameKrsb).HasColumnName(@"NameKrsb").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Oktmo).HasColumnName(@"Oktmo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.IdParameter).HasColumnName(@"IdParameter").HasColumnType("bigint").IsRequired();
            Property(x => x.IsPriznak).HasColumnName(@"IsPriznak").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.KrsbNp).WithMany(b => b.Krsbs).HasForeignKey(c => c.IdNp).WillCascadeOnDelete(false); // FK_KrsbNp_Krsb
        }
    }

    // KrsbNp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KrsbNpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KrsbNp>
    {
        public KrsbNpConfiguration()
            : this("dbo")
        {
        }

        public KrsbNpConfiguration(string schema)
        {
            ToTable("KrsbNp", schema);
            HasKey(x => x.IdNp);

            Property(x => x.IdNp).HasColumnName(@"IdNp").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired();
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsPriznakFullClosed).HasColumnName(@"IsPriznakFullClosed").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LogicsSelectAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogicsSelectAutomationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogicsSelectAutomation>
    {
        public LogicsSelectAutomationConfiguration()
            : this("dbo")
        {
        }

        public LogicsSelectAutomationConfiguration(string schema)
        {
            ToTable("LogicsSelectAutomation", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SelectInfo).HasColumnName(@"SelectInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameDll).HasColumnName(@"NameDll").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.FindNameSpace).HasColumnName(@"FindNameSpace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IsResultXml).HasColumnName(@"IsResultXml").HasColumnType("bit").IsOptional();
            Property(x => x.NameReportList).HasColumnName(@"NameReportList").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameReportFile).HasColumnName(@"NameReportFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SelectedParametr).HasColumnName(@"SelectedParametr").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SelectUser).HasColumnName(@"SelectUser").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LogPreCheck
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogPreCheckConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogPreCheck>
    {
        public LogPreCheckConfiguration()
            : this("dbo")
        {
        }

        public LogPreCheckConfiguration(string schema)
        {
            ToTable("LogPreCheck", schema);
            HasKey(x => new { x.Id, x.UserTabelNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserTabelNum).HasColumnName(@"UserTabelNum").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Method).HasColumnName(@"Method").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.StatusMethod).HasColumnName(@"StatusMethod").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ErrorLog).HasColumnName(@"ErrorLog").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Datacreate).HasColumnName(@"Datacreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MainOrg
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainOrgConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MainOrg>
    {
        public MainOrgConfiguration()
            : this("dbo")
        {
        }

        public MainOrgConfiguration(string schema)
        {
            ToTable("MainOrg", schema);
            HasKey(x => x.IdOrg);

            Property(x => x.IdOrg).HasColumnName(@"IdOrg").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDerector).HasColumnName(@"IdDerector").HasColumnType("int").IsRequired();
            Property(x => x.IdType).HasColumnName(@"IdType").HasColumnType("int").IsRequired();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameOrg).HasColumnName(@"NameOrg").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NoIn).HasColumnName(@"NoIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NoOut).HasColumnName(@"NoOut").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsReady).HasColumnName(@"IsReady").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Derector).WithMany(b => b.MainOrgs).HasForeignKey(c => c.IdDerector).WillCascadeOnDelete(false); // FK_Derector_MainOrg
            HasRequired(a => a.TypeOrgAndQuestion).WithMany(b => b.MainOrgs).HasForeignKey(c => c.IdType).WillCascadeOnDelete(false); // FK_TypeOrgAndQuestions_MainOrg
        }
    }

    // MainOrgAndKontrAgent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainOrgAndKontrAgentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MainOrgAndKontrAgent>
    {
        public MainOrgAndKontrAgentConfiguration()
            : this("dbo")
        {
        }

        public MainOrgAndKontrAgentConfiguration(string schema)
        {
            ToTable("MainOrgAndKontrAgent", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdOrg).HasColumnName(@"IdOrg").HasColumnType("int").IsRequired();
            Property(x => x.IdKontrAgent).HasColumnName(@"IdKontrAgent").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.KontrAgent).WithMany(b => b.MainOrgAndKontrAgents).HasForeignKey(c => c.IdKontrAgent).WillCascadeOnDelete(false); // FK_KontrAgent_MainOrgAndKontrAgent
            HasRequired(a => a.MainOrg).WithMany(b => b.MainOrgAndKontrAgents).HasForeignKey(c => c.IdOrg).WillCascadeOnDelete(false); // FK_MainOrgAndKontrAgent_MainOrg
        }
    }

    // MainOrgAndQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainOrgAndQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MainOrgAndQuestion>
    {
        public MainOrgAndQuestionConfiguration()
            : this("dbo")
        {
        }

        public MainOrgAndQuestionConfiguration(string schema)
        {
            ToTable("MainOrgAndQuestions", schema);
            HasKey(x => new { x.LogicsButton, x.Inn, x.IsReady });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameOrg).HasColumnName(@"NameOrg").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NoIn).HasColumnName(@"NoIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NoOut).HasColumnName(@"NoOut").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsReady).HasColumnName(@"IsReady").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // MainUserAndQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainUserAndQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MainUserAndQuestion>
    {
        public MainUserAndQuestionConfiguration()
            : this("dbo")
        {
        }

        public MainUserAndQuestionConfiguration(string schema)
        {
            ToTable("MainUserAndQuestions", schema);
            HasKey(x => new { x.LogicsButton, x.IdUserRegistrationFl, x.NameType, x.Inn, x.IsReady });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUserRegistrationFl).HasColumnName(@"IdUserRegistrationFl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameType).HasColumnName(@"NameType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NoIn).HasColumnName(@"NoIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NoOut).HasColumnName(@"NoOut").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsReady).HasColumnName(@"IsReady").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // MainUserRegistrationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MainUserRegistrationFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MainUserRegistrationFl>
    {
        public MainUserRegistrationFlConfiguration()
            : this("dbo")
        {
        }

        public MainUserRegistrationFlConfiguration(string schema)
        {
            ToTable("MainUserRegistrationFl", schema);
            HasKey(x => x.IdUserRegistrationFl);

            Property(x => x.IdUserRegistrationFl).HasColumnName(@"IdUserRegistrationFl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdType).HasColumnName(@"IdType").HasColumnType("int").IsRequired();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CodeNo).HasColumnName(@"CodeNo").HasColumnType("int").IsOptional();
            Property(x => x.NoIn).HasColumnName(@"NoIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NoOut).HasColumnName(@"NoOut").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsReady).HasColumnName(@"IsReady").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TypeOrgAndQuestion).WithMany(b => b.MainUserRegistrationFls).HasForeignKey(c => c.IdType).WillCascadeOnDelete(false); // FK_TypeOrgAndQuestions_MainUserRegistrationFl
        }
    }

    // ModelKbkOnKbk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelKbkOnKbkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelKbkOnKbk>
    {
        public ModelKbkOnKbkConfiguration()
            : this("dbo")
        {
        }

        public ModelKbkOnKbkConfiguration(string schema)
        {
            ToTable("ModelKbkOnKbk", schema);
            HasKey(x => x.IdClarification);

            Property(x => x.IdClarification).HasColumnName(@"IdClarification").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StatusError).HasColumnName(@"StatusError").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdDoc).HasColumnName(@"IdDoc").HasColumnType("bigint").IsRequired();
            Property(x => x.InnPayer).HasColumnName(@"InnPayer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Payment).HasColumnName(@"Payment").HasColumnType("decimal").IsOptional().HasPrecision(28,2);
            Property(x => x.KbkIfns).HasColumnName(@"KbkIfns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Kbk100Before).HasColumnName(@"Kbk100Before").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TpPayerBefore).HasColumnName(@"TpPayerBefore").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.StatusPayerBefore).HasColumnName(@"StatusPayerBefore").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.KbkUtcAfter).HasColumnName(@"KbkUtcAfter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TpPayerUtcAfter).HasColumnName(@"TpPayerUtcAfter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.StatusPayerUtcAfter).HasColumnName(@"StatusPayerUtcAfter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.InnBank).HasColumnName(@"InnBank").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.KppBank).HasColumnName(@"KppBank").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Oktmo105).HasColumnName(@"Oktmo105").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.OktmoUfk).HasColumnName(@"OktmoUfk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Conclusion).HasColumnName(@"Conclusion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ModelTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelTreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelTree>
    {
        public ModelTreeConfiguration()
            : this("dbo")
        {
        }

        public ModelTreeConfiguration(string schema)
        {
            ToTable("ModelTree", schema);
            HasKey(x => new { x.LogicsButton, x.IdUl, x.IdModel });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InnUl).HasColumnName(@"InnUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameTemplate).HasColumnName(@"NameTemplate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Tree).HasColumnName(@"Tree").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StatusModel).HasColumnName(@"StatusModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // NdflFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NdflFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NdflFl>
    {
        public NdflFlConfiguration()
            : this("dbo")
        {
        }

        public NdflFlConfiguration(string schema)
        {
            ToTable("NdflFl", schema);
            HasKey(x => new { x.Id, x.IdUl, x.IdSved, x.Number, x.IdVidNdfl, x.CodeNdfl });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdSved).HasColumnName(@"IdSved").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FidFl).HasColumnName(@"FidFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InnFl).HasColumnName(@"InnFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SurnameFl).HasColumnName(@"SurnameFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameFl).HasColumnName(@"NameFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.PatronymicFl).HasColumnName(@"PatronymicFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FioFl).HasColumnName(@"FioFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdVidNdfl).HasColumnName(@"IdVidNdfl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeNdfl).HasColumnName(@"CodeNdfl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameNdfl).HasColumnName(@"NameNdfl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.MoneyNdfl).HasColumnName(@"MoneyNdfl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.UlFace).WithMany(b => b.NdflFls).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_NdflFl
        }
    }

    // OrganizationOgrnInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrganizationOgrnInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrganizationOgrnInventory>
    {
        public OrganizationOgrnInventoryConfiguration()
            : this("dbo")
        {
        }

        public OrganizationOgrnInventoryConfiguration(string schema)
        {
            ToTable("OrganizationOgrnInventory", schema);
            HasKey(x => x.IdOgrn);

            Property(x => x.IdOgrn).HasColumnName(@"IdOgrn").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserLogin).HasColumnName(@"UserLogin").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NumberOgrn).HasColumnName(@"NumberOgrn").HasColumnType("bigint").IsRequired();
            Property(x => x.IsHiddenWeb).HasColumnName(@"IsHiddenWeb").HasColumnType("bit").IsOptional();
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.StatusOgrn).WithMany(b => b.OrganizationOgrnInventories).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_OrganizationOgrnInventory_StatusOgrn
        }
    }

    // ParameterProcedureWeb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ParameterProcedureWebConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ParameterProcedureWeb>
    {
        public ParameterProcedureWebConfiguration()
            : this("dbo")
        {
        }

        public ParameterProcedureWebConfiguration(string schema)
        {
            ToTable("ParameterProcedureWeb", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SelectInfoModel).HasColumnName(@"SelectInfoModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SelectParameterTable).HasColumnName(@"SelectParameterTable").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ModelClassFind).HasColumnName(@"ModelClassFind").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ParameterProcedure).HasColumnName(@"ParameterProcedure").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SelectUser).HasColumnName(@"SelectUser").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ParametrNalog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ParametrNalogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ParametrNalog>
    {
        public ParametrNalogConfiguration()
            : this("dbo")
        {
        }

        public ParametrNalogConfiguration(string schema)
        {
            ToTable("ParametrNalog", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired();
            Property(x => x.PrizSum).HasColumnName(@"PrizSum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizCountWork).HasColumnName(@"PrizCountWork").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizCountTr).HasColumnName(@"PrizCountTr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizCountSeqts).HasColumnName(@"PrizCountSeqts").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizCountWeight).HasColumnName(@"PrizCountWeight").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizCountObject).HasColumnName(@"PrizCountObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizCountObjectArea).HasColumnName(@"PrizCountObjectArea").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PrizRukVvod).HasColumnName(@"PrizRukVvod").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.IdKbk).HasColumnName(@"IdKbk").HasColumnType("int").IsOptional();
            Property(x => x.NameNalog).HasColumnName(@"NameNalog").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.Oktmo).HasColumnName(@"Oktmo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Vktmo).HasColumnName(@"Vktmo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdVktmo).HasColumnName(@"IdVktmo").HasColumnType("int").IsOptional();
            Property(x => x.NalogDateBase).HasColumnName(@"NalogDateBase").HasColumnType("float").IsRequired();
            Property(x => x.NalogPsnYear).HasColumnName(@"NalogPsnYear").HasColumnType("float").IsRequired();
            Property(x => x.NalogPsnPeriod).HasColumnName(@"NalogPsnPeriod").HasColumnType("float").IsRequired();
            Property(x => x.Inspector).HasColumnName(@"Inspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IdWrite).HasColumnName(@"IdWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.IdNalogWrite).HasColumnName(@"IdNalogWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Patent).WithMany(b => b.ParametrNalogs).HasForeignKey(c => c.IdPatent); // FK_ParametrNalog_Patent
        }
    }

    // Patent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PatentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Patent>
    {
        public PatentConfiguration()
            : this("dbo")
        {
        }

        public PatentConfiguration(string schema)
        {
            ToTable("Patent", schema);
            HasKey(x => x.IdPatent);

            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired();
            Property(x => x.DateStartPatent).HasColumnName(@"DateStartPatent").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateFinishPatent).HasColumnName(@"DateFinishPatent").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.CodeWork).HasColumnName(@"CodeWork").HasColumnType("int").IsRequired();
            Property(x => x.NameVid).HasColumnName(@"NameVid").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.CodeOkun).HasColumnName(@"CodeOkun").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameCodeOkun).HasColumnName(@"NameCodeOkun").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CountMouth).HasColumnName(@"CountMouth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CountDays).HasColumnName(@"CountDays").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.AvgPeople).HasColumnName(@"AvgPeople").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NalogStav).HasColumnName(@"NalogStav").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NormalCodex).HasColumnName(@"NormalCodex").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateWaitResh).HasColumnName(@"DateWaitResh").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateResh).HasColumnName(@"DateResh").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateCancel).HasColumnName(@"DateCancel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.RegNumInfo).HasColumnName(@"RegNumInfo").HasColumnType("bigint").IsOptional();
            Property(x => x.RegNumPatent).HasColumnName(@"RegNumPatent").HasColumnType("bigint").IsOptional();
            Property(x => x.RegNumInfoVz).HasColumnName(@"RegNumInfoVz").HasColumnType("bigint").IsOptional();
            Property(x => x.RegNumPatentVz).HasColumnName(@"RegNumPatentVz").HasColumnType("bigint").IsOptional();
            Property(x => x.DateObjectNot).HasColumnName(@"DateObjectNot").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdObjectPsn).HasColumnName(@"IdObjectPsn").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FlFaceMain).WithMany(b => b.Patents).HasForeignKey(c => c.IdFl); // FK_Patent_FlFaceMain
        }
    }

    // PlaceOfBusiness
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PlaceOfBusinessConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PlaceOfBusiness>
    {
        public PlaceOfBusinessConfiguration()
            : this("dbo")
        {
        }

        public PlaceOfBusinessConfiguration(string schema)
        {
            ToTable("PlaceOfBusiness", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired();
            Property(x => x.IdPlace).HasColumnName(@"IdPlace").HasColumnType("bigint").IsOptional();
            Property(x => x.AddressPlace).HasColumnName(@"AddressPlace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdWrite).HasColumnName(@"IdWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Patent).WithMany(b => b.PlaceOfBusinesses).HasForeignKey(c => c.IdPatent); // FK_PlaceOfBusiness_Patent
        }
    }

    // QuestionsAndUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class QuestionsAndUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<QuestionsAndUser>
    {
        public QuestionsAndUserConfiguration()
            : this("dbo")
        {
        }

        public QuestionsAndUserConfiguration(string schema)
        {
            ToTable("QuestionsAndUsers", schema);
            HasKey(x => x.IdQuestions);

            Property(x => x.IdQuestions).HasColumnName(@"IdQuestions").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired();
            Property(x => x.IdTemplateQuestions).HasColumnName(@"IdTemplateQuestions").HasColumnType("int").IsRequired();
            Property(x => x.ModelQuestions).HasColumnName(@"ModelQuestions").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TemplateQuestion).WithMany(b => b.QuestionsAndUsers).HasForeignKey(c => c.IdTemplateQuestions).WillCascadeOnDelete(false); // FK_TemplateQuestions_QuestionsAndUsers
            HasRequired(a => a.UserOrg).WithMany(b => b.QuestionsAndUsers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_UserOrg_QuestionsAndUsers
        }
    }

    // QuestionsAndUserRegistrationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class QuestionsAndUserRegistrationFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<QuestionsAndUserRegistrationFl>
    {
        public QuestionsAndUserRegistrationFlConfiguration()
            : this("dbo")
        {
        }

        public QuestionsAndUserRegistrationFlConfiguration(string schema)
        {
            ToTable("QuestionsAndUserRegistrationFl", schema);
            HasKey(x => x.IdQuestions);

            Property(x => x.IdQuestions).HasColumnName(@"IdQuestions").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUserRegistrationFl).HasColumnName(@"IdUserRegistrationFl").HasColumnType("int").IsRequired();
            Property(x => x.IdTemplateQuestions).HasColumnName(@"IdTemplateQuestions").HasColumnType("int").IsRequired();
            Property(x => x.ModelQuestions).HasColumnName(@"ModelQuestions").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.MainUserRegistrationFl).WithMany(b => b.QuestionsAndUserRegistrationFls).HasForeignKey(c => c.IdUserRegistrationFl).WillCascadeOnDelete(false); // FK_MainUserRegistrationFl_QuestionsAndUserRegistrationFl
            HasRequired(a => a.TemplateQuestion).WithMany(b => b.QuestionsAndUserRegistrationFls).HasForeignKey(c => c.IdTemplateQuestions).WillCascadeOnDelete(false); // FK_TemplateQuestions_QuestionsAndUserRegistrationFl
        }
    }

    // Rb_Holidays
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbHolidayConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbHoliday>
    {
        public RbHolidayConfiguration()
            : this("dbo")
        {
        }

        public RbHolidayConfiguration(string schema)
        {
            ToTable("Rb_Holidays", schema);
            HasKey(x => new { x.Id, x.DateTimeHoliday, x.IsHoliday });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DateTimeHoliday).HasColumnName(@"DateTime_Holiday").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsHoliday).HasColumnName(@"IS_HOLIDAY").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // RealEstateZmIm
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RealEstateZmImConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RealEstateZmIm>
    {
        public RealEstateZmImConfiguration()
            : this("dbo")
        {
        }

        public RealEstateZmImConfiguration(string schema)
        {
            ToTable("RealEstateZmIm", schema);
            HasKey(x => new { x.LogicsButton, x.Inn, x.NameFl, x.FidObject, x.FidFactOwnership });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFl).HasColumnName(@"NameFl").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FidObject).HasColumnName(@"FidObject").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FidFactOwnership).HasColumnName(@"FidFactOwnership").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeIfns).HasColumnName(@"CodeIfns").HasColumnType("int").IsOptional();
            Property(x => x.CadastralNumber).HasColumnName(@"CadastralNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateStartRight).HasColumnName(@"DateStartRight").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStartFinish).HasColumnName(@"DateStartFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.ActualCadastralCash).HasColumnName(@"ActualCadastralCash").HasColumnType("float").IsOptional();
            Property(x => x.NumberDocument).HasColumnName(@"NumberDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeDocument).HasColumnName(@"CodeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CashDeal).HasColumnName(@"CashDeal").HasColumnType("float").IsOptional();
            Property(x => x.CashText).HasColumnName(@"CashText").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // RegisterDocumentsPrinting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RegisterDocumentsPrintingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RegisterDocumentsPrinting>
    {
        public RegisterDocumentsPrintingConfiguration()
            : this("dbo")
        {
        }

        public RegisterDocumentsPrintingConfiguration(string schema)
        {
            ToTable("RegisterDocumentsPrinting", schema);
            HasKey(x => x.IdDocument);

            Property(x => x.IdDocument).HasColumnName(@"IdDocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MachineName).HasColumnName(@"MachineName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TabelNumberUser).HasColumnName(@"TabelNumberUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NumberDocument).HasColumnName(@"NumberDocument").HasColumnType("int").IsOptional();
            Property(x => x.FormKnd).HasColumnName(@"FormKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.RegNumberDocumetGuid).HasColumnName(@"RegNumberDocumetGuid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountPage).HasColumnName(@"CountPage").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // ReportXlsx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportXlsxConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReportXlsx>
    {
        public ReportXlsxConfiguration()
            : this("dbo")
        {
        }

        public ReportXlsxConfiguration(string schema)
        {
            ToTable("ReportXlsx", schema);
            HasKey(x => x.IdReport);

            Property(x => x.IdReport).HasColumnName(@"IdReport").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameReport).HasColumnName(@"NameReport").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameFile).HasColumnName(@"NameFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameTable).HasColumnName(@"NameTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ParameterProcedure).HasColumnName(@"ParameterProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ProcedureReport).HasColumnName(@"ProcedureReport").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // RukAndUcrh
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RukAndUcrhConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RukAndUcrh>
    {
        public RukAndUcrhConfiguration()
            : this("dbo")
        {
        }

        public RukAndUcrhConfiguration(string schema)
        {
            ToTable("RukAndUcrh", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired();
            Property(x => x.NameFl).HasColumnName(@"NameFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FlFace).WithMany(b => b.RukAndUcrhs).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_RukAndUcrh_FlFace
            HasRequired(a => a.UlFace).WithMany(b => b.RukAndUcrhs).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_RukAndUcrh_UlFace
        }
    }

    // SenderResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SenderResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SenderResponse>
    {
        public SenderResponseConfiguration()
            : this("dbo")
        {
        }

        public SenderResponseConfiguration(string schema)
        {
            ToTable("SenderResponse", schema);
            HasKey(x => x.IdSenderResponse);

            Property(x => x.IdSenderResponse).HasColumnName(@"IdSenderResponse").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTemplateSender).HasColumnName(@"IdTemplateSender").HasColumnType("bigint").IsRequired();
            Property(x => x.NameSender).HasColumnName(@"NameSender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SenderTaxJournalOkp2
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SenderTaxJournalOkp2Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SenderTaxJournalOkp2>
    {
        public SenderTaxJournalOkp2Configuration()
            : this("dbo")
        {
        }

        public SenderTaxJournalOkp2Configuration(string schema)
        {
            ToTable("SenderTaxJournalOkp2", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SignatureBoss
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SignatureBossConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SignatureBoss>
    {
        public SignatureBossConfiguration()
            : this("dbo")
        {
        }

        public SignatureBossConfiguration(string schema)
        {
            ToTable("SignatureBoss", schema);
            HasKey(x => new { x.Id, x.NameUser, x.IsSignature, x.IsActual });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsSignature).HasColumnName(@"IsSignature").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(23).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsActual).HasColumnName(@"IsActual").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // Statement
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatementConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Statement>
    {
        public StatementConfiguration()
            : this("dbo")
        {
        }

        public StatementConfiguration(string schema)
        {
            ToTable("Statement", schema);
            HasKey(x => x.IdStatement);

            Property(x => x.IdStatement).HasColumnName(@"IdStatement").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNp).HasColumnName(@"IdNp").HasColumnType("int").IsOptional();
            Property(x => x.NumberStatement).HasColumnName(@"NumberStatement").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Oktmo).HasColumnName(@"Oktmo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.IsPriznak).HasColumnName(@"IsPriznak").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatementNp).WithMany(b => b.Statements).HasForeignKey(c => c.IdNp).WillCascadeOnDelete(false); // FK_StatementNp_Statement
        }
    }

    // StatementFull
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatementFullConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatementFull>
    {
        public StatementFullConfiguration()
            : this("dbo")
        {
        }

        public StatementFullConfiguration(string schema)
        {
            ToTable("StatementFull", schema);
            HasKey(x => x.IdStatementIndex);

            Property(x => x.IdStatementIndex).HasColumnName(@"IdStatementIndex").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdStatementHead).HasColumnName(@"IdStatementHead").HasColumnType("int").IsRequired();
            Property(x => x.VarIndex).HasColumnName(@"VarIndex").HasColumnType("int").IsRequired();
            Property(x => x.NameParametr).HasColumnName(@"NameParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ValuesStatement).HasColumnName(@"ValuesStatement").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.HeadingStatement).WithMany(b => b.StatementFulls).HasForeignKey(c => c.IdStatementHead).WillCascadeOnDelete(false); // FK_HeadingStatement_StatementFull
            HasRequired(a => a.UlFace).WithMany(b => b.StatementFulls).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_StatementFull
        }
    }

    // StatementNp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatementNpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatementNp>
    {
        public StatementNpConfiguration()
            : this("dbo")
        {
        }

        public StatementNpConfiguration(string schema)
        {
            ToTable("StatementNp", schema);
            HasKey(x => x.IdNp);

            Property(x => x.IdNp).HasColumnName(@"IdNp").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsPriznakFullClosed).HasColumnName(@"IsPriznakFullClosed").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // StatusDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusDocument>
    {
        public StatusDocumentConfiguration()
            : this("dbo")
        {
        }

        public StatusDocumentConfiguration(string schema)
        {
            ToTable("StatusDocument", schema);
            HasKey(x => x.IdStatusDocument);

            Property(x => x.IdStatusDocument).HasColumnName(@"IdStatusDocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameMessage).HasColumnName(@"NameMessage").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // StatusEvent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusEventConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusEvent>
    {
        public StatusEventConfiguration()
            : this("dbo")
        {
        }

        public StatusEventConfiguration(string schema)
        {
            ToTable("StatusEvent", schema);
            HasKey(x => x.IdStatusEvent);

            Property(x => x.IdStatusEvent).HasColumnName(@"IdStatusEvent").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameStatusEvent).HasColumnName(@"NameStatusEvent").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // StatusFlRegistration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusFlRegistrationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusFlRegistration>
    {
        public StatusFlRegistrationConfiguration()
            : this("dbo")
        {
        }

        public StatusFlRegistrationConfiguration(string schema)
        {
            ToTable("StatusFlRegistration", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MessageStatus).HasColumnName(@"MessageStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // StatusOgrn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusOgrnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusOgrn>
    {
        public StatusOgrnConfiguration()
            : this("dbo")
        {
        }

        public StatusOgrnConfiguration(string schema)
        {
            ToTable("StatusOgrn", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameStatus).HasColumnName(@"NameStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // StrngthUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StrngthUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StrngthUlFace>
    {
        public StrngthUlFaceConfiguration()
            : this("dbo")
        {
        }

        public StrngthUlFaceConfiguration(string schema)
        {
            ToTable("StrngthUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DataDocument).HasColumnName(@"DataDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StrngthFace).HasColumnName(@"StrngthFace").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.StrngthUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_StrngthUlFace
        }
    }

    // SvedAccoutingUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedAccoutingUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SvedAccoutingUlFace>
    {
        public SvedAccoutingUlFaceConfiguration()
            : this("dbo")
        {
        }

        public SvedAccoutingUlFaceConfiguration(string schema)
        {
            ToTable("SvedAccoutingUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.AddressObject).HasColumnName(@"AddressObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeNalog).HasColumnName(@"CodeNalog").HasColumnType("int").IsOptional();
            Property(x => x.DateBegin).HasColumnName(@"DateBegin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactBegin).HasColumnName(@"DateFactBegin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeSppuno).HasColumnName(@"CodeSPPUNO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CauseBegin).HasColumnName(@"CauseBegin").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateEnd).HasColumnName(@"DateEnd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactEnd).HasColumnName(@"DateFactEnd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeSppunoEnd).HasColumnName(@"CodeSPPUNOEnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CauseEnd).HasColumnName(@"CauseEnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.SvedAccoutingUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_SvedAccoutingUlFace
        }
    }

    // SvedFactPatent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedFactPatentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SvedFactPatent>
    {
        public SvedFactPatentConfiguration()
            : this("dbo")
        {
        }

        public SvedFactPatentConfiguration(string schema)
        {
            ToTable("SvedFactPatent", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired();
            Property(x => x.FactDaysPatent).HasColumnName(@"FactDaysPatent").HasColumnType("int").IsRequired();
            Property(x => x.NalogDays).HasColumnName(@"NalogDays").HasColumnType("int").IsRequired();
            Property(x => x.NalogFact).HasColumnName(@"NalogFact").HasColumnType("float").IsRequired();
            Property(x => x.Delta).HasColumnName(@"Delta").HasColumnType("float").IsRequired();
            Property(x => x.Inspector).HasColumnName(@"Inspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IdWrite).HasColumnName(@"IdWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.DeltaWriteError).HasColumnName(@"DeltaWriteError").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NalogDaysDelta).HasColumnName(@"NalogDaysDelta").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Patent).WithMany(b => b.SvedFactPatents).HasForeignKey(c => c.IdPatent); // FK_SvedFactPatent_Patent
        }
    }

    // SvedObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedObjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SvedObject>
    {
        public SvedObjectConfiguration()
            : this("dbo")
        {
        }

        public SvedObjectConfiguration(string schema)
        {
            ToTable("SvedObject", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired();
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("bigint").IsRequired();
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.AreaObject).HasColumnName(@"AreaObject").HasColumnType("float").IsRequired();
            Property(x => x.AddressObject).HasColumnName(@"AddressObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdWrite).HasColumnName(@"IdWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Patent).WithMany(b => b.SvedObjects).HasForeignKey(c => c.IdPatent); // FK_SvedObject_Patent
        }
    }

    // SvedTr
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedTrConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SvedTr>
    {
        public SvedTrConfiguration()
            : this("dbo")
        {
        }

        public SvedTrConfiguration(string schema)
        {
            ToTable("SvedTr", schema);
            HasKey(x => x.IdNum);

            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdPatent).HasColumnName(@"IdPatent").HasColumnType("int").IsRequired();
            Property(x => x.IdTr).HasColumnName(@"IdTr").HasColumnType("bigint").IsRequired();
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.TypeTr).HasColumnName(@"TypeTr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Model).HasColumnName(@"Model").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Weight).HasColumnName(@"Weight").HasColumnType("float").IsRequired();
            Property(x => x.NumberSeqts).HasColumnName(@"NumberSeqts").HasColumnType("int").IsRequired();
            Property(x => x.IdWrite).HasColumnName(@"IdWrite").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Patent).WithMany(b => b.SvedTrs).HasForeignKey(c => c.IdPatent); // FK_SvedTr_Patent
        }
    }

    // SynchronizationUserAndAis
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SynchronizationUserAndAiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SynchronizationUserAndAi>
    {
        public SynchronizationUserAndAiConfiguration()
            : this("dbo")
        {
        }

        public SynchronizationUserAndAiConfiguration(string schema)
        {
            ToTable("SynchronizationUserAndAis", schema);
            HasKey(x => x.IdSync);

            Property(x => x.IdSync).HasColumnName(@"IdSync").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDocGrn).HasColumnName(@"IdDocGrn").HasColumnType("int").IsRequired();
            Property(x => x.IdDocument).HasColumnName(@"IdDocument").HasColumnType("int").IsOptional();
            Property(x => x.IdAisDocument).HasColumnName(@"IdAisDocument").HasColumnType("int").IsOptional();
            Property(x => x.IsAddDocument).HasColumnName(@"IsAddDocument").HasColumnType("bit").IsOptional();
            Property(x => x.IsEmptyDocument).HasColumnName(@"IsEmptyDocument").HasColumnType("bit").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.AisDocument).WithMany(b => b.SynchronizationUserAndAis).HasForeignKey(c => c.IdAisDocument).WillCascadeOnDelete(false); // FK_SynchronizationUserAndAis_AisDocument
            HasOptional(a => a.DocumentInventory).WithMany(b => b.SynchronizationUserAndAis).HasForeignKey(c => c.IdDocument).WillCascadeOnDelete(false); // FK_SynchronizationUserAndAis_DocumentInventory
            HasRequired(a => a.GrnInventory).WithMany(b => b.SynchronizationUserAndAis).HasForeignKey(c => c.IdDocGrn).WillCascadeOnDelete(false); // FK_SynchronizationUserAndAis_GrnInventory
        }
    }

    // TaxDeclarationFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxDeclarationFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxDeclarationFl>
    {
        public TaxDeclarationFlConfiguration()
            : this("dbo")
        {
        }

        public TaxDeclarationFlConfiguration(string schema)
        {
            ToTable("TaxDeclarationFl", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.RegNumDecl, x.Psumm, x.NumberKor, x.SignOfDevialion, x.SummSignOfDevialion });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Psumm).HasColumnName(@"Psumm").HasColumnType("float").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NumberKor).HasColumnName(@"NumberKor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InnNp).HasColumnName(@"InnNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.SignOfDevialion).HasColumnName(@"SignOfDevialion").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SummSignOfDevialion).HasColumnName(@"SummSignOfDevialion").HasColumnType("float").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // TaxEasJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxEasJournalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxEasJournal>
    {
        public TaxEasJournalConfiguration()
            : this("dbo")
        {
        }

        public TaxEasJournalConfiguration(string schema)
        {
            ToTable("TaxEasJournal", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.RegNumber });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RegNumberZ).HasColumnName(@"RegNumberZ").HasColumnType("bigint").IsOptional();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameKnd).HasColumnName(@"NameKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameNp).HasColumnName(@"NameNp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // TaxJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal>
    {
        public TaxJournalConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalConfiguration(string schema)
        {
            ToTable("TaxJournal", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.DateError).HasColumnName(@"DateError").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FullPath).HasColumnName(@"FullPath").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameFile).HasColumnName(@"NameFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournal121
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal121>
    {
        public TaxJournal121Configuration()
            : this("dbo")
        {
        }

        public TaxJournal121Configuration(string schema)
        {
            ToTable("TaxJournal121", schema);
            HasKey(x => new { x.Id, x.DateStartCheck, x.DateFinishCheck, x.DateStartDeclaration, x.DateFinishDeclaration, x.IsPriznak });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GlobalColor).HasColumnName(@"GlobalColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.GlobalProcessColor).HasColumnName(@"GlobalProcessColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.ColorDoc).HasColumnName(@"ColorDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.RegNumDeclaration).HasColumnName(@"RegNumDeclaration").HasColumnType("bigint").IsOptional();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameKnd).HasColumnName(@"NameKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdComplex).HasColumnName(@"IdComplex").HasColumnType("int").IsOptional();
            Property(x => x.DateStartCheck).HasColumnName(@"DateStartCheck").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateFinishCheck).HasColumnName(@"DateFinishCheck").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateStartDeclaration).HasColumnName(@"DateStartDeclaration").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateFinishDeclaration).HasColumnName(@"DateFinishDeclaration").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateFinishKnp).HasColumnName(@"DateFinishKnp").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.IsPriznak).HasColumnName(@"IsPriznak").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Score).HasColumnName(@"Score").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournal121AutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121AutoWebPageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal121AutoWebPage>
    {
        public TaxJournal121AutoWebPageConfiguration()
            : this("dbo")
        {
        }

        public TaxJournal121AutoWebPageConfiguration(string schema)
        {
            ToTable("TaxJournal121AutoWebPage", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.DateStartCheck, x.DateFinishCheck, x.DateStartDeclaration, x.DateFinishDeclaration });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDeclaration).HasColumnName(@"RegNumDeclaration").HasColumnType("int").IsOptional();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameKnd).HasColumnName(@"NameKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.DateStartCheck).HasColumnName(@"DateStartCheck").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateFinishCheck).HasColumnName(@"DateFinishCheck").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateStartDeclaration).HasColumnName(@"DateStartDeclaration").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateFinishDeclaration).HasColumnName(@"DateFinishDeclaration").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CounDay).HasColumnName(@"CounDay").HasColumnType("int").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // TaxJournal121Error
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121ErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal121Error>
    {
        public TaxJournal121ErrorConfiguration()
            : this("dbo")
        {
        }

        public TaxJournal121ErrorConfiguration(string schema)
        {
            ToTable("TaxJournal121Error", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Color1).HasColumnName(@"Color1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Color2).HasColumnName(@"Color2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Color3).HasColumnName(@"Color3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Color4).HasColumnName(@"Color4").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Color5).HasColumnName(@"Color5").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.RegNumDeclaration).HasColumnName(@"RegNumDeclaration").HasColumnType("bigint").IsOptional();
            Property(x => x.NameKnd).HasColumnName(@"NameKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.KorrectNumber).HasColumnName(@"KorrectNumber").HasColumnType("int").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdComplex).HasColumnName(@"IdComplex").HasColumnType("int").IsOptional();
            Property(x => x.DateStartCheck).HasColumnName(@"DateStartCheck").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishCheck).HasColumnName(@"DateFinishCheck").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateStartDeclaration).HasColumnName(@"DateStartDeclaration").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishDeclaration).HasColumnName(@"DateFinishDeclaration").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishKnp).HasColumnName(@"DateFinishKnp").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCloseValidation).HasColumnName(@"DateCloseValidation").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.MessageInfoR1).HasColumnName(@"MessageInfoR1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.MessageError).HasColumnName(@"MessageError").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournal129
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal129Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal129>
    {
        public TaxJournal129Configuration()
            : this("dbo")
        {
        }

        public TaxJournal129Configuration(string schema)
        {
            ToTable("TaxJournal129", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StateColor).HasColumnName(@"StateColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.StateTaxPayerColor).HasColumnName(@"State_TaxPayerColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.DateError).HasColumnName(@"DateError").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StatusObject).HasColumnName(@"StatusObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.FullPath).HasColumnName(@"FullPath").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameFile).HasColumnName(@"NameFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournalAutoReport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournalAutoReport>
    {
        public TaxJournalAutoReportConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalAutoReportConfiguration(string schema)
        {
            ToTable("TaxJournalAutoReport", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"isTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"isMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"isLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournalAutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoWebPageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournalAutoWebPage>
    {
        public TaxJournalAutoWebPageConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalAutoWebPageConfiguration(string schema)
        {
            ToTable("TaxJournalAutoWebPage", schema);
            HasKey(x => new { x.LogicsButton, x.Id });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournalDelivery
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalDeliveryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournalDelivery>
    {
        public TaxJournalDeliveryConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalDeliveryConfiguration(string schema)
        {
            ToTable("TaxJournalDelivery", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumber).HasColumnName(@"RegNumber").HasColumnType("bigint").IsRequired();
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateSend).HasColumnName(@"DateSend").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateDelivery).HasColumnName(@"DateDelivery").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("int").IsRequired();
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.TypeFace).HasColumnName(@"TypeFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.RegNumDeclaration).HasColumnName(@"RegNumDeclaration").HasColumnType("bigint").IsOptional();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameDeclaration).HasColumnName(@"NameDeclaration").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // Template
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Template>
    {
        public TemplateConfiguration()
            : this("dbo")
        {
        }

        public TemplateConfiguration(string schema)
        {
            ToTable("Template", schema);
            HasKey(x => x.IdTemplate);

            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTemplate).HasColumnName(@"NameTemplate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TemplateAndTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateAndTreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateAndTree>
    {
        public TemplateAndTreeConfiguration()
            : this("dbo")
        {
        }

        public TemplateAndTreeConfiguration(string schema)
        {
            ToTable("TemplateAndTree", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired();
            Property(x => x.IdTree).HasColumnName(@"IdTree").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Template).WithMany(b => b.TemplateAndTrees).HasForeignKey(c => c.IdTemplate).WillCascadeOnDelete(false); // FK_Template_TemplateAndTree
            HasRequired(a => a.Tree).WithMany(b => b.TemplateAndTrees).HasForeignKey(c => c.IdTree).WillCascadeOnDelete(false); // FK_Tree_TemplateAndTree
        }
    }

    // TemplateModelResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateModelResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateModelResponse>
    {
        public TemplateModelResponseConfiguration()
            : this("dbo")
        {
        }

        public TemplateModelResponseConfiguration(string schema)
        {
            ToTable("TemplateModelResponse", schema);
            HasKey(x => x.IdTemplateResponse);

            Property(x => x.IdTemplateResponse).HasColumnName(@"IdTemplateResponse").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTemplate).HasColumnName(@"NameTemplate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameMnk).HasColumnName(@"NameMnk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DocMail).HasColumnName(@"DocMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NumberDoc).HasColumnName(@"NumberDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DataDoc).HasColumnName(@"DataDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TemplateQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateQuestion>
    {
        public TemplateQuestionConfiguration()
            : this("dbo")
        {
        }

        public TemplateQuestionConfiguration(string schema)
        {
            ToTable("TemplateQuestions", schema);
            HasKey(x => x.IdTemplateQuestions);

            Property(x => x.IdTemplateQuestions).HasColumnName(@"IdTemplateQuestions").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdGroupQuestions).HasColumnName(@"IdGroupQuestions").HasColumnType("int").IsRequired();
            Property(x => x.IdType).HasColumnName(@"IdType").HasColumnType("int").IsRequired();
            Property(x => x.InfoQuestions).HasColumnName(@"InfoQuestions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.GroupQuestion).WithMany(b => b.TemplateQuestions).HasForeignKey(c => c.IdGroupQuestions).WillCascadeOnDelete(false); // FK_GroupQuestions_TemplateQuestions
            HasRequired(a => a.TypeOrgAndQuestion).WithMany(b => b.TemplateQuestions).HasForeignKey(c => c.IdType).WillCascadeOnDelete(false); // FK_TypeOrgAndQuestions_TemplateQuestions
        }
    }

    // Tree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Tree>
    {
        public TreeConfiguration()
            : this("dbo")
        {
        }

        public TreeConfiguration(string schema)
        {
            ToTable("Tree", schema);
            HasKey(x => x.IdTree);

            Property(x => x.IdTree).HasColumnName(@"IdTree").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Tree_).HasColumnName(@"Tree").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdTypeTree).HasColumnName(@"IdTypeTree").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TypeTree).WithMany(b => b.Trees).HasForeignKey(c => c.IdTypeTree).WillCascadeOnDelete(false); // FK_Tree_TypeTree
        }
    }

    // TreeDataArea
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeDataAreaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TreeDataArea>
    {
        public TreeDataAreaConfiguration()
            : this("dbo")
        {
        }

        public TreeDataAreaConfiguration(string schema)
        {
            ToTable("TreeDataArea", schema);
            HasKey(x => x.IdTreeDataArea);

            Property(x => x.IdTreeDataArea).HasColumnName(@"IdTreeDataArea").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FullPathDataArea).HasColumnName(@"FullPathDataArea").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tree).WithOptional(b => b.TreeDataArea).WillCascadeOnDelete(false); // FK_Tree_TreeDataArea
        }
    }

    // TreeExport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeExportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TreeExport>
    {
        public TreeExportConfiguration()
            : this("dbo")
        {
        }

        public TreeExportConfiguration(string schema)
        {
            ToTable("TreeExport", schema);
            HasKey(x => x.IdTreeExport);

            Property(x => x.IdTreeExport).HasColumnName(@"IdTreeExport").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FullPathExport).HasColumnName(@"FullPathExport").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tree).WithOptional(b => b.TreeExport).WillCascadeOnDelete(false); // FK_Tree_TreeExport
        }
    }

    // TreeFilter
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeFilterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TreeFilter>
    {
        public TreeFilterConfiguration()
            : this("dbo")
        {
        }

        public TreeFilterConfiguration(string schema)
        {
            ToTable("TreeFilter", schema);
            HasKey(x => x.IdTreeFilter);

            Property(x => x.IdTreeFilter).HasColumnName(@"IdTreeFilter").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FullPathFilter).HasColumnName(@"FullPathFilter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tree).WithOptional(b => b.TreeFilter).WillCascadeOnDelete(false); // FK_Tree_TreeFilter
        }
    }

    // TreeGrid
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeGridConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TreeGrid>
    {
        public TreeGridConfiguration()
            : this("dbo")
        {
        }

        public TreeGridConfiguration(string schema)
        {
            ToTable("TreeGrid", schema);
            HasKey(x => x.IdTreeGrid);

            Property(x => x.IdTreeGrid).HasColumnName(@"IdTreeGrid").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FullPathGrid).HasColumnName(@"FullPathGrid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.GridToIndexParameter).HasColumnName(@"GridToIndexParameter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tree).WithOptional(b => b.TreeGrid).WillCascadeOnDelete(false); // FK_Tree_TreeGrid
        }
    }

    // TreeUpdate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeUpdateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TreeUpdate>
    {
        public TreeUpdateConfiguration()
            : this("dbo")
        {
        }

        public TreeUpdateConfiguration(string schema)
        {
            ToTable("TreeUpdate", schema);
            HasKey(x => x.IdTreeUpdate);

            Property(x => x.IdTreeUpdate).HasColumnName(@"IdTreeUpdate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FullPathUpdate).HasColumnName(@"FullPathUpdate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tree).WithOptional(b => b.TreeUpdate).WillCascadeOnDelete(false); // FK_Tree_TreeUpdate
        }
    }

    // TypeObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeObjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeObject>
    {
        public TypeObjectConfiguration()
            : this("dbo")
        {
        }

        public TypeObjectConfiguration(string schema)
        {
            ToTable("TypeObject", schema);
            HasKey(x => x.IdObject);

            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TypeObject_).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TypeOrgAndQuestions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeOrgAndQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeOrgAndQuestion>
    {
        public TypeOrgAndQuestionConfiguration()
            : this("dbo")
        {
        }

        public TypeOrgAndQuestionConfiguration(string schema)
        {
            ToTable("TypeOrgAndQuestions", schema);
            HasKey(x => x.IdType);

            Property(x => x.IdType).HasColumnName(@"IdType").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameType).HasColumnName(@"NameType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TypeTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeTreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeTree>
    {
        public TypeTreeConfiguration()
            : this("dbo")
        {
        }

        public TypeTreeConfiguration(string schema)
        {
            ToTable("TypeTree", schema);
            HasKey(x => x.IdTypeTree);

            Property(x => x.IdTypeTree).HasColumnName(@"IdTypeTree").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTypeTree).HasColumnName(@"NameTypeTree").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // UlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UlFace>
    {
        public UlFaceConfiguration()
            : this("dbo")
        {
        }

        public UlFaceConfiguration(string schema)
        {
            ToTable("UlFace", schema);
            HasKey(x => x.IdUl);

            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Ogrn).HasColumnName(@"Ogrn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(18);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateResh).HasColumnName(@"DateResh").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateReshReorg).HasColumnName(@"DateReshReorg").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // UlFaceAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UlFaceAll>
    {
        public UlFaceAllConfiguration()
            : this("dbo")
        {
        }

        public UlFaceAllConfiguration(string schema)
        {
            ToTable("UlFaceAll", schema);
            HasKey(x => new { x.LogicsButton, x.IdUl, x.IdNum, x.Fid, x.Inn, x.NameFull, x.NameSmall });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusFull).HasColumnName(@"StatusFull").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Ogrn).HasColumnName(@"Ogrn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(18);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // UlFaceAllSales
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceAllSaleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UlFaceAllSale>
    {
        public UlFaceAllSaleConfiguration()
            : this("dbo")
        {
        }

        public UlFaceAllSaleConfiguration(string schema)
        {
            ToTable("UlFaceAllSales", schema);
            HasKey(x => new { x.LogicsButton, x.IdUl, x.IdNum, x.Fid, x.Inn, x.NameFull, x.NameSmall });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusFull).HasColumnName(@"StatusFull").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Ogrn).HasColumnName(@"Ogrn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(18);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // UlFaceSalesBookBank
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceSalesBookBankConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UlFaceSalesBookBank>
    {
        public UlFaceSalesBookBankConfiguration()
            : this("dbo")
        {
        }

        public UlFaceSalesBookBankConfiguration(string schema)
        {
            ToTable("UlFaceSalesBookBank", schema);
            HasKey(x => new { x.LogicsButton, x.IdUl, x.IdNum, x.Fid, x.Inn, x.NameFull, x.NameSmall });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusFull).HasColumnName(@"StatusFull").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Ogrn).HasColumnName(@"Ogrn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(18);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // UserOrg
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UserOrgConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserOrg>
    {
        public UserOrgConfiguration()
            : this("dbo")
        {
        }

        public UserOrgConfiguration(string schema)
        {
            ToTable("UserOrg", schema);
            HasKey(x => x.IdUser);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdOrg).HasColumnName(@"IdOrg").HasColumnType("int").IsRequired();
            Property(x => x.InnUser).HasColumnName(@"InnUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdProcedure).HasColumnName(@"IdProcedure").HasColumnType("int").IsOptional();
            Property(x => x.Family).HasColumnName(@"Family").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Surname).HasColumnName(@"Surname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("datetime").IsOptional();
            Property(x => x.VidDoc).HasColumnName(@"VidDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Seria).HasColumnName(@"Seria").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIn).HasColumnName(@"DateIn").HasColumnType("datetime").IsOptional();
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.WhoIn).HasColumnName(@"WhoIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Location).HasColumnName(@"Location").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsError).HasColumnName(@"IsError").HasColumnType("bit").IsRequired();
            Property(x => x.IsGood).HasColumnName(@"IsGood").HasColumnType("bit").IsRequired();
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.MainOrg).WithMany(b => b.UserOrgs).HasForeignKey(c => c.IdOrg).WillCascadeOnDelete(false); // FK_MainOrg_UserOrg
        }
    }

    // ViewRegisterDocumentsPrinting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ViewRegisterDocumentsPrintingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ViewRegisterDocumentsPrinting>
    {
        public ViewRegisterDocumentsPrintingConfiguration()
            : this("dbo")
        {
        }

        public ViewRegisterDocumentsPrintingConfiguration(string schema)
        {
            ToTable("ViewRegisterDocumentsPrinting", schema);
            HasKey(x => new { x.LogicsButton, x.IdDocument, x.CountPage, x.DateCreate });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdDocument).HasColumnName(@"IdDocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MachineName).HasColumnName(@"MachineName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TabelNumberUser).HasColumnName(@"TabelNumberUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateDocument).HasColumnName(@"DateDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NumberDocument).HasColumnName(@"NumberDocument").HasColumnType("int").IsOptional();
            Property(x => x.FormKnd).HasColumnName(@"FormKnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.RegNumberDocumetGuid).HasColumnName(@"RegNumberDocumetGuid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountPage).HasColumnName(@"CountPage").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    #endregion

}
// </auto-generated>

