

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "EfDatabaseAutomation\App.config"
//     Connection String Name: "DatabaseAutomation"
//     Connection String:      "Data Source=i7751-app127;Initial Catalog=Automation;Integrated Security=True;MultipleActiveResultSets=True"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Enterprise Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 10.50.6560.0

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5

using Newtonsoft.Json;

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace EfDatabaseAutomation.Automation.Base
{

    #region Unit of work

    public interface IAutomation : System.IDisposable
    {
        System.Data.Entity.DbSet<AddUlFace> AddUlFaces { get; set; } // AddUlFace
        System.Data.Entity.DbSet<BranchUlFace> BranchUlFaces { get; set; } // BranchUlFace
        System.Data.Entity.DbSet<CashBankAllUlFace> CashBankAllUlFaces { get; set; } // CashBankAllUlFace
        System.Data.Entity.DbSet<CashUlFace> CashUlFaces { get; set; } // CashUlFace
        System.Data.Entity.DbSet<DeclarationData> DeclarationDatas { get; set; } // DeclarationData
        System.Data.Entity.DbSet<DeclarationUl> DeclarationUls { get; set; } // DeclarationUl
        System.Data.Entity.DbSet<Field> Fields { get; set; } // Fields
        System.Data.Entity.DbSet<FlFace> FlFaces { get; set; } // FlFace
        System.Data.Entity.DbSet<HistoriUlFace> HistoriUlFaces { get; set; } // HistoriUlFace
        System.Data.Entity.DbSet<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl
        System.Data.Entity.DbSet<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl
        System.Data.Entity.DbSet<IndividualCardsUlFace> IndividualCardsUlFaces { get; set; } // IndividualCardsUlFace
        System.Data.Entity.DbSet<InfoViewAutomation> InfoViewAutomations { get; set; } // InfoViewAutomation
        System.Data.Entity.DbSet<LogicsSelectAutomation> LogicsSelectAutomations { get; set; } // LogicsSelectAutomation
        System.Data.Entity.DbSet<LogPreCheck> LogPreChecks { get; set; } // LogPreCheck
        System.Data.Entity.DbSet<ModelGetPost> ModelGetPosts { get; set; } // ModelGetPost
        System.Data.Entity.DbSet<ModelTree> ModelTrees { get; set; } // ModelTree
        System.Data.Entity.DbSet<ParameterProcedureWeb> ParameterProcedureWebs { get; set; } // ParameterProcedureWeb
        System.Data.Entity.DbSet<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh
        System.Data.Entity.DbSet<StrngthUlFace> StrngthUlFaces { get; set; } // StrngthUlFace
        System.Data.Entity.DbSet<SvedAccoutingUlFace> SvedAccoutingUlFaces { get; set; } // SvedAccoutingUlFace
        System.Data.Entity.DbSet<TaxJournal> TaxJournals { get; set; } // TaxJournal
        System.Data.Entity.DbSet<TaxJournal121> TaxJournal121 { get; set; } // TaxJournal121
        System.Data.Entity.DbSet<TaxJournal121AutoWebPage> TaxJournal121AutoWebPage { get; set; } // TaxJournal121AutoWebPage
        System.Data.Entity.DbSet<TaxJournalAutoReport> TaxJournalAutoReports { get; set; } // TaxJournalAutoReport
        System.Data.Entity.DbSet<TaxJournalAutoWebPage> TaxJournalAutoWebPages { get; set; } // TaxJournalAutoWebPage
        System.Data.Entity.DbSet<Tree> Trees { get; set; } // Tree
        System.Data.Entity.DbSet<TypeObject> TypeObjects { get; set; } // TypeObject
        System.Data.Entity.DbSet<UlFace> UlFaces { get; set; } // UlFace
        System.Data.Entity.DbSet<UlFaceAll> UlFaceAlls { get; set; } // UlFaceAll

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Automation : System.Data.Entity.DbContext, IAutomation
    {
        public System.Data.Entity.DbSet<AddUlFace> AddUlFaces { get; set; } // AddUlFace
        public System.Data.Entity.DbSet<BranchUlFace> BranchUlFaces { get; set; } // BranchUlFace
        public System.Data.Entity.DbSet<CashBankAllUlFace> CashBankAllUlFaces { get; set; } // CashBankAllUlFace
        public System.Data.Entity.DbSet<CashUlFace> CashUlFaces { get; set; } // CashUlFace
        public System.Data.Entity.DbSet<DeclarationData> DeclarationDatas { get; set; } // DeclarationData
        public System.Data.Entity.DbSet<DeclarationUl> DeclarationUls { get; set; } // DeclarationUl
        public System.Data.Entity.DbSet<Field> Fields { get; set; } // Fields
        public System.Data.Entity.DbSet<FlFace> FlFaces { get; set; } // FlFace
        public System.Data.Entity.DbSet<HistoriUlFace> HistoriUlFaces { get; set; } // HistoriUlFace
        public System.Data.Entity.DbSet<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl
        public System.Data.Entity.DbSet<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl
        public System.Data.Entity.DbSet<IndividualCardsUlFace> IndividualCardsUlFaces { get; set; } // IndividualCardsUlFace
        public System.Data.Entity.DbSet<InfoViewAutomation> InfoViewAutomations { get; set; } // InfoViewAutomation
        public System.Data.Entity.DbSet<LogicsSelectAutomation> LogicsSelectAutomations { get; set; } // LogicsSelectAutomation
        public System.Data.Entity.DbSet<LogPreCheck> LogPreChecks { get; set; } // LogPreCheck
        public System.Data.Entity.DbSet<ModelGetPost> ModelGetPosts { get; set; } // ModelGetPost
        public System.Data.Entity.DbSet<ModelTree> ModelTrees { get; set; } // ModelTree
        public System.Data.Entity.DbSet<ParameterProcedureWeb> ParameterProcedureWebs { get; set; } // ParameterProcedureWeb
        public System.Data.Entity.DbSet<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh
        public System.Data.Entity.DbSet<StrngthUlFace> StrngthUlFaces { get; set; } // StrngthUlFace
        public System.Data.Entity.DbSet<SvedAccoutingUlFace> SvedAccoutingUlFaces { get; set; } // SvedAccoutingUlFace
        public System.Data.Entity.DbSet<TaxJournal> TaxJournals { get; set; } // TaxJournal
        public System.Data.Entity.DbSet<TaxJournal121> TaxJournal121 { get; set; } // TaxJournal121
        public System.Data.Entity.DbSet<TaxJournal121AutoWebPage> TaxJournal121AutoWebPage { get; set; } // TaxJournal121AutoWebPage
        public System.Data.Entity.DbSet<TaxJournalAutoReport> TaxJournalAutoReports { get; set; } // TaxJournalAutoReport
        public System.Data.Entity.DbSet<TaxJournalAutoWebPage> TaxJournalAutoWebPages { get; set; } // TaxJournalAutoWebPage
        public System.Data.Entity.DbSet<Tree> Trees { get; set; } // Tree
        public System.Data.Entity.DbSet<TypeObject> TypeObjects { get; set; } // TypeObject
        public System.Data.Entity.DbSet<UlFace> UlFaces { get; set; } // UlFace
        public System.Data.Entity.DbSet<UlFaceAll> UlFaceAlls { get; set; } // UlFaceAll

        static Automation()
        {
            System.Data.Entity.Database.SetInitializer<Automation>(null);
        }

        public Automation()
            : base("Name=DatabaseAutomation")
        {
        }

        public Automation(string connectionString)
            : base(connectionString)
        {
        }

        public Automation(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public Automation(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public Automation(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AddUlFaceConfiguration());
            modelBuilder.Configurations.Add(new BranchUlFaceConfiguration());
            modelBuilder.Configurations.Add(new CashBankAllUlFaceConfiguration());
            modelBuilder.Configurations.Add(new CashUlFaceConfiguration());
            modelBuilder.Configurations.Add(new DeclarationDataConfiguration());
            modelBuilder.Configurations.Add(new DeclarationUlConfiguration());
            modelBuilder.Configurations.Add(new FieldConfiguration());
            modelBuilder.Configurations.Add(new FlFaceConfiguration());
            modelBuilder.Configurations.Add(new HistoriUlFaceConfiguration());
            modelBuilder.Configurations.Add(new ImZmTrFlConfiguration());
            modelBuilder.Configurations.Add(new ImZmTrUlConfiguration());
            modelBuilder.Configurations.Add(new IndividualCardsUlFaceConfiguration());
            modelBuilder.Configurations.Add(new InfoViewAutomationConfiguration());
            modelBuilder.Configurations.Add(new LogicsSelectAutomationConfiguration());
            modelBuilder.Configurations.Add(new LogPreCheckConfiguration());
            modelBuilder.Configurations.Add(new ModelGetPostConfiguration());
            modelBuilder.Configurations.Add(new ModelTreeConfiguration());
            modelBuilder.Configurations.Add(new ParameterProcedureWebConfiguration());
            modelBuilder.Configurations.Add(new RukAndUcrhConfiguration());
            modelBuilder.Configurations.Add(new StrngthUlFaceConfiguration());
            modelBuilder.Configurations.Add(new SvedAccoutingUlFaceConfiguration());
            modelBuilder.Configurations.Add(new TaxJournalConfiguration());
            modelBuilder.Configurations.Add(new TaxJournal121Configuration());
            modelBuilder.Configurations.Add(new TaxJournal121AutoWebPageConfiguration());
            modelBuilder.Configurations.Add(new TaxJournalAutoReportConfiguration());
            modelBuilder.Configurations.Add(new TaxJournalAutoWebPageConfiguration());
            modelBuilder.Configurations.Add(new TreeConfiguration());
            modelBuilder.Configurations.Add(new TypeObjectConfiguration());
            modelBuilder.Configurations.Add(new UlFaceConfiguration());
            modelBuilder.Configurations.Add(new UlFaceAllConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AddUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new BranchUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new CashBankAllUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new CashUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationDataConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclarationUlConfiguration(schema));
            modelBuilder.Configurations.Add(new FieldConfiguration(schema));
            modelBuilder.Configurations.Add(new FlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new HistoriUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new ImZmTrFlConfiguration(schema));
            modelBuilder.Configurations.Add(new ImZmTrUlConfiguration(schema));
            modelBuilder.Configurations.Add(new IndividualCardsUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoViewAutomationConfiguration(schema));
            modelBuilder.Configurations.Add(new LogicsSelectAutomationConfiguration(schema));
            modelBuilder.Configurations.Add(new LogPreCheckConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelGetPostConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelTreeConfiguration(schema));
            modelBuilder.Configurations.Add(new ParameterProcedureWebConfiguration(schema));
            modelBuilder.Configurations.Add(new RukAndUcrhConfiguration(schema));
            modelBuilder.Configurations.Add(new StrngthUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new SvedAccoutingUlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournalConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournal121Configuration(schema));
            modelBuilder.Configurations.Add(new TaxJournal121AutoWebPageConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournalAutoReportConfiguration(schema));
            modelBuilder.Configurations.Add(new TaxJournalAutoWebPageConfiguration(schema));
            modelBuilder.Configurations.Add(new TreeConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeObjectConfiguration(schema));
            modelBuilder.Configurations.Add(new UlFaceConfiguration(schema));
            modelBuilder.Configurations.Add(new UlFaceAllConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class AutomationFactory : System.Data.Entity.Infrastructure.IDbContextFactory<Automation>
    {
        public Automation Create()
        {
            return new Automation();
        }
    }

    #endregion

    #region POCO classes

    // AddUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public string InnUl { get; set; } // InnUl (length: 12)
        public string FullStatus { get; set; } // FullStatus (length: 124)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ModelGetPosts where [ModelGetPost].[IdUl] point to this entity (FK_AddUlFace_ModelGetPost)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ModelGetPost> ModelGetPosts { get; set; } // ModelGetPost.FK_AddUlFace_ModelGetPost

        public AddUlFace()
        {
            DateCreate = System.DateTime.Now;
            ModelGetPosts = new System.Collections.Generic.List<ModelGetPost>();
        }
    }

    // BranchUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BranchUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public System.DateTime? DataCreateBranch { get; set; } // DataCreateBranch
        public System.DateTime? DataCloseBranch { get; set; } // DataCloseBranch
        public string IndexAddress { get; set; } // IndexAddress (length: 8)
        public string RegionAddress { get; set; } // RegionAddress (length: 1024)
        public string DistrictAddress { get; set; } // DistrictAddress (length: 1024)
        public string TownAddress { get; set; } // TownAddress (length: 1024)
        public string LocalityAddress { get; set; } // LocalityAddress (length: 1024)
        public string StreetAddress { get; set; } // StreetAddress (length: 1024)
        public string HouseAddress { get; set; } // HouseAddress (length: 1024)
        public string BodyAddress { get; set; } // BodyAddress (length: 1024)
        public string ApartmentAddress { get; set; } // ApartmentAddress (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [BranchUlFace].([IdUl]) (FK_UlFace_BranchUlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_UlFace_BranchUlFace

        public BranchUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // CashBankAllUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashBankAllUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum
        public System.DateTime? DateWay { get; set; } // DateWay
        public int? CodeNo { get; set; } // CodeNo
        public System.DateTime? DatePriem { get; set; } // DatePriem
        public string NameBank { get; set; } // NameBank (length: 1024)
        public string Bik { get; set; } // Bik (length: 1024)
        public string InnBank { get; set; } // InnBank (length: 12)
        public string KppBank { get; set; } // KppBank (length: 12)
        public string NumberCash { get; set; } // NumberCash (length: 32)
        public string Cash { get; set; } // Cash (length: 32)
        public System.DateTime? DateStartPeriod { get; set; } // DateStartPeriod
        public System.DateTime? DateFinishPeriod { get; set; } // DateFinishPeriod
        public double? CashScoreStartPeriod { get; set; } // CashScoreStartPeriod
        public double? CashScoreFinishPeriod { get; set; } // CashScoreFinishPeriod
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [CashBankAllUlFace].([IdUl]) (FK_UlFace_CashBankAllUlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_UlFace_CashBankAllUlFace

        public CashBankAllUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // CashUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string CashNumber { get; set; } // CashNumber (Primary key) (length: 1024)
        public System.DateTime? DataOpenCash { get; set; } // DataOpenCash
        public System.DateTime? DataClosedCash { get; set; } // DataClosedCash
        public string TypeCash { get; set; } // TypeCash (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [CashUlFace].([IdUl]) (FK_UlFace_CashUlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_UlFace_CashUlFace

        public CashUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DeclarationData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationData
    {
        public int Id { get; set; } // Id (Primary key)
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public string CodeString { get; set; } // CodeString (length: 1024)
        public string NameParametr { get; set; } // NameParametr (length: 1024)
        public string CodeParametr { get; set; } // CodeParametr (length: 1024)
        public string DataFace { get; set; } // DataFace (length: 1024)
        public string DataInspector { get; set; } // DataInspector (length: 1024)
        public string Error { get; set; } // Error (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent DeclarationUl pointed by [DeclarationData].([RegNumDecl]) (FK_DeclarationData_DeclarationUl)
        /// </summary>
        public virtual DeclarationUl DeclarationUl { get; set; } // FK_DeclarationData_DeclarationUl

        public DeclarationData()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DeclarationUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationUl
    {
        public int Id { get; set; } // Id
        public int? IdUl { get; set; } // IdUl
        public long RegNumDecl { get; set; } // RegNumDecl (Primary key)
        public double Psumm { get; set; } // Psumm
        public string Knd { get; set; } // Knd (length: 12)
        public string NameDocument { get; set; } // NameDocument (length: 1024)
        public string VidDoc { get; set; } // VidDoc (length: 1024)
        public int NumberKor { get; set; } // NumberKor
        public string Period { get; set; } // Period (length: 1024)
        public int? God { get; set; } // God
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child DeclarationDatas where [DeclarationData].[RegNumDecl] point to this entity (FK_DeclarationData_DeclarationUl)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<DeclarationData> DeclarationDatas { get; set; } // DeclarationData.FK_DeclarationData_DeclarationUl

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [DeclarationUl].([IdUl]) (FK_DeclarationUl_UlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_DeclarationUl_UlFace

        public DeclarationUl()
        {
            DateCreate = System.DateTime.Now;
            DeclarationDatas = new System.Collections.Generic.List<DeclarationData>();
        }
    }

    // Fields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Field
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdTree { get; set; } // IdTree
        public string Fields { get; set; } // Fields (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Tree pointed by [Fields].([IdTree]) (FK_Tree_Fields)
        /// </summary>
        public virtual Tree Tree { get; set; } // FK_Tree_Fields

        public Field()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // FlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFace
    {
        public int IdFl { get; set; } // IdFl (Primary key)
        public string Inn { get; set; } // Inn (length: 12)
        public string NameFl { get; set; } // NameFl (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ImZmTrFls where [ImZmTrFl].[IdFl] point to this entity (FK_ImZmTrFl_FlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl.FK_ImZmTrFl_FlFace
        /// <summary>
        /// Child RukAndUcrhs where [RukAndUcrh].[IdFl] point to this entity (FK_RukAndUcrh_FlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh.FK_RukAndUcrh_FlFace

        public FlFace()
        {
            DateCreate = System.DateTime.Now;
            ImZmTrFls = new System.Collections.Generic.List<ImZmTrFl>();
            RukAndUcrhs = new System.Collections.Generic.List<RukAndUcrh>();
        }
    }

    // HistoriUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HistoriUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public string TypeObject { get; set; } // TypeObject (length: 1024)
        public string KppObject { get; set; } // KppObject (length: 1024)
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string AddressObject { get; set; } // AddressObject (length: 1024)
        public int KodeNo { get; set; } // KodeNo (Primary key)
        public System.DateTime? DateNoStart { get; set; } // DateNoStart
        public System.DateTime? DateNoFinish { get; set; } // DateNoFinish
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [HistoriUlFace].([IdUl]) (FK_HistoriUlFace_UlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_HistoriUlFace_UlFace

        public HistoriUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrFl
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdFl { get; set; } // IdFl
        public long IdNum { get; set; } // IdNum
        public int IdObject { get; set; } // IdObject
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string ReasonSettingStart { get; set; } // ReasonSettingStart (length: 1024)
        public System.DateTime? DateOne { get; set; } // DateOne
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFactStart { get; set; } // DateFactStart
        public string ReasonSettingFinish { get; set; } // ReasonSettingFinish (length: 1024)
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public System.DateTime? DateFinishNo { get; set; } // DateFinishNo
        public System.DateTime? DateFactFinish { get; set; } // DateFactFinish
        public string AddresObject { get; set; } // AddresObject (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [ImZmTrFl].([IdFl]) (FK_ImZmTrFl_FlFace)
        /// </summary>
        public virtual FlFace FlFace { get; set; } // FK_ImZmTrFl_FlFace

        /// <summary>
        /// Parent TypeObject pointed by [ImZmTrFl].([IdObject]) (FK_TypeObject_ImZmTrFl)
        /// </summary>
        public virtual TypeObject TypeObject { get; set; } // FK_TypeObject_ImZmTrFl

        public ImZmTrFl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ImZmTrUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrUl
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum
        public int IdObject { get; set; } // IdObject
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string ReasonSettingStart { get; set; } // ReasonSettingStart (length: 1024)
        public System.DateTime? DateOne { get; set; } // DateOne
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFactStart { get; set; } // DateFactStart
        public string ReasonSettingFinish { get; set; } // ReasonSettingFinish (length: 1024)
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public System.DateTime? DateFinishNo { get; set; } // DateFinishNo
        public System.DateTime? DateFactFinish { get; set; } // DateFactFinish
        public string AddresObject { get; set; } // AddresObject (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent TypeObject pointed by [ImZmTrUl].([IdObject]) (FK_TypeObject_ImZmTrUl)
        /// </summary>
        public virtual TypeObject TypeObject { get; set; } // FK_TypeObject_ImZmTrUl

        /// <summary>
        /// Parent UlFace pointed by [ImZmTrUl].([IdUl]) (FK_UlFace_ImZmTrUl)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_UlFace_ImZmTrUl

        public ImZmTrUl()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // IndividualCardsUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IndividualCardsUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public string ReportAll { get; set; } // ReportAll
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [IndividualCardsUlFace].([IdUl]) (FK_IndividualCardsUlFace_UlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_IndividualCardsUlFace_UlFace

        public IndividualCardsUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // InfoViewAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InfoViewAutomation
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameView { get; set; } // NameView (length: 64)
        public string NameViewColumns { get; set; } // NameViewColumns (length: 64)
        public string InfoColumn { get; set; } // InfoColumn (length: 256)
        public string FormatView { get; set; } // FormatView (length: 16)
        public bool? IsVisible { get; set; } // IsVisible
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public InfoViewAutomation()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // LogicsSelectAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogicsSelectAutomation
    {
        public int Id { get; set; } // Id (Primary key)
        public string SelectInfo { get; set; } // SelectInfo (length: 512)
        public string SelectedParametr { get; set; } // SelectedParametr
        public string SelectUser { get; set; } // SelectUser
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public LogicsSelectAutomation()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // LogPreCheck
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogPreCheck
    {
        public int Id { get; set; } // Id (Primary key)
        public string UserTabelNum { get; set; } // UserTabelNum (Primary key) (length: 32)
        public string Method { get; set; } // Method (length: 32)
        public string StatusMethod { get; set; } // StatusMethod (length: 32)
        public string ErrorLog { get; set; } // ErrorLog
        public System.DateTime? Datacreate { get; set; } // Datacreate

        public LogPreCheck()
        {
            Datacreate = System.DateTime.Now;
        }
    }

    // ModelGetPost
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelGetPost
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public int IdTreModel { get; set; } // IdTreModel
        public string StatusModel { get; set; } // StatusModel (length: 124)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent AddUlFace pointed by [ModelGetPost].([IdUl]) (FK_AddUlFace_ModelGetPost)
        /// </summary>
        public virtual AddUlFace AddUlFace { get; set; } // FK_AddUlFace_ModelGetPost

        /// <summary>
        /// Parent Tree pointed by [ModelGetPost].([IdTreModel]) (FK_Tree_ModelGetPost)
        /// </summary>
        public virtual Tree Tree { get; set; } // FK_Tree_ModelGetPost

        public ModelGetPost()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ModelTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelTree
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdModel { get; set; } // IdModel (Primary key)
        public string InnUl { get; set; } // InnUl (length: 12)
        public string Tree { get; set; } // Tree (length: 1024)
        public string StatusModel { get; set; } // StatusModel (length: 124)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // ParameterProcedureWeb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ParameterProcedureWeb
    {
        public int Id { get; set; } // Id (Primary key)
        public string SelectInfoModel { get; set; } // SelectInfoModel (length: 512)
        public string SelectParameterTable { get; set; } // SelectParameterTable
        public string ModelClassFind { get; set; } // ModelClassFind (length: 512)
        public string ParameterProcedure { get; set; } // ParameterProcedure
        public string SelectUser { get; set; } // SelectUser
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public ParameterProcedureWeb()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // RukAndUcrh
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RukAndUcrh
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdUl { get; set; } // IdUl
        public int IdFl { get; set; } // IdFl
        public string NameFl { get; set; } // NameFl (length: 1024)
        public string Inn { get; set; } // Inn (length: 12)
        public string Priznak { get; set; } // Priznak (length: 1024)
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent FlFace pointed by [RukAndUcrh].([IdFl]) (FK_RukAndUcrh_FlFace)
        /// </summary>
        public virtual FlFace FlFace { get; set; } // FK_RukAndUcrh_FlFace

        /// <summary>
        /// Parent UlFace pointed by [RukAndUcrh].([IdUl]) (FK_RukAndUcrh_UlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_RukAndUcrh_UlFace

        public RukAndUcrh()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // StrngthUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StrngthUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public System.DateTime? DataDocument { get; set; } // DataDocument
        public int? StrngthFace { get; set; } // StrngthFace
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [StrngthUlFace].([IdUl]) (FK_UlFace_StrngthUlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_UlFace_StrngthUlFace

        public StrngthUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SvedAccoutingUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedAccoutingUlFace
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUl { get; set; } // IdUl
        public long IdNum { get; set; } // IdNum (Primary key)
        public string TypeObject { get; set; } // TypeObject (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameObject { get; set; } // NameObject (length: 1024)
        public string AddressObject { get; set; } // AddressObject (length: 1024)
        public int? CodeNalog { get; set; } // CodeNalog
        public System.DateTime? DateBegin { get; set; } // DateBegin
        public System.DateTime? DateFactBegin { get; set; } // DateFactBegin
        public string CodeSppuno { get; set; } // CodeSPPUNO (length: 1024)
        public string CauseBegin { get; set; } // CauseBegin (length: 1024)
        public System.DateTime? DateEnd { get; set; } // DateEnd
        public System.DateTime? DateFactEnd { get; set; } // DateFactEnd
        public string CodeSppunoEnd { get; set; } // CodeSPPUNOEnd (length: 1024)
        public string CauseEnd { get; set; } // CauseEnd (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent UlFace pointed by [SvedAccoutingUlFace].([IdUl]) (FK_UlFace_SvedAccoutingUlFace)
        /// </summary>
        public virtual UlFace UlFace { get; set; } // FK_UlFace_SvedAccoutingUlFace

        public SvedAccoutingUlFace()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // TaxJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal
    {
        public int Id { get; set; } // Id (Primary key)
        public string Color { get; set; } // Color (length: 12)
        public int? IdDelo { get; set; } // IdDelo
        public System.DateTime? DateError { get; set; } // DateError
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string FullPath { get; set; } // FullPath (length: 1024)
        public string NameFile { get; set; } // NameFile (length: 128)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public TaxJournal()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TaxJournal121
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121
    {
        public int Id { get; set; } // Id (Primary key)
        public string GlobalColor { get; set; } // GlobalColor (length: 12)
        public string GlobalProcessColor { get; set; } // GlobalProcessColor (length: 12)
        public string ColorDoc { get; set; } // ColorDoc (length: 12)
        public int? RegNumDeclaration { get; set; } // RegNumDeclaration
        public string Period { get; set; } // Period (length: 128)
        public int? God { get; set; } // God
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public int? IdComplex { get; set; } // IdComplex
        public System.DateTime? DateStartCheck { get; set; } // DateStartCheck
        public System.DateTime? DateFinishCheck { get; set; } // DateFinishCheck
        public System.DateTime? DateStartDeclaration { get; set; } // DateStartDeclaration
        public System.DateTime? DateFinishDeclaration { get; set; } // DateFinishDeclaration
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Extensions { get; set; } // Extensions (length: 10)
        public string Mime { get; set; } // Mime (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public TaxJournal121()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TaxJournal121AutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121AutoWebPage
    {
        public int Id { get; set; } // Id (Primary key)
        public int? RegNumDeclaration { get; set; } // RegNumDeclaration
        public string Period { get; set; } // Period (length: 128)
        public int? God { get; set; } // God
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Inn { get; set; } // Inn (length: 12)
        public System.DateTime? DateStartCheck { get; set; } // DateStartCheck
        public System.DateTime? DateFinishCheck { get; set; } // DateFinishCheck
        public System.DateTime? DateStartDeclaration { get; set; } // DateStartDeclaration
        public System.DateTime? DateFinishDeclaration { get; set; } // DateFinishDeclaration
        public int? CounDay { get; set; } // CounDay
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Extensions { get; set; } // Extensions (length: 10)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // TaxJournalAutoReport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoReport
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdDelo { get; set; } // IdDelo
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // isTks
        public bool? IsMail { get; set; } // isMail
        public bool? IsLk3 { get; set; } // isLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string Extensions { get; set; } // Extensions (length: 10)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // TaxJournalAutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoWebPage
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdDelo { get; set; } // IdDelo
        public string LoginUser { get; set; } // LoginUser (length: 1024)
        public string Inn { get; set; } // Inn (length: 12)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string NameFace { get; set; } // NameFace (length: 512)
        public string Fid { get; set; } // Fid (length: 512)
        public System.DateTime? DateIzveshenie { get; set; } // DateIzveshenie
        public bool? IsTks { get; set; } // IsTks
        public bool? IsMail { get; set; } // IsMail
        public bool? IsLk3 { get; set; } // IsLk3
        public string TypeDocument { get; set; } // TypeDocument (length: 128)
        public string MessageInfo { get; set; } // MessageInfo (length: 512)
        public string Extensions { get; set; } // Extensions (length: 10)
        public bool? IsPrint { get; set; } // IsPrint
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // Tree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Tree
    {
        public int Id { get; set; } // Id (Primary key)
        public string Tree_ { get; set; } // Tree (length: 1024)
        public int TypeTree { get; set; } // TypeTree
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Fields where [Fields].[IdTree] point to this entity (FK_Tree_Fields)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Field> Fields { get; set; } // Fields.FK_Tree_Fields
        /// <summary>
        /// Child ModelGetPosts where [ModelGetPost].[IdTreModel] point to this entity (FK_Tree_ModelGetPost)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ModelGetPost> ModelGetPosts { get; set; } // ModelGetPost.FK_Tree_ModelGetPost

        public Tree()
        {
            DateCreate = System.DateTime.Now;
            Fields = new System.Collections.Generic.List<Field>();
            ModelGetPosts = new System.Collections.Generic.List<ModelGetPost>();
        }
    }

    // TypeObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeObject
    {
        public int IdObject { get; set; } // IdObject (Primary key)
        public string TypeObject_ { get; set; } // TypeObject (length: 1024)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ImZmTrFls where [ImZmTrFl].[IdObject] point to this entity (FK_TypeObject_ImZmTrFl)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ImZmTrFl> ImZmTrFls { get; set; } // ImZmTrFl.FK_TypeObject_ImZmTrFl
        /// <summary>
        /// Child ImZmTrUls where [ImZmTrUl].[IdObject] point to this entity (FK_TypeObject_ImZmTrUl)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl.FK_TypeObject_ImZmTrUl

        public TypeObject()
        {
            DateCreate = System.DateTime.Now;
            ImZmTrFls = new System.Collections.Generic.List<ImZmTrFl>();
            ImZmTrUls = new System.Collections.Generic.List<ImZmTrUl>();
        }
    }

    // UlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFace
    {
        public int IdUl { get; set; } // IdUl (Primary key)
        public long IdNum { get; set; } // IdNum
        public long Fid { get; set; } // Fid
        public string Inn { get; set; } // Inn (length: 12)
        public string NameFull { get; set; } // NameFull (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Ogrn { get; set; } // Ogrn (length: 18)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public string NameSmall { get; set; } // NameSmall (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
        public System.DateTime? DateResh { get; set; } // DateResh
        public System.DateTime? DateReshReorg { get; set; } // DateReshReorg
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child BranchUlFaces where [BranchUlFace].[IdUl] point to this entity (FK_UlFace_BranchUlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BranchUlFace> BranchUlFaces { get; set; } // BranchUlFace.FK_UlFace_BranchUlFace
        /// <summary>
        /// Child CashBankAllUlFaces where [CashBankAllUlFace].[IdUl] point to this entity (FK_UlFace_CashBankAllUlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<CashBankAllUlFace> CashBankAllUlFaces { get; set; } // CashBankAllUlFace.FK_UlFace_CashBankAllUlFace
        /// <summary>
        /// Child CashUlFaces where [CashUlFace].[IdUl] point to this entity (FK_UlFace_CashUlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<CashUlFace> CashUlFaces { get; set; } // CashUlFace.FK_UlFace_CashUlFace
        /// <summary>
        /// Child DeclarationUls where [DeclarationUl].[IdUl] point to this entity (FK_DeclarationUl_UlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<DeclarationUl> DeclarationUls { get; set; } // DeclarationUl.FK_DeclarationUl_UlFace
        /// <summary>
        /// Child HistoriUlFaces where [HistoriUlFace].[IdUl] point to this entity (FK_HistoriUlFace_UlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<HistoriUlFace> HistoriUlFaces { get; set; } // HistoriUlFace.FK_HistoriUlFace_UlFace
        /// <summary>
        /// Child ImZmTrUls where [ImZmTrUl].[IdUl] point to this entity (FK_UlFace_ImZmTrUl)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ImZmTrUl> ImZmTrUls { get; set; } // ImZmTrUl.FK_UlFace_ImZmTrUl
        /// <summary>
        /// Child IndividualCardsUlFaces where [IndividualCardsUlFace].[IdUl] point to this entity (FK_IndividualCardsUlFace_UlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<IndividualCardsUlFace> IndividualCardsUlFaces { get; set; } // IndividualCardsUlFace.FK_IndividualCardsUlFace_UlFace
        /// <summary>
        /// Child RukAndUcrhs where [RukAndUcrh].[IdUl] point to this entity (FK_RukAndUcrh_UlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RukAndUcrh> RukAndUcrhs { get; set; } // RukAndUcrh.FK_RukAndUcrh_UlFace
        /// <summary>
        /// Child StrngthUlFaces where [StrngthUlFace].[IdUl] point to this entity (FK_UlFace_StrngthUlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<StrngthUlFace> StrngthUlFaces { get; set; } // StrngthUlFace.FK_UlFace_StrngthUlFace
        /// <summary>
        /// Child SvedAccoutingUlFaces where [SvedAccoutingUlFace].[IdUl] point to this entity (FK_UlFace_SvedAccoutingUlFace)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SvedAccoutingUlFace> SvedAccoutingUlFaces { get; set; } // SvedAccoutingUlFace.FK_UlFace_SvedAccoutingUlFace

        public UlFace()
        {
            DateCreate = System.DateTime.Now;
            BranchUlFaces = new System.Collections.Generic.List<BranchUlFace>();
            CashBankAllUlFaces = new System.Collections.Generic.List<CashBankAllUlFace>();
            CashUlFaces = new System.Collections.Generic.List<CashUlFace>();
            DeclarationUls = new System.Collections.Generic.List<DeclarationUl>();
            HistoriUlFaces = new System.Collections.Generic.List<HistoriUlFace>();
            ImZmTrUls = new System.Collections.Generic.List<ImZmTrUl>();
            IndividualCardsUlFaces = new System.Collections.Generic.List<IndividualCardsUlFace>();
            RukAndUcrhs = new System.Collections.Generic.List<RukAndUcrh>();
            StrngthUlFaces = new System.Collections.Generic.List<StrngthUlFace>();
            SvedAccoutingUlFaces = new System.Collections.Generic.List<SvedAccoutingUlFace>();
        }
    }

    // UlFaceAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceAll
    {
        public string StatusFull { get; set; } // StatusFull (Primary key) (length: 7)
        public long IdNum { get; set; } // IdNum (Primary key)
        public long Fid { get; set; } // Fid (Primary key)
        public string Inn { get; set; } // Inn (Primary key) (length: 12)
        public string NameFull { get; set; } // NameFull (Primary key) (length: 1024)
        public string Kpp { get; set; } // Kpp (length: 12)
        public string Ogrn { get; set; } // Ogrn (length: 18)
        public System.DateTime? DateOgrn { get; set; } // DateOgrn
        public string StatusUl { get; set; } // StatusUl (length: 1024)
        public string NameSmall { get; set; } // NameSmall (Primary key) (length: 1024)
        public string Address { get; set; } // Address (length: 1024)
    }

    #endregion

    #region POCO Configuration

    // AddUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AddUlFace>
    {
        public AddUlFaceConfiguration()
            : this("dbo")
        {
        }

        public AddUlFaceConfiguration(string schema)
        {
            ToTable("AddUlFace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InnUl).HasColumnName(@"InnUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.FullStatus).HasColumnName(@"FullStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // BranchUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BranchUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BranchUlFace>
    {
        public BranchUlFaceConfiguration()
            : this("dbo")
        {
        }

        public BranchUlFaceConfiguration(string schema)
        {
            ToTable("BranchUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DataCreateBranch).HasColumnName(@"DataCreateBranch").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataCloseBranch).HasColumnName(@"DataCloseBranch").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IndexAddress).HasColumnName(@"IndexAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.RegionAddress).HasColumnName(@"RegionAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DistrictAddress).HasColumnName(@"DistrictAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TownAddress).HasColumnName(@"TownAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.LocalityAddress).HasColumnName(@"LocalityAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StreetAddress).HasColumnName(@"StreetAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.HouseAddress).HasColumnName(@"HouseAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.BodyAddress).HasColumnName(@"BodyAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ApartmentAddress).HasColumnName(@"ApartmentAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.BranchUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_BranchUlFace
        }
    }

    // CashBankAllUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashBankAllUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CashBankAllUlFace>
    {
        public CashBankAllUlFaceConfiguration()
            : this("dbo")
        {
        }

        public CashBankAllUlFaceConfiguration(string schema)
        {
            ToTable("CashBankAllUlFace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.DateWay).HasColumnName(@"DateWay").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeNo).HasColumnName(@"CodeNo").HasColumnType("int").IsOptional();
            Property(x => x.DatePriem).HasColumnName(@"DatePriem").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NameBank).HasColumnName(@"NameBank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Bik).HasColumnName(@"Bik").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.InnBank).HasColumnName(@"InnBank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.KppBank).HasColumnName(@"KppBank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NumberCash).HasColumnName(@"NumberCash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Cash).HasColumnName(@"Cash").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateStartPeriod).HasColumnName(@"DateStartPeriod").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishPeriod).HasColumnName(@"DateFinishPeriod").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CashScoreStartPeriod).HasColumnName(@"CashScoreStartPeriod").HasColumnType("float").IsOptional();
            Property(x => x.CashScoreFinishPeriod).HasColumnName(@"CashScoreFinishPeriod").HasColumnType("float").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.CashBankAllUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_CashBankAllUlFace
        }
    }

    // CashUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CashUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CashUlFace>
    {
        public CashUlFaceConfiguration()
            : this("dbo")
        {
        }

        public CashUlFaceConfiguration(string schema)
        {
            ToTable("CashUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum, x.NameFull, x.CashNumber });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CashNumber).HasColumnName(@"CashNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DataOpenCash).HasColumnName(@"DataOpenCash").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataClosedCash).HasColumnName(@"DataClosedCash").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.TypeCash).HasColumnName(@"TypeCash").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.CashUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_CashUlFace
        }
    }

    // DeclarationData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationDataConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationData>
    {
        public DeclarationDataConfiguration()
            : this("dbo")
        {
        }

        public DeclarationDataConfiguration(string schema)
        {
            ToTable("DeclarationData", schema);
            HasKey(x => new { x.Id, x.RegNumDecl });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeString).HasColumnName(@"CodeString").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameParametr).HasColumnName(@"NameParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeParametr).HasColumnName(@"CodeParametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataFace).HasColumnName(@"DataFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataInspector).HasColumnName(@"DataInspector").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Error).HasColumnName(@"Error").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DeclarationUl).WithMany(b => b.DeclarationDatas).HasForeignKey(c => c.RegNumDecl).WillCascadeOnDelete(false); // FK_DeclarationData_DeclarationUl
        }
    }

    // DeclarationUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclarationUlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclarationUl>
    {
        public DeclarationUlConfiguration()
            : this("dbo")
        {
        }

        public DeclarationUlConfiguration(string schema)
        {
            ToTable("DeclarationUl", schema);
            HasKey(x => x.RegNumDecl);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.RegNumDecl).HasColumnName(@"RegNumDecl").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Psumm).HasColumnName(@"Psumm").HasColumnType("float").IsRequired();
            Property(x => x.Knd).HasColumnName(@"Knd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.VidDoc).HasColumnName(@"VidDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NumberKor).HasColumnName(@"NumberKor").HasColumnType("int").IsRequired();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.DeclarationUls).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_DeclarationUl_UlFace
        }
    }

    // Fields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Field>
    {
        public FieldConfiguration()
            : this("dbo")
        {
        }

        public FieldConfiguration(string schema)
        {
            ToTable("Fields", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTree).HasColumnName(@"IdTree").HasColumnType("int").IsOptional();
            Property(x => x.Fields).HasColumnName(@"Fields").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Tree).WithMany(b => b.Fields).HasForeignKey(c => c.IdTree).WillCascadeOnDelete(false); // FK_Tree_Fields
        }
    }

    // FlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FlFace>
    {
        public FlFaceConfiguration()
            : this("dbo")
        {
        }

        public FlFaceConfiguration(string schema)
        {
            ToTable("FlFace", schema);
            HasKey(x => x.IdFl);

            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFl).HasColumnName(@"NameFl").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // HistoriUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HistoriUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HistoriUlFace>
    {
        public HistoriUlFaceConfiguration()
            : this("dbo")
        {
        }

        public HistoriUlFaceConfiguration(string schema)
        {
            ToTable("HistoriUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum, x.KodeNo });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.KppObject).HasColumnName(@"KppObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.AddressObject).HasColumnName(@"AddressObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.KodeNo).HasColumnName(@"KodeNo").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateNoStart).HasColumnName(@"DateNoStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateNoFinish).HasColumnName(@"DateNoFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.HistoriUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_HistoriUlFace_UlFace
        }
    }

    // ImZmTrFl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrFlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImZmTrFl>
    {
        public ImZmTrFlConfiguration()
            : this("dbo")
        {
        }

        public ImZmTrFlConfiguration(string schema)
        {
            ToTable("ImZmTrFl", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired();
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ReasonSettingStart).HasColumnName(@"ReasonSettingStart").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateOne).HasColumnName(@"DateOne").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactStart).HasColumnName(@"DateFactStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.ReasonSettingFinish).HasColumnName(@"ReasonSettingFinish").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishNo).HasColumnName(@"DateFinishNo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactFinish).HasColumnName(@"DateFactFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.AddresObject).HasColumnName(@"AddresObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FlFace).WithMany(b => b.ImZmTrFls).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_ImZmTrFl_FlFace
            HasRequired(a => a.TypeObject).WithMany(b => b.ImZmTrFls).HasForeignKey(c => c.IdObject).WillCascadeOnDelete(false); // FK_TypeObject_ImZmTrFl
        }
    }

    // ImZmTrUl
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImZmTrUlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImZmTrUl>
    {
        public ImZmTrUlConfiguration()
            : this("dbo")
        {
        }

        public ImZmTrUlConfiguration(string schema)
        {
            ToTable("ImZmTrUl", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired();
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ReasonSettingStart).HasColumnName(@"ReasonSettingStart").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateOne).HasColumnName(@"DateOne").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactStart).HasColumnName(@"DateFactStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.ReasonSettingFinish).HasColumnName(@"ReasonSettingFinish").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishNo).HasColumnName(@"DateFinishNo").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactFinish).HasColumnName(@"DateFactFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.AddresObject).HasColumnName(@"AddresObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TypeObject).WithMany(b => b.ImZmTrUls).HasForeignKey(c => c.IdObject).WillCascadeOnDelete(false); // FK_TypeObject_ImZmTrUl
            HasRequired(a => a.UlFace).WithMany(b => b.ImZmTrUls).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_ImZmTrUl
        }
    }

    // IndividualCardsUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IndividualCardsUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IndividualCardsUlFace>
    {
        public IndividualCardsUlFaceConfiguration()
            : this("dbo")
        {
        }

        public IndividualCardsUlFaceConfiguration(string schema)
        {
            ToTable("IndividualCardsUlFace", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.ReportAll).HasColumnName(@"ReportAll").HasColumnType("xml").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.IndividualCardsUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_IndividualCardsUlFace_UlFace
        }
    }

    // InfoViewAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InfoViewAutomationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoViewAutomation>
    {
        public InfoViewAutomationConfiguration()
            : this("dbo")
        {
        }

        public InfoViewAutomationConfiguration(string schema)
        {
            ToTable("InfoViewAutomation", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameView).HasColumnName(@"NameView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameViewColumns).HasColumnName(@"NameViewColumns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InfoColumn).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.FormatView).HasColumnName(@"FormatView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.IsVisible).HasColumnName(@"IsVisible").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LogicsSelectAutomation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogicsSelectAutomationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogicsSelectAutomation>
    {
        public LogicsSelectAutomationConfiguration()
            : this("dbo")
        {
        }

        public LogicsSelectAutomationConfiguration(string schema)
        {
            ToTable("LogicsSelectAutomation", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SelectInfo).HasColumnName(@"SelectInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SelectedParametr).HasColumnName(@"SelectedParametr").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SelectUser).HasColumnName(@"SelectUser").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LogPreCheck
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LogPreCheckConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogPreCheck>
    {
        public LogPreCheckConfiguration()
            : this("dbo")
        {
        }

        public LogPreCheckConfiguration(string schema)
        {
            ToTable("LogPreCheck", schema);
            HasKey(x => new { x.Id, x.UserTabelNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserTabelNum).HasColumnName(@"UserTabelNum").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Method).HasColumnName(@"Method").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.StatusMethod).HasColumnName(@"StatusMethod").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ErrorLog).HasColumnName(@"ErrorLog").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Datacreate).HasColumnName(@"Datacreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ModelGetPost
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelGetPostConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelGetPost>
    {
        public ModelGetPostConfiguration()
            : this("dbo")
        {
        }

        public ModelGetPostConfiguration(string schema)
        {
            ToTable("ModelGetPost", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdTreModel).HasColumnName(@"IdTreModel").HasColumnType("int").IsRequired();
            Property(x => x.StatusModel).HasColumnName(@"StatusModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.AddUlFace).WithMany(b => b.ModelGetPosts).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_AddUlFace_ModelGetPost
            HasRequired(a => a.Tree).WithMany(b => b.ModelGetPosts).HasForeignKey(c => c.IdTreModel).WillCascadeOnDelete(false); // FK_Tree_ModelGetPost
        }
    }

    // ModelTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModelTreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelTree>
    {
        public ModelTreeConfiguration()
            : this("dbo")
        {
        }

        public ModelTreeConfiguration(string schema)
        {
            ToTable("ModelTree", schema);
            HasKey(x => new { x.Id, x.IdModel });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InnUl).HasColumnName(@"InnUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Tree).HasColumnName(@"Tree").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StatusModel).HasColumnName(@"StatusModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ParameterProcedureWeb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ParameterProcedureWebConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ParameterProcedureWeb>
    {
        public ParameterProcedureWebConfiguration()
            : this("dbo")
        {
        }

        public ParameterProcedureWebConfiguration(string schema)
        {
            ToTable("ParameterProcedureWeb", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SelectInfoModel).HasColumnName(@"SelectInfoModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SelectParameterTable).HasColumnName(@"SelectParameterTable").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ModelClassFind).HasColumnName(@"ModelClassFind").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ParameterProcedure).HasColumnName(@"ParameterProcedure").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SelectUser).HasColumnName(@"SelectUser").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // RukAndUcrh
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RukAndUcrhConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RukAndUcrh>
    {
        public RukAndUcrhConfiguration()
            : this("dbo")
        {
        }

        public RukAndUcrhConfiguration(string schema)
        {
            ToTable("RukAndUcrh", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired();
            Property(x => x.IdFl).HasColumnName(@"IdFl").HasColumnType("int").IsRequired();
            Property(x => x.NameFl).HasColumnName(@"NameFl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FlFace).WithMany(b => b.RukAndUcrhs).HasForeignKey(c => c.IdFl).WillCascadeOnDelete(false); // FK_RukAndUcrh_FlFace
            HasRequired(a => a.UlFace).WithMany(b => b.RukAndUcrhs).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_RukAndUcrh_UlFace
        }
    }

    // StrngthUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StrngthUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StrngthUlFace>
    {
        public StrngthUlFaceConfiguration()
            : this("dbo")
        {
        }

        public StrngthUlFaceConfiguration(string schema)
        {
            ToTable("StrngthUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DataDocument).HasColumnName(@"DataDocument").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StrngthFace).HasColumnName(@"StrngthFace").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.StrngthUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_StrngthUlFace
        }
    }

    // SvedAccoutingUlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SvedAccoutingUlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SvedAccoutingUlFace>
    {
        public SvedAccoutingUlFaceConfiguration()
            : this("dbo")
        {
        }

        public SvedAccoutingUlFaceConfiguration(string schema)
        {
            ToTable("SvedAccoutingUlFace", schema);
            HasKey(x => new { x.Id, x.IdNum });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsOptional();
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameObject).HasColumnName(@"NameObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.AddressObject).HasColumnName(@"AddressObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeNalog).HasColumnName(@"CodeNalog").HasColumnType("int").IsOptional();
            Property(x => x.DateBegin).HasColumnName(@"DateBegin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactBegin).HasColumnName(@"DateFactBegin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeSppuno).HasColumnName(@"CodeSPPUNO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CauseBegin).HasColumnName(@"CauseBegin").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateEnd).HasColumnName(@"DateEnd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFactEnd).HasColumnName(@"DateFactEnd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CodeSppunoEnd).HasColumnName(@"CodeSPPUNOEnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CauseEnd).HasColumnName(@"CauseEnd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.UlFace).WithMany(b => b.SvedAccoutingUlFaces).HasForeignKey(c => c.IdUl).WillCascadeOnDelete(false); // FK_UlFace_SvedAccoutingUlFace
        }
    }

    // TaxJournal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal>
    {
        public TaxJournalConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalConfiguration(string schema)
        {
            ToTable("TaxJournal", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.DateError).HasColumnName(@"DateError").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FullPath).HasColumnName(@"FullPath").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameFile).HasColumnName(@"NameFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournal121
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal121>
    {
        public TaxJournal121Configuration()
            : this("dbo")
        {
        }

        public TaxJournal121Configuration(string schema)
        {
            ToTable("TaxJournal121", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GlobalColor).HasColumnName(@"GlobalColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.GlobalProcessColor).HasColumnName(@"GlobalProcessColor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.ColorDoc).HasColumnName(@"ColorDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.RegNumDeclaration).HasColumnName(@"RegNumDeclaration").HasColumnType("int").IsOptional();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IdComplex).HasColumnName(@"IdComplex").HasColumnType("int").IsOptional();
            Property(x => x.DateStartCheck).HasColumnName(@"DateStartCheck").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishCheck).HasColumnName(@"DateFinishCheck").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStartDeclaration).HasColumnName(@"DateStartDeclaration").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishDeclaration).HasColumnName(@"DateFinishDeclaration").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Mime).HasColumnName(@"Mime").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournal121AutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournal121AutoWebPageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournal121AutoWebPage>
    {
        public TaxJournal121AutoWebPageConfiguration()
            : this("dbo")
        {
        }

        public TaxJournal121AutoWebPageConfiguration(string schema)
        {
            ToTable("TaxJournal121AutoWebPage", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RegNumDeclaration).HasColumnName(@"RegNumDeclaration").HasColumnType("int").IsOptional();
            Property(x => x.Period).HasColumnName(@"Period").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.God).HasColumnName(@"God").HasColumnType("int").IsOptional();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.DateStartCheck).HasColumnName(@"DateStartCheck").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishCheck).HasColumnName(@"DateFinishCheck").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateStartDeclaration).HasColumnName(@"DateStartDeclaration").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinishDeclaration).HasColumnName(@"DateFinishDeclaration").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.CounDay).HasColumnName(@"CounDay").HasColumnType("int").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournalAutoReport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournalAutoReport>
    {
        public TaxJournalAutoReportConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalAutoReportConfiguration(string schema)
        {
            ToTable("TaxJournalAutoReport", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"isTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"isMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"isLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaxJournalAutoWebPage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TaxJournalAutoWebPageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxJournalAutoWebPage>
    {
        public TaxJournalAutoWebPageConfiguration()
            : this("dbo")
        {
        }

        public TaxJournalAutoWebPageConfiguration(string schema)
        {
            ToTable("TaxJournalAutoWebPage", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDelo).HasColumnName(@"IdDelo").HasColumnType("int").IsOptional();
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateIzveshenie).HasColumnName(@"DateIzveshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsTks).HasColumnName(@"IsTks").HasColumnType("bit").IsOptional();
            Property(x => x.IsMail).HasColumnName(@"IsMail").HasColumnType("bit").IsOptional();
            Property(x => x.IsLk3).HasColumnName(@"IsLk3").HasColumnType("bit").IsOptional();
            Property(x => x.TypeDocument).HasColumnName(@"TypeDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MessageInfo).HasColumnName(@"MessageInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Extensions).HasColumnName(@"Extensions").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Tree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Tree>
    {
        public TreeConfiguration()
            : this("dbo")
        {
        }

        public TreeConfiguration(string schema)
        {
            ToTable("Tree", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Tree_).HasColumnName(@"Tree").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TypeTree).HasColumnName(@"TypeTree").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TypeObject
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TypeObjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeObject>
    {
        public TypeObjectConfiguration()
            : this("dbo")
        {
        }

        public TypeObjectConfiguration(string schema)
        {
            ToTable("TypeObject", schema);
            HasKey(x => x.IdObject);

            Property(x => x.IdObject).HasColumnName(@"IdObject").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TypeObject_).HasColumnName(@"TypeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // UlFace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UlFace>
    {
        public UlFaceConfiguration()
            : this("dbo")
        {
        }

        public UlFaceConfiguration(string schema)
        {
            ToTable("UlFace", schema);
            HasKey(x => x.IdUl);

            Property(x => x.IdUl).HasColumnName(@"IdUl").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired();
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired();
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Ogrn).HasColumnName(@"Ogrn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(18);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateResh).HasColumnName(@"DateResh").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateReshReorg).HasColumnName(@"DateReshReorg").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // UlFaceAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UlFaceAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UlFaceAll>
    {
        public UlFaceAllConfiguration()
            : this("dbo")
        {
        }

        public UlFaceAllConfiguration(string schema)
        {
            ToTable("UlFaceAll", schema);
            HasKey(x => new { x.StatusFull, x.IdNum, x.Fid, x.Inn, x.NameFull, x.NameSmall });

            Property(x => x.StatusFull).HasColumnName(@"StatusFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(7).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdNum).HasColumnName(@"IdNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fid).HasColumnName(@"Fid").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inn).HasColumnName(@"Inn").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameFull).HasColumnName(@"NameFull").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Kpp).HasColumnName(@"Kpp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Ogrn).HasColumnName(@"Ogrn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(18);
            Property(x => x.DateOgrn).HasColumnName(@"DateOgrn").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusUl).HasColumnName(@"StatusUl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameSmall).HasColumnName(@"NameSmall").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
        }
    }

    #endregion

}
// </auto-generated>

